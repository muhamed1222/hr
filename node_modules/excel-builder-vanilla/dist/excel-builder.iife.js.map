{"version":3,"file":"excel-builder.iife.js","sources":["../src/utilities/isTypeOf.ts","../src/utilities/escape.ts","../src/Excel/XMLDOM.ts","../src/Excel/Util.ts","../src/Excel/Drawing/AbsoluteAnchor.ts","../src/Excel/Drawing/Chart.ts","../src/utilities/uniqueId.ts","../src/Excel/Drawing/OneCellAnchor.ts","../src/Excel/Drawing/TwoCellAnchor.ts","../src/Excel/Drawing/Drawing.ts","../src/Excel/Drawing/Picture.ts","../src/Excel/Paths.ts","../src/Excel/RelationshipManager.ts","../src/Excel/Drawings.ts","../src/Excel/Pane.ts","../src/Excel/Positioning.ts","../src/Excel/SharedStrings.ts","../src/Excel/SheetView.ts","../src/utilities/pick.ts","../src/Excel/StyleSheet.ts","../src/Excel/Table.ts","../src/Excel/Worksheet.ts","../src/Excel/Workbook.ts","../src/factory.ts"],"sourcesContent":["export function isObject(value: unknown): value is object {\n  const type = typeof value;\n  return value != null && (type === 'object' || type === 'function');\n}\n\nexport function isPlainObject(value: unknown) {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(value) !== '[object Object]') {\n    return false;\n  }\n\n  /* v8 ignore next 4 */\n  const proto = Object.getPrototypeOf(value);\n  if (proto === null) {\n    return true;\n  }\n\n  const Ctor = Object.prototype.hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor === 'function' && Ctor instanceof Ctor && Function.prototype.call(Ctor) === Function.prototype.call(value);\n}\n\nexport function isString(value: any): value is string {\n  if (value != null && typeof value.valueOf() === 'string') {\n    return true;\n  }\n  return false;\n}\n","/** Lodash Util - Used to map characters to HTML entities. */\nconst htmlEscapes: { [char: string]: string } = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\n\n/**\n * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * corresponding HTML entities.\n *\n * **Note:** No other characters are escaped. To escape additional\n * characters use a third-party library like [_he_](https://mths.be/he).\n *\n * Though the \">\" character is escaped for symmetry, characters like\n * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n * unless they're part of a tag or unquoted attribute value. See\n * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n * (under \"semi-related fun fact\") for more details.\n *\n * When working with HTML you should always\n * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n * XSS vectors.\n *\n * @since 0.1.0\n * @category String\n * @param {string} [str=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @see escapeRegExp, unescape\n * @example\n *\n * escape('fred, barney, & pebbles')\n * // => 'fred, barney, &amp; pebbles'\n */\nexport const htmlEscape = (str: string) => {\n  if (typeof str !== 'string') {\n    str = `${str}`;\n  }\n  return str.replace(/[&<>\"']/g, m => htmlEscapes[m]);\n};\n","import { htmlEscape } from '../utilities/escape.js';\n\ntype XMLNodeOption = {\n  attributes?: {\n    [key: string]: any;\n  };\n  children?: XMLNode[];\n  nodeName: string;\n  nodeValue?: string;\n  type?: string;\n};\n\nexport class XMLDOM {\n  documentElement: XMLNode;\n\n  constructor(ns: string | null, rootNodeName: string) {\n    this.documentElement = this.createElement(rootNodeName);\n    this.documentElement.setAttribute('xmlns', ns);\n  }\n\n  createElement(name: string) {\n    return new XMLNode({\n      nodeName: name,\n    });\n  }\n\n  createTextNode(text: string) {\n    return new TextNode(text);\n  }\n\n  toString() {\n    return this.documentElement.toString();\n  }\n\n  static Node = {\n    Create: (config: any) => {\n      switch (config.type) {\n        case 'XML':\n          return new XMLNode(config);\n        case 'TEXT':\n          return new TextNode(config.nodeValue);\n        default:\n          return null;\n      }\n    },\n  };\n}\n\nclass TextNode {\n  nodeValue: any;\n\n  constructor(text: string) {\n    this.nodeValue = text;\n  }\n\n  toJSON() {\n    return {\n      nodeValue: this.nodeValue,\n      type: 'TEXT',\n    };\n  }\n\n  toString() {\n    return htmlEscape(this.nodeValue);\n  }\n}\n\nexport class XMLNode {\n  nodeName = '';\n  children: XMLNode[];\n  nodeValue: string;\n  attributes: { [key: string]: any };\n  firstChild?: XMLNode;\n\n  constructor(config: XMLNodeOption) {\n    this.nodeName = config.nodeName;\n    this.children = [];\n    this.nodeValue = config.nodeValue || '';\n    this.attributes = {};\n\n    if (config.children) {\n      for (let i = 0, l = config.children.length; i < l; i++) {\n        this.appendChild(XMLDOM.Node.Create(config.children[i]));\n      }\n    }\n\n    if (config.attributes) {\n      for (const attr in config.attributes) {\n        if (config.attributes.hasOwnProperty(attr)) {\n          this.setAttribute(attr, config.attributes[attr]);\n        }\n      }\n    }\n  }\n\n  toString() {\n    let string = `<${this.nodeName}`;\n    for (const attr in this.attributes) {\n      if (this.attributes.hasOwnProperty(attr)) {\n        string = `${string} ${attr}=\\\"${htmlEscape(this.attributes[attr])}\\\"`;\n      }\n    }\n\n    let childContent = '';\n    for (let i = 0, l = this.children.length; i < l; i++) {\n      childContent += this.children[i].toString();\n    }\n\n    if (childContent) {\n      string += `>${childContent}</${this.nodeName}>`;\n    } else {\n      string += '/>';\n    }\n\n    return string;\n  }\n\n  toJSON() {\n    const children: any[] = [];\n    for (let i = 0, l = this.children.length; i < l; i++) {\n      children.push(this.children[i].toJSON());\n    }\n    return {\n      nodeName: this.nodeName,\n      children: children,\n      nodeValue: this.nodeValue,\n      attributes: this.attributes,\n      type: 'XML',\n    };\n  }\n\n  setAttribute(name: string, val: any) {\n    if (val === null) {\n      delete this.attributes[name];\n      delete (this as any)[name];\n      return;\n    }\n    this.attributes[name] = val;\n    (this as any)[name] = val;\n  }\n\n  appendChild(child: any) {\n    this.children.push(child);\n    this.firstChild = this.children[0];\n  }\n\n  cloneNode(_deep?: boolean) {\n    return new XMLNode(this.toJSON());\n  }\n}\n","import { isPlainObject } from '../utilities/isTypeOf.js';\nimport { XMLDOM, type XMLNode } from './XMLDOM.js';\n\n/**\n * @module Excel/Util\n */\n\nexport class Util {\n  static _idSpaces: { [space: string]: number } = {};\n\n  /**\n   * Returns a number based on a namespace. So, running with 'Picture' will return 1. Run again, you will get 2. Run with 'Foo', you'll get 1.\n   * @param {String} space\n   * @returns {Number}\n   */\n  static uniqueId(space: string) {\n    if (!Util._idSpaces[space]) {\n      Util._idSpaces[space] = 1;\n    }\n    return Util._idSpaces[space]++;\n  }\n\n  /**\n   * Attempts to create an XML document. After some investigation, using the 'fake' document\n   * is significantly faster than creating an actual XML document, so we're going to go with\n   * that. Besides, it just makes it easier to port to node.\n   *\n   * Takes a namespace to start the xml file in, as well as the root element\n   * of the xml file.\n   *\n   * @param {type} ns\n   * @param {type} base\n   * @returns {@new;XMLDOM}\n   */\n  static createXmlDoc(ns: string, base: string) {\n    return new XMLDOM(ns || null, base);\n  }\n\n  /**\n   * Creates an xml node (element). Used to simplify some calls, as IE is\n   * very particular about namespaces and such.\n   *\n   * @param {XMLDOM} doc An xml document (actual DOM or fake DOM, not a string)\n   * @param {type} name The name of the element\n   * @param {type} attributes\n   * @returns {XML Node}\n   */\n  static createElement(doc: XMLDOM, name: string, attributes?: any) {\n    const el = doc.createElement(name);\n    attributes = attributes || [];\n    let i = attributes.length;\n    while (i--) {\n      el.setAttribute(attributes[i][0], attributes[i][1]);\n    }\n    return el;\n  }\n\n  /**\n   * This is sort of slow, but it's a huge convenience method for the code. It probably shouldn't be used\n   * in high repetition areas.\n   *\n   * @param {XMLDoc} doc\n   * @param {Object} attrs\n   */\n  static setAttributesOnDoc(doc: XMLNode, attrs: { [key: string]: any }) {\n    for (let [k, v] of Object.entries(attrs)) {\n      if (isPlainObject(v)) {\n        if (v.v !== null && v.v !== undefined) {\n          switch (v.type) {\n            case Boolean:\n              v = v.v ? '1' : '0';\n              break;\n          }\n        } else {\n          v = null;\n        }\n      }\n      if (v !== null && v !== undefined) {\n        doc.setAttribute(k, v);\n      }\n    }\n  }\n\n  static LETTER_REFS: any = {};\n\n  static positionToLetterRef(x: number, y: number | string) {\n    let digit = 1;\n    let index: number;\n    let num = x;\n    let string = '';\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    if (Util.LETTER_REFS[x]) {\n      return Util.LETTER_REFS[x].concat(y);\n    }\n    while (num > 0) {\n      num -= Math.pow(26, digit - 1);\n      index = num % Math.pow(26, digit);\n      num -= index;\n      index = index / Math.pow(26, digit - 1);\n      string = alphabet.charAt(index) + string;\n      digit += 1;\n    }\n    Util.LETTER_REFS[x] = string;\n    return string.concat(String(y));\n  }\n\n  static schemas = {\n    worksheet: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet',\n    sharedStrings: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings',\n    stylesheet: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles',\n    relationships: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n    relationshipPackage: 'http://schemas.openxmlformats.org/package/2006/relationships',\n    contentTypes: 'http://schemas.openxmlformats.org/package/2006/content-types',\n    spreadsheetml: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n    markupCompat: 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n    x14ac: 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\n    officeDocument: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument',\n    package: 'http://schemas.openxmlformats.org/package/2006/relationships',\n    table: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/table',\n    spreadsheetDrawing: 'http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing',\n    drawing: 'http://schemas.openxmlformats.org/drawingml/2006/main',\n    drawingRelationship: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing',\n    image: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/image',\n    chart: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart',\n    hyperlink: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink',\n  };\n}\n","import type { AnchorOption } from './Drawing.js';\nimport { Util } from '../Util.js';\nimport type { XMLDOM } from '../XMLDOM.js';\n\n/**\n *\n * @param {Object} config\n * @param {Number} config.x X offset in EMU's\n * @param {Number} config.y Y offset in EMU's\n * @param {Number} config.width Width in EMU's\n * @param {Number} config.height Height in EMU's\n * @constructor\n */\nexport class AbsoluteAnchor {\n  x: number | null = null;\n  y: number | null = null;\n  width: number | null = null;\n  height: number | null = null;\n\n  constructor(config: AnchorOption) {\n    if (config) {\n      this.setPos(config.x, config.y);\n      this.setDimensions(config.width, config.height);\n    }\n  }\n\n  /**\n   * Sets the X and Y offsets.\n   *\n   * @param {Number} x\n   * @param {Number} y\n   * @returns {undefined}\n   */\n  setPos(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Sets the width and height of the image.\n   *\n   * @param {Number} width\n   * @param {Number} height\n   * @returns {undefined}\n   */\n  setDimensions(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  toXML(xmlDoc: XMLDOM, content: any) {\n    const root = Util.createElement(xmlDoc, 'xdr:absoluteAnchor');\n    const pos = Util.createElement(xmlDoc, 'xdr:pos');\n    pos.setAttribute('x', this.x);\n    pos.setAttribute('y', this.y);\n    root.appendChild(pos);\n\n    const dimensions = Util.createElement(xmlDoc, 'xdr:ext');\n    dimensions.setAttribute('cx', this.width);\n    dimensions.setAttribute('cy', this.height);\n    root.appendChild(dimensions);\n\n    root.appendChild(content);\n\n    root.appendChild(Util.createElement(xmlDoc, 'xdr:clientData'));\n    return root;\n  }\n}\n","export class Chart {}\n","/** Lodash Util - Used to generate unique IDs. */\nconst idCounter: { [prefix: string]: number } = {};\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @since 0.1.0\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @see random\n * @example\n *\n * uniqueId('contact_')\n * // => 'contact_104'\n *\n * uniqueId()\n * // => '105'\n */\nexport function uniqueId(prefix = '$lodash$') {\n  if (!idCounter[prefix]) {\n    idCounter[prefix] = 0;\n  }\n\n  const id = ++idCounter[prefix];\n  if (prefix === '$lodash$') {\n    return `${id}`;\n  }\n\n  return `${prefix}${id}`;\n}\n","import type { AnchorOption } from './Drawing.js';\nimport { Util } from '../Util.js';\nimport type { XMLDOM } from '../XMLDOM.js';\n\n/**\n *\n * @param {Object} config\n * @param {Number} config.x The cell column number that the top left of the picture will start in\n * @param {Number} config.y The cell row number that the top left of the picture will start in\n * @param {Number} config.width Width in EMU's\n * @param {Number} config.height Height in EMU's\n * @constructor\n */\nexport class OneCellAnchor {\n  x: number | null = null;\n  y: number | null = null;\n  xOff: boolean | null = null;\n  yOff: boolean | null = null;\n  width: number | null = null;\n  height: number | null = null;\n\n  constructor(config: AnchorOption) {\n    if (config) {\n      this.setPos(config.x, config.y, config.xOff, config.yOff);\n      this.setDimensions(config.width, config.height);\n    }\n  }\n\n  setPos(x: number, y: number, xOff?: boolean, yOff?: boolean) {\n    this.x = x;\n    this.y = y;\n    if (xOff !== undefined) {\n      this.xOff = xOff;\n    }\n    if (yOff !== undefined) {\n      this.yOff = yOff;\n    }\n  }\n\n  setDimensions(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  toXML(xmlDoc: XMLDOM, content: any) {\n    const root = Util.createElement(xmlDoc, 'xdr:oneCellAnchor');\n    const from = Util.createElement(xmlDoc, 'xdr:from');\n    const fromCol = Util.createElement(xmlDoc, 'xdr:col');\n    fromCol.appendChild(xmlDoc.createTextNode(String(this.x)));\n    const fromColOff = Util.createElement(xmlDoc, 'xdr:colOff');\n    fromColOff.appendChild(xmlDoc.createTextNode(String(this.xOff || 0)));\n    const fromRow = Util.createElement(xmlDoc, 'xdr:row');\n    fromRow.appendChild(xmlDoc.createTextNode(String(this.y)));\n    const fromRowOff = Util.createElement(xmlDoc, 'xdr:rowOff');\n    fromRowOff.appendChild(xmlDoc.createTextNode(String(this.yOff || 0)));\n    from.appendChild(fromCol);\n    from.appendChild(fromColOff);\n    from.appendChild(fromRow);\n    from.appendChild(fromRowOff);\n\n    root.appendChild(from);\n\n    const dimensions = Util.createElement(xmlDoc, 'xdr:ext');\n    dimensions.setAttribute('cx', String(this.width));\n    dimensions.setAttribute('cy', String(this.height));\n    root.appendChild(dimensions);\n    root.appendChild(content);\n\n    root.appendChild(Util.createElement(xmlDoc, 'xdr:clientData'));\n    return root;\n  }\n}\n","import type { DualAnchorOption } from './Drawing.js';\nimport { Util } from '../Util.js';\nimport type { XMLDOM } from '../XMLDOM.js';\n\nexport class TwoCellAnchor {\n  from: any = { xOff: 0, yOff: 0 };\n  to: any = { xOff: 0, yOff: 0 };\n\n  constructor(config: DualAnchorOption) {\n    if (config) {\n      this.setFrom(config.from.x, config.from.y, config.to.xOff, config.to.yOff);\n      this.setTo(config.to.x, config.to.y, config.to.xOff, config.to.yOff);\n    }\n  }\n\n  setFrom(x: number, y: number, xOff?: boolean, yOff?: boolean) {\n    this.from.x = x;\n    this.from.y = y;\n    if (xOff !== undefined) {\n      this.from.xOff = xOff;\n    }\n    if (yOff !== undefined) {\n      this.from.yOff = xOff;\n    }\n  }\n\n  setTo(x: number, y: number, xOff?: boolean, yOff?: boolean) {\n    this.to.x = x;\n    this.to.y = y;\n    if (xOff !== undefined) {\n      this.to.xOff = xOff;\n    }\n    if (yOff !== undefined) {\n      this.to.yOff = xOff;\n    }\n  }\n\n  toXML(xmlDoc: XMLDOM, content: any) {\n    const root = Util.createElement(xmlDoc, 'xdr:twoCellAnchor');\n\n    const from = Util.createElement(xmlDoc, 'xdr:from');\n    const fromCol = Util.createElement(xmlDoc, 'xdr:col');\n    fromCol.appendChild(xmlDoc.createTextNode(this.from.x));\n    const fromColOff = Util.createElement(xmlDoc, 'xdr:colOff');\n    fromColOff.appendChild(xmlDoc.createTextNode(this.from.xOff));\n    const fromRow = Util.createElement(xmlDoc, 'xdr:row');\n    fromRow.appendChild(xmlDoc.createTextNode(this.from.y));\n    const fromRowOff = Util.createElement(xmlDoc, 'xdr:rowOff');\n    fromRowOff.appendChild(xmlDoc.createTextNode(this.from.yOff));\n\n    from.appendChild(fromCol);\n    from.appendChild(fromColOff);\n    from.appendChild(fromRow);\n    from.appendChild(fromRowOff);\n\n    const to = Util.createElement(xmlDoc, 'xdr:to');\n    const toCol = Util.createElement(xmlDoc, 'xdr:col');\n    toCol.appendChild(xmlDoc.createTextNode(this.to.x));\n    const toColOff = Util.createElement(xmlDoc, 'xdr:colOff');\n    toColOff.appendChild(xmlDoc.createTextNode(this.from.xOff));\n    const toRow = Util.createElement(xmlDoc, 'xdr:row');\n    toRow.appendChild(xmlDoc.createTextNode(this.to.y));\n    const toRowOff = Util.createElement(xmlDoc, 'xdr:rowOff');\n    toRowOff.appendChild(xmlDoc.createTextNode(this.from.yOff));\n\n    to.appendChild(toCol);\n    to.appendChild(toColOff);\n    to.appendChild(toRow);\n    to.appendChild(toRowOff);\n\n    root.appendChild(from);\n    root.appendChild(to);\n\n    root.appendChild(content);\n\n    root.appendChild(Util.createElement(xmlDoc, 'xdr:clientData'));\n    return root;\n  }\n}\n","import { uniqueId } from '../../utilities/uniqueId.js';\nimport { AbsoluteAnchor } from './AbsoluteAnchor.js';\nimport { OneCellAnchor } from './OneCellAnchor.js';\nimport { TwoCellAnchor } from './TwoCellAnchor.js';\n// import { Picture } from './Picture.js';\n\nexport interface AnchorOption {\n  /** X offset in EMU's */\n  x: number;\n  /** Y offset in EMU's */\n  y: number;\n  xOff?: boolean;\n  yOff?: boolean;\n  /** Width in EMU's */\n  height: number;\n  /** Height in EMU's */\n  width: number;\n  drawing?: Drawing;\n}\n\nexport interface DualAnchorOption {\n  to: AnchorOption;\n  from: AnchorOption;\n  drawing?: Drawing;\n}\n\n/**\n * This is mostly a global spot where all of the relationship managers can get and set\n * path information from/to.\n * @module Excel/Drawing\n */\nexport class Drawing {\n  anchor!: AbsoluteAnchor | OneCellAnchor | TwoCellAnchor;\n  id = uniqueId('Drawing');\n\n  /**\n   *\n   * @param {String} type Can be 'absoluteAnchor', 'oneCellAnchor', or 'twoCellAnchor'.\n   * @param {Object} config Shorthand - pass the created anchor coords that can normally be used to construct it.\n   * @returns {Anchor}\n   */\n  // TODO: couldn't get function override working, but hopefully in the future\n  // createAnchor(type: 'absoluteAnchor', config: AnchorOption): AbsoluteAnchor;\n  // createAnchor(type: 'oneCellAnchor', config: AnchorOption): OneCellAnchor;\n  // createAnchor(type: 'twoCellAnchor', config: DualAnchorOption): TwoCellAnchor;\n  createAnchor(type: 'absoluteAnchor' | 'oneCellAnchor' | 'twoCellAnchor', config: any): AbsoluteAnchor | OneCellAnchor | TwoCellAnchor {\n    config ??= {} as AnchorOption | DualAnchorOption;\n    config.drawing = this;\n    switch (type) {\n      case 'absoluteAnchor':\n        this.anchor = new AbsoluteAnchor(config as AnchorOption);\n        break;\n      case 'oneCellAnchor':\n        this.anchor = new OneCellAnchor(config as AnchorOption);\n        break;\n      case 'twoCellAnchor':\n        this.anchor = new TwoCellAnchor(config as DualAnchorOption);\n        break;\n    }\n    return this.anchor;\n  }\n}\n","import { Drawing } from './Drawing.js';\nimport { uniqueId } from '../../utilities/uniqueId.js';\nimport { Util } from '../Util.js';\nimport type { MediaMeta } from '../Workbook.js';\nimport type { XMLDOM } from '../XMLDOM.js';\n\nexport class Picture extends Drawing {\n  id = uniqueId('Picture');\n  pictureId = Util.uniqueId('Picture');\n  fill: any = {};\n  mediaData: MediaMeta | null = null;\n  description = '';\n\n  constructor() {\n    super();\n    // Picture.prototype = new Drawing();\n    this.id = uniqueId('Picture');\n    this.pictureId = Util.uniqueId('Picture');\n  }\n\n  setMedia(mediaRef: MediaMeta) {\n    this.mediaData = mediaRef;\n  }\n\n  setDescription(description: string) {\n    this.description = description;\n  }\n\n  setFillType(type: string) {\n    this.fill.type = type;\n  }\n\n  setFillConfig(config: any) {\n    Object.assign(this.fill, config);\n  }\n\n  getMediaType(): keyof typeof Util.schemas {\n    return 'image';\n  }\n\n  getMediaData() {\n    return this.mediaData as MediaMeta;\n  }\n\n  setRelationshipId(rId: string) {\n    this.mediaData!.rId = rId;\n  }\n\n  toXML(xmlDoc: XMLDOM) {\n    const pictureNode = Util.createElement(xmlDoc, 'xdr:pic');\n\n    const nonVisibleProperties = Util.createElement(xmlDoc, 'xdr:nvPicPr');\n\n    const nameProperties = Util.createElement(xmlDoc, 'xdr:cNvPr', [\n      ['id', this.pictureId],\n      ['name', this.mediaData!.fileName],\n      ['descr', this.description || ''],\n    ]);\n    nonVisibleProperties.appendChild(nameProperties);\n    const nvPicProperties = Util.createElement(xmlDoc, 'xdr:cNvPicPr');\n    nvPicProperties.appendChild(\n      Util.createElement(xmlDoc, 'a:picLocks', [\n        ['noChangeAspect', '1'],\n        ['noChangeArrowheads', '1'],\n      ]),\n    );\n    nonVisibleProperties.appendChild(nvPicProperties);\n    pictureNode.appendChild(nonVisibleProperties);\n    const pictureFill = Util.createElement(xmlDoc, 'xdr:blipFill');\n    pictureFill.appendChild(\n      Util.createElement(xmlDoc, 'a:blip', [\n        ['xmlns:r', Util.schemas.relationships],\n        ['r:embed', this.mediaData!.rId],\n      ]),\n    );\n    pictureFill.appendChild(Util.createElement(xmlDoc, 'a:srcRect'));\n    const stretch = Util.createElement(xmlDoc, 'a:stretch');\n    stretch.appendChild(Util.createElement(xmlDoc, 'a:fillRect'));\n    pictureFill.appendChild(stretch);\n    pictureNode.appendChild(pictureFill);\n\n    const shapeProperties = Util.createElement(xmlDoc, 'xdr:spPr', [['bwMode', 'auto']]);\n\n    const transform2d = Util.createElement(xmlDoc, 'a:xfrm');\n    shapeProperties.appendChild(transform2d);\n\n    const presetGeometry = Util.createElement(xmlDoc, 'a:prstGeom', [['prst', 'rect']]);\n    shapeProperties.appendChild(presetGeometry);\n\n    pictureNode.appendChild(shapeProperties);\n    //            <xdr:spPr bwMode=\"auto\">\n    //                <a:xfrm>\n    //                    <a:off x=\"1\" y=\"1\"/>\n    //                    <a:ext cx=\"1640253\" cy=\"1885949\"/>\n    //                </a:xfrm>\n    //                <a:prstGeom prst=\"rect\">\n    //                    <a:avLst/>\n    //                </a:prstGeom>\n    //                <a:noFill/>\n    //                <a:extLst>\n    //                    <a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\n    //                        <a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\n    //                            <a:solidFill>\n    //                                <a:srgbClr val=\"FFFFFF\"/>\n    //                            </a:solidFill>\n    //                        </a14:hiddenFill>\n    //                    </a:ext>\n    //                </a:extLst>\n    //            </xdr:spPr>\n    //\n\n    // TODO: add back extends Drawing and the following\n    return this.anchor.toXML(xmlDoc, pictureNode);\n  }\n}\n","/**\n * This is mostly a global spot where all of the relationship managers can get and set\n * path information from/to.\n * @module Excel/Paths\n */\nexport const Paths: {\n  [path: string]: string;\n} = {};\n","import { uniqueId } from '../utilities/uniqueId.js';\nimport { Paths } from './Paths.js';\nimport { Util } from './Util.js';\n\ntype Relation = {\n  [id: string]: {\n    id: string;\n    schema: string;\n    object: any;\n    data?: {\n      id: number;\n      schema: string;\n      object: any;\n    };\n  };\n};\n\n/**\n * @module Excel/RelationshipManager\n */\nexport class RelationshipManager {\n  relations: Relation = {};\n  lastId = 1;\n\n  constructor() {\n    uniqueId('rId'); // priming\n  }\n\n  importData(data: { relations: Relation; lastId: number }) {\n    this.relations = data.relations;\n    this.lastId = data.lastId;\n  }\n\n  exportData() {\n    return {\n      relations: this.relations,\n      lastId: this.lastId,\n    };\n  }\n\n  addRelation(object: { id: string }, type: keyof typeof Util.schemas) {\n    this.relations[object.id] = {\n      id: uniqueId('rId'),\n      schema: Util.schemas[type],\n      object,\n    };\n    return this.relations[object.id].id;\n  }\n\n  getRelationshipId(object: { id: string }) {\n    return this.relations[object.id] ? this.relations[object.id].id : null;\n  }\n\n  toXML() {\n    const doc = Util.createXmlDoc(Util.schemas.relationshipPackage, 'Relationships');\n    const relationships = doc.documentElement;\n\n    for (const [id, data] of Object.entries(this.relations)) {\n      const relationship = Util.createElement(doc, 'Relationship', [\n        ['Id', data.id],\n        ['Type', data.schema],\n        ['Target', data.object.target || Paths[id]],\n      ]);\n      if (data.object.targetMode) {\n        relationship.setAttribute('TargetMode', data.object.targetMode);\n      }\n      relationships.appendChild(relationship);\n    }\n    return doc;\n  }\n}\n","import { uniqueId } from '../utilities/uniqueId.js';\nimport type { Drawing } from './Drawing/Drawing.js';\nimport type { Picture } from './Drawing/Picture.js';\nimport { RelationshipManager } from './RelationshipManager.js';\nimport { Util } from './Util.js';\n\n/**\n * @module Excel/Drawings\n */\n\nexport class Drawings {\n  drawings: (Drawing | Picture)[] = [];\n  relations = new RelationshipManager();\n  id = uniqueId('Drawings');\n\n  /**\n   * Adds a drawing (more likely a subclass of a Drawing) to the 'Drawings' for a particular worksheet.\n   *\n   * @param {Drawing} drawing\n   * @returns {undefined}\n   */\n  addDrawing(drawing: Drawing) {\n    this.drawings.push(drawing);\n  }\n\n  getCount() {\n    return this.drawings.length;\n  }\n\n  toXML() {\n    const doc = Util.createXmlDoc(Util.schemas.spreadsheetDrawing, 'xdr:wsDr');\n    const drawings = doc.documentElement;\n    drawings.setAttribute('xmlns:a', Util.schemas.drawing);\n    drawings.setAttribute('xmlns:r', Util.schemas.relationships);\n    drawings.setAttribute('xmlns:xdr', Util.schemas.spreadsheetDrawing);\n\n    for (let i = 0, l = this.drawings.length; i < l; i++) {\n      let rId = this.relations.getRelationshipId((this.drawings[i] as Picture).getMediaData());\n      if (!rId) {\n        rId = this.relations.addRelation((this.drawings[i] as Picture).getMediaData(), (this.drawings[i] as Picture).getMediaType()); //chart\n      }\n      (this.drawings[i] as Picture).setRelationshipId(rId);\n      drawings.appendChild((this.drawings[i] as Picture).toXML(doc));\n    }\n    return doc;\n  }\n}\n","/**\n * @module Excel/Pane\n *\n * https://msdn.microsoft.com/en-us/library/documentformat.openxml.spreadsheet.pane%28v=office.14%29.aspx\n */\n\nimport type { XMLDOM } from './XMLDOM.js';\n\nexport class Pane {\n  /*\n    Possible Values:\n     null\n     split\tSplit\n     frozen\tFrozen\n     frozenSplit\tFrozen Split\n     http://www.datypic.com/sc/ooxml/t-ssml_ST_PaneState.html\n     */\n  state: null | 'split' | 'frozen' | 'frozenSplit' = null;\n  xSplit: number | null = null;\n  ySplit: number | null = null;\n  activePane = 'bottomRight';\n  topLeftCell: number | string | null = null;\n  _freezePane!: { xSplit: number; ySplit: number; cell: string };\n\n  freezePane(column: number, row: number, cell: string) {\n    this._freezePane = { xSplit: column, ySplit: row, cell };\n  }\n\n  exportXML(doc: XMLDOM) {\n    const pane = doc.createElement('pane');\n\n    if (this.state !== null) {\n      pane.setAttribute('xSplit', this._freezePane.xSplit);\n      pane.setAttribute('ySplit', this._freezePane.ySplit);\n      pane.setAttribute('topLeftCell', this._freezePane.cell);\n      pane.setAttribute('activePane', 'bottomRight');\n      pane.setAttribute('state', 'frozen');\n    }\n    return pane;\n  }\n}\n","/**\n * Converts pixel sizes to 'EMU's, which is what Open XML uses.\n *\n * @todo clean this up. Code borrowed from http://polymathprogrammer.com/2009/10/22/english-metric-units-and-open-xml/,\n * but not sure that it's going to be as accurate as it needs to be.\n *\n * @param int pixels\n * @returns int\n */\nexport class Positioning {\n  static pixelsToEMUs(pixels: number) {\n    return Math.round((pixels * 914400) / 96);\n  }\n}\n","import { uniqueId } from '../utilities/uniqueId.js';\nimport { Util } from './Util.js';\n\n/**\n * @module Excel/SharedStrings\n */\nexport class SharedStrings {\n  strings: { [key: string]: number } = {};\n  stringArray: string[] = [];\n  id = uniqueId('SharedStrings');\n\n  /**\n   * Adds a string to the shared string file, and returns the ID of the\n   * string which can be used to reference it in worksheets.\n   *\n   * @param str {String}\n   * @return int\n   */\n  addString(str: string) {\n    this.strings[str] = this.stringArray.length;\n    this.stringArray[this.stringArray.length] = str;\n    return this.strings[str];\n  }\n\n  exportData() {\n    return this.strings;\n  }\n\n  toXML() {\n    const doc = Util.createXmlDoc(Util.schemas.spreadsheetml, 'sst');\n    const sharedStringTable = doc.documentElement;\n    this.stringArray.reverse();\n    let l = this.stringArray.length;\n    sharedStringTable.setAttribute('count', l);\n    sharedStringTable.setAttribute('uniqueCount', l);\n\n    const template = doc.createElement('si');\n    const templateValue = doc.createElement('t');\n    templateValue.appendChild(doc.createTextNode('--placeholder--'));\n    template.appendChild(templateValue);\n    const strings = this.stringArray;\n\n    while (l--) {\n      const clone = template.cloneNode(true);\n      if (typeof strings[l] === 'string' && strings[l].match(/\\s+/)) {\n        clone.firstChild!.setAttribute('xml:space', 'preserve');\n      }\n      clone.firstChild!.firstChild!.nodeValue = strings[l];\n      sharedStringTable.appendChild(clone);\n    }\n\n    return doc;\n  }\n}\n","import { Pane } from './Pane.js';\nimport { Util } from './Util.js';\nimport type { XMLDOM } from './XMLDOM.js';\n\ninterface SheetViewOption {\n  pane?: Pane;\n}\n\n/**\n * @module Excel/SheetView\n * https://msdn.microsoft.com/en-us/library/documentformat.openxml.spreadsheet.sheetview%28v=office.14%29.aspx\n *\n */\nexport class SheetView {\n  pane: Pane;\n  showZeros: boolean | null = null; // Default\n  defaultGridColor: string | null = null;\n  colorId: number | null = null;\n  rightToLeft: boolean | null = null;\n  showFormulas: boolean | null = null;\n  showGridLines: boolean | null = null;\n  showOutlineSymbols: boolean | null = null;\n  showRowColHeaders: boolean | null = null;\n  showRuler: boolean | null = null;\n  showWhiteSpace: boolean | null = null;\n  tabSelected: boolean | null = null;\n  topLeftCell: boolean | null = null;\n  viewType = null; // http://www.datypic.com/sc/ooxml/t-ssml_ST_SheetViewType.html\n  windowProtection: boolean | null = null;\n  zoomScale: boolean | null = null;\n  zoomScaleNormal: any = null;\n  zoomScalePageLayoutView: any = null;\n  zoomScaleSheetLayoutView: any = null;\n\n  constructor(config?: SheetViewOption) {\n    const conf = config || {};\n    this.pane = conf.pane || new Pane();\n  }\n\n  /**\n   * Added froze pane\n   * @param column - column number: 0, 1, 2 ...\n   * @param row - row number: 0, 1, 2 ...\n   * @param cell - 'A1'\n   * @deprecated\n   */\n  freezePane(column: number, row: number, cell: string) {\n    this.pane.state = 'frozen';\n    this.pane.xSplit = column;\n    this.pane.ySplit = row;\n    this.pane.topLeftCell = cell;\n  }\n\n  exportXML(doc: XMLDOM) {\n    const sheetViews = doc.createElement('sheetViews');\n    const sheetView = doc.createElement('sheetView');\n\n    Util.setAttributesOnDoc(sheetView, {\n      //TODO apparent you can add 'book views'.. investigate what these are\n      workbookViewId: 0,\n      showZeros: { v: this.showZeros, type: Boolean },\n      defaultGridColor: { v: this.defaultGridColor, type: Boolean },\n      //TODO: I have no idea what this even is :\\\n      colorId: this.colorId,\n      rightToLeft: { v: this.rightToLeft, type: Boolean },\n      showFormulas: { v: this.showFormulas, type: Boolean },\n      showGridLines: { v: this.showGridLines, type: Boolean },\n      showOutlineSymbols: { v: this.showOutlineSymbols, type: Boolean },\n      showRowColHeaders: { v: this.showRowColHeaders, type: Boolean },\n      showRuler: { v: this.showRuler, type: Boolean },\n      showWhiteSpace: { v: this.showWhiteSpace, type: Boolean },\n      tabSelected: { v: this.tabSelected, type: Boolean },\n      viewType: this.viewType,\n      windowProtection: { v: this.windowProtection, type: Boolean },\n      zoomScale: { v: this.zoomScale, type: Boolean },\n      zoomScaleNormal: this.zoomScaleNormal,\n      zoomScalePageLayoutView: this.zoomScalePageLayoutView,\n      zoomScaleSheetLayoutView: this.zoomScaleSheetLayoutView,\n    });\n\n    sheetView.appendChild(this.pane.exportXML(doc));\n\n    sheetViews.appendChild(sheetView);\n    return sheetViews;\n  }\n}\n","export function pick(object: any, keys: string[]) {\n  return keys.reduce((obj: any, key: string) => {\n    if (object?.hasOwnProperty(key)) {\n      obj[key] = object[key];\n    }\n    return obj;\n  }, {});\n}\n","import type { ExcelFontStyle, ExcelStyleInstruction } from '../interfaces.js';\nimport { isObject, isString } from '../utilities/isTypeOf.js';\nimport { pick } from '../utilities/pick.js';\nimport { uniqueId } from '../utilities/uniqueId.js';\nimport { Util } from './Util.js';\nimport type { XMLDOM } from './XMLDOM.js';\n\n/**\n * @module Excel/StyleSheet\n */\nexport class StyleSheet {\n  id = uniqueId('StyleSheet');\n  cellStyles = [\n    {\n      name: 'Normal',\n      xfId: '0',\n      builtinId: '0',\n    },\n  ];\n  defaultTableStyle = false;\n  differentialStyles: any[] = [{}];\n  masterCellFormats: any[] = [\n    {\n      numFmtId: 0,\n      fontId: 0,\n      fillId: 0,\n      borderId: 0,\n      xfid: 0,\n    },\n  ];\n  masterCellStyles: any[] = [\n    {\n      numFmtId: 0,\n      fontId: 0,\n      fillId: 0,\n      borderId: 0,\n    },\n  ];\n  fonts: ExcelFontStyle[] = [{}];\n  numberFormatters: any[] = [];\n  fills: any[] = [\n    {},\n    {\n      type: 'pattern',\n      patternType: 'gray125',\n      fgColor: 'FF333333',\n      bgColor: 'FF333333',\n    },\n  ];\n  borders: any[] = [\n    {\n      top: {},\n      left: {},\n      right: {},\n      bottom: {},\n      diagonal: {},\n    },\n  ];\n  tableStyles: any[] = [];\n\n  createSimpleFormatter(type: string) {\n    const sid = this.masterCellFormats.length;\n    const style: { [id: string]: number } = {\n      id: sid,\n    };\n    switch (type) {\n      case 'date':\n        style.numFmtId = 14;\n        break;\n    }\n    this.masterCellFormats.push(style);\n    return style;\n  }\n\n  createFill(fillInstructions: any) {\n    const id = this.fills.length;\n    const fill = fillInstructions;\n    fill.id = id;\n    this.fills.push(fill);\n    return fill;\n  }\n\n  createNumberFormatter(formatInstructions: any) {\n    const id = this.numberFormatters.length + 100;\n    const format = {\n      id: id,\n      formatCode: formatInstructions,\n    };\n    this.numberFormatters.push(format);\n    return format;\n  }\n\n  /**\n   * alignment: {\n   *  horizontal: http://www.schemacentral.com/sc/ooxml/t-ssml_ST_HorizontalAlignment.html\n   *  vertical: http://www.schemacentral.com/sc/ooxml/t-ssml_ST_VerticalAlignment.html\n   *  @param {Object} styleInstructions\n   */\n  createFormat(styleInstructions: ExcelStyleInstruction) {\n    const sid = this.masterCellFormats.length;\n    const style: any = {\n      id: sid,\n    };\n    if (styleInstructions.protection) {\n      style.protection = styleInstructions.protection;\n    }\n    if (styleInstructions.font && isObject(styleInstructions.font)) {\n      style.fontId = this.createFontStyle(styleInstructions.font).id;\n    } else if (styleInstructions.font) {\n      if (Number.isNaN(Number.parseInt(styleInstructions.font, 10))) {\n        throw new Error('Passing a non-numeric font id is not supported');\n      }\n      style.fontId = styleInstructions.font;\n    }\n\n    if (styleInstructions.format && isString(styleInstructions.format)) {\n      style.numFmtId = this.createNumberFormatter(styleInstructions.format).id;\n    } else if (styleInstructions.format) {\n      if (Number.isNaN(Number.parseInt(styleInstructions.format, 10))) {\n        throw new Error('Invalid number formatter id');\n      }\n      style.numFmtId = styleInstructions.format;\n    }\n\n    if (styleInstructions.border && isObject(styleInstructions.border)) {\n      style.borderId = this.createBorderFormatter(styleInstructions.border).id;\n    } else if (styleInstructions.border) {\n      if (Number.isNaN(Number.parseInt(styleInstructions.border, 10))) {\n        throw new Error('Passing a non-numeric border id is not supported');\n      }\n      style.borderId = styleInstructions.border;\n    }\n\n    if (styleInstructions.fill && isObject(styleInstructions.fill)) {\n      style.fillId = this.createFill(styleInstructions.fill).id;\n    } else if (styleInstructions.fill) {\n      if (Number.isNaN(Number.parseInt(styleInstructions.fill, 10))) {\n        throw new Error('Passing a non-numeric fill id is not supported');\n      }\n      style.fillId = styleInstructions.fill;\n    }\n\n    if (styleInstructions.alignment && isObject(styleInstructions.alignment)) {\n      style.alignment = pick(styleInstructions.alignment, [\n        'horizontal',\n        'justifyLastLine',\n        'readingOrder',\n        'relativeIndent',\n        'shrinkToFit',\n        'textRotation',\n        'vertical',\n        'wrapText',\n      ]);\n    }\n\n    this.masterCellFormats.push(style);\n    return style;\n  }\n\n  createDifferentialStyle(styleInstructions: ExcelStyleInstruction) {\n    const id = this.differentialStyles.length;\n    const style: ExcelStyleInstruction = {\n      id,\n    };\n    if (styleInstructions.font && isObject(styleInstructions.font)) {\n      style.font = styleInstructions.font;\n    }\n    if (styleInstructions.border && isObject(styleInstructions.border)) {\n      style.border = Object.assign(\n        {\n          top: {},\n          left: {},\n          right: {},\n          bottom: {},\n          diagonal: {},\n        },\n        styleInstructions.border,\n      );\n    }\n    if (styleInstructions.fill && isObject(styleInstructions.fill)) {\n      style.fill = styleInstructions.fill;\n    }\n    if (styleInstructions.alignment && isObject(styleInstructions.alignment)) {\n      style.alignment = styleInstructions.alignment;\n    }\n    if (styleInstructions.format && isString(styleInstructions.format)) {\n      style.numFmt = styleInstructions.format;\n    }\n    this.differentialStyles[id] = style;\n    return style;\n  }\n\n  /**\n   * Should be an object containing keys that match with one of the keys from this list:\n   * http://www.schemacentral.com/sc/ooxml/t-ssml_ST_TableStyleType.html\n   *\n   * The value should be a reference to a differential format (dxf)\n   * @param {Object} instructions\n   */\n  createTableStyle(instructions: any) {\n    this.tableStyles.push(instructions);\n  }\n\n  /**\n   * All params optional\n   * Expects: {\n   * top: {},\n   * left: {},\n   * right: {},\n   * bottom: {},\n   * diagonal: {},\n   * outline: boolean,\n   * diagonalUp: boolean,\n   * diagonalDown: boolean\n   * }\n   * Each border should follow:\n   * {\n   * style: styleString, http://www.schemacentral.com/sc/ooxml/t-ssml_ST_BorderStyle.html\n   * color: ARBG color (requires the A, so for example FF006666)\n   * }\n   * @param {Object} border\n   */\n  createBorderFormatter(border: any) {\n    border = { top: {}, left: {}, right: {}, bottom: {}, diagonal: {}, id: this.borders.length, ...border };\n    this.borders.push(border);\n    return border;\n  }\n\n  /**\n   * Supported font styles:\n   * bold\n   * italic\n   * underline (single, double, singleAccounting, doubleAccounting)\n   * size\n   * color\n   * fontName\n   * strike (strikethrough)\n   * outline (does this actually do anything?)\n   * shadow (does this actually do anything?)\n   * superscript\n   * subscript\n   *\n   * Color is a future goal - at the moment it's looking a bit complicated\n   * @param {Object} instructions\n   */\n  createFontStyle(instructions: ExcelFontStyle) {\n    const fontId = this.fonts.length;\n    const fontStyle: any = {\n      id: fontId,\n    };\n    if (instructions.bold) {\n      fontStyle.bold = true;\n    }\n    if (instructions.italic) {\n      fontStyle.italic = true;\n    }\n    if (instructions.superscript) {\n      fontStyle.vertAlign = 'superscript';\n    }\n    if (instructions.subscript) {\n      fontStyle.vertAlign = 'subscript';\n    }\n    if (instructions.underline) {\n      if (\n        typeof instructions.underline === 'string' &&\n        ['double', 'singleAccounting', 'doubleAccounting'].includes(instructions.underline)\n      ) {\n        fontStyle.underline = instructions.underline;\n      } else {\n        fontStyle.underline = true;\n      }\n    }\n    if (instructions.strike) {\n      fontStyle.strike = true;\n    }\n    if (instructions.outline) {\n      fontStyle.outline = true;\n    }\n    if (instructions.shadow) {\n      fontStyle.shadow = true;\n    }\n    if (instructions.size) {\n      fontStyle.size = instructions.size;\n    }\n    if (instructions.color) {\n      fontStyle.color = instructions.color;\n    }\n    if (instructions.fontName) {\n      fontStyle.fontName = instructions.fontName;\n    }\n    this.fonts.push(fontStyle);\n    return fontStyle;\n  }\n\n  exportBorders(doc: XMLDOM) {\n    const borders = doc.createElement('borders');\n    borders.setAttribute('count', this.borders.length);\n\n    for (let i = 0, l = this.borders.length; i < l; i++) {\n      borders.appendChild(this.exportBorder(doc, this.borders[i]));\n    }\n    return borders;\n  }\n\n  exportBorder(doc: XMLDOM, data: any) {\n    const border = doc.createElement('border');\n    const borderGenerator = (name: string) => {\n      const b = doc.createElement(name);\n      if (data[name].style) {\n        b.setAttribute('style', data[name].style);\n      }\n      if (data[name].color) {\n        b.appendChild(this.exportColor(doc, data[name].color));\n      }\n      return b;\n    };\n    border.appendChild(borderGenerator('left'));\n    border.appendChild(borderGenerator('right'));\n    border.appendChild(borderGenerator('top'));\n    border.appendChild(borderGenerator('bottom'));\n    border.appendChild(borderGenerator('diagonal'));\n    return border;\n  }\n\n  exportColor(doc: XMLDOM, color: any) {\n    const colorEl = doc.createElement('color');\n    if (isString(color)) {\n      colorEl.setAttribute('rgb', color);\n      return colorEl;\n    }\n\n    if (color.tint !== undefined) {\n      colorEl.setAttribute('tint', color.tint);\n    }\n    if (color.auto !== undefined) {\n      colorEl.setAttribute('auto', String(!!color.auto));\n    }\n    if (color.theme !== undefined) {\n      colorEl.setAttribute('theme', color.theme);\n    }\n\n    return colorEl;\n  }\n\n  exportMasterCellFormats(doc: XMLDOM) {\n    const cellFormats = Util.createElement(doc, 'cellXfs', [['count', this.masterCellFormats.length]]);\n    for (let i = 0, l = this.masterCellFormats.length; i < l; i++) {\n      const mformat = this.masterCellFormats[i];\n      cellFormats.appendChild(this.exportCellFormatElement(doc, mformat));\n    }\n    return cellFormats;\n  }\n\n  exportMasterCellStyles(doc: XMLDOM) {\n    const records = Util.createElement(doc, 'cellStyleXfs', [['count', this.masterCellStyles.length]]);\n    for (let i = 0, l = this.masterCellStyles.length; i < l; i++) {\n      const mstyle = this.masterCellStyles[i];\n      records.appendChild(this.exportCellFormatElement(doc, mstyle));\n    }\n    return records;\n  }\n\n  exportCellFormatElement(doc: XMLDOM, styleInstructions: ExcelStyleInstruction) {\n    const xf = doc.createElement('xf');\n    const allowed = [\n      'applyAlignment',\n      'applyBorder',\n      'applyFill',\n      'applyFont',\n      'applyNumberFormat',\n      'applyProtection',\n      'borderId',\n      'fillId',\n      'fontId',\n      'numFmtId',\n      'pivotButton',\n      'quotePrefix',\n      'xfId',\n    ];\n\n    const attributes: any = Object.keys(styleInstructions).filter(key => allowed.indexOf(key) !== -1);\n    if (styleInstructions.alignment) {\n      const alignmentData = styleInstructions.alignment;\n      xf.appendChild(this.exportAlignment(doc, alignmentData));\n    }\n    if (styleInstructions.protection) {\n      xf.appendChild(this.exportProtection(doc, styleInstructions.protection));\n      xf.setAttribute('applyProtection', '1');\n    }\n    let a = attributes.length;\n    while (a--) {\n      xf.setAttribute(attributes[a], styleInstructions[attributes[a] as keyof ExcelStyleInstruction]);\n    }\n    if (styleInstructions.fillId) {\n      xf.setAttribute('applyFill', '1');\n    }\n    if (styleInstructions.fontId) {\n      xf.setAttribute('applyFont', '1');\n    }\n    if (styleInstructions.borderId) {\n      xf.setAttribute('applyBorder', '1');\n    }\n    if (styleInstructions.alignment) {\n      xf.setAttribute('applyAlignment', '1');\n    }\n    if (styleInstructions.numFmtId) {\n      xf.setAttribute('applyNumberFormat', '1');\n    }\n    if (styleInstructions.numFmtId !== undefined && styleInstructions.xfId === undefined) {\n      xf.setAttribute('xfId', '0');\n    }\n    return xf;\n  }\n\n  exportAlignment(doc: XMLDOM, alignmentData: any) {\n    const alignment = doc.createElement('alignment');\n    const someKeys = Object.keys(alignmentData);\n    for (let i = 0, l = someKeys.length; i < l; i++) {\n      alignment.setAttribute(someKeys[i], alignmentData[someKeys[i]]);\n    }\n    return alignment;\n  }\n\n  exportFonts(doc: XMLDOM) {\n    const fonts = doc.createElement('fonts');\n    fonts.setAttribute('count', String(this.fonts.length));\n    for (let i = 0, l = this.fonts.length; i < l; i++) {\n      const fd = this.fonts[i];\n      fonts.appendChild(this.exportFont(doc, fd));\n    }\n    return fonts;\n  }\n\n  exportFont(doc: XMLDOM, fd: any) {\n    const font = doc.createElement('font');\n    if (fd.size) {\n      const size = doc.createElement('sz');\n      size.setAttribute('val', fd.size);\n      font.appendChild(size);\n    }\n\n    if (fd.fontName) {\n      const fontName = doc.createElement('name');\n      fontName.setAttribute('val', fd.fontName);\n      font.appendChild(fontName);\n    }\n\n    if (fd.bold) {\n      font.appendChild(doc.createElement('b'));\n    }\n    if (fd.italic) {\n      font.appendChild(doc.createElement('i'));\n    }\n    if (fd.vertAlign) {\n      const vertAlign = doc.createElement('vertAlign');\n      vertAlign.setAttribute('val', fd.vertAlign);\n      font.appendChild(vertAlign);\n    }\n    if (fd.underline) {\n      const u = doc.createElement('u');\n      if (fd.underline !== true) {\n        u.setAttribute('val', fd.underline);\n      }\n      font.appendChild(u);\n    }\n    if (fd.strike) {\n      font.appendChild(doc.createElement('strike'));\n    }\n    if (fd.shadow) {\n      font.appendChild(doc.createElement('shadow'));\n    }\n    if (fd.outline) {\n      font.appendChild(doc.createElement('outline'));\n    }\n    if (fd.color) {\n      font.appendChild(this.exportColor(doc, fd.color));\n    }\n    return font;\n  }\n\n  exportFills(doc: XMLDOM) {\n    const fills = doc.createElement('fills');\n    fills.setAttribute('count', String(this.fills.length));\n    for (let i = 0, l = this.fills.length; i < l; i++) {\n      const fd = this.fills[i];\n      fills.appendChild(this.exportFill(doc, fd));\n    }\n    return fills;\n  }\n\n  exportFill(doc: XMLDOM, fd: any) {\n    let fillDef: any;\n    const fill = doc.createElement('fill');\n    if (fd.type === 'pattern') {\n      fillDef = this.exportPatternFill(doc, fd);\n      fill.appendChild(fillDef);\n    } else if (fd.type === 'gradient') {\n      fillDef = this.exportGradientFill(doc, fd);\n      fill.appendChild(fillDef);\n    }\n    return fill;\n  }\n\n  exportGradientFill(doc: XMLDOM, data: any) {\n    const fillDef = doc.createElement('gradientFill');\n    if (data.degree) {\n      fillDef.setAttribute('degree', data.degree);\n    } else if (data.left) {\n      fillDef.setAttribute('left', data.left);\n      fillDef.setAttribute('right', data.right);\n      fillDef.setAttribute('top', data.top);\n      fillDef.setAttribute('bottom', data.bottom);\n    }\n    const start = doc.createElement('stop');\n    start.setAttribute('position', data.start.pureAt || 0);\n    const startColor = doc.createElement('color');\n    if (typeof data.start === 'string' || data.start.color) {\n      startColor.setAttribute('rgb', data.start.color || data.start);\n    } else if (data.start.theme) {\n      startColor.setAttribute('theme', data.start.theme);\n    }\n\n    const end = doc.createElement('stop');\n    const endColor = doc.createElement('color');\n    end.setAttribute('position', data.end.pureAt || 1);\n    if (typeof data.start === 'string' || data.end.color) {\n      endColor.setAttribute('rgb', data.end.color || data.end);\n    } else if (data.end.theme) {\n      endColor.setAttribute('theme', data.end.theme);\n    }\n    start.appendChild(startColor);\n    end.appendChild(endColor);\n    fillDef.appendChild(start);\n    fillDef.appendChild(end);\n    return fillDef;\n  }\n\n  /**\n   * Pattern types: http://www.schemacentral.com/sc/ooxml/t-ssml_ST_PatternType.html\n   * @param {XMLDoc} doc\n   * @param {Object} data\n   */\n  exportPatternFill(doc: XMLDOM, data: any) {\n    const fillDef = Util.createElement(doc, 'patternFill', [['patternType', data.patternType]]);\n    if (!data.bgColor) {\n      data.bgColor = 'FFFFFFFF';\n    }\n    if (!data.fgColor) {\n      data.fgColor = 'FFFFFFFF';\n    }\n\n    const bgColor = doc.createElement('bgColor');\n    if (isString(data.bgColor)) {\n      bgColor.setAttribute('rgb', data.bgColor);\n    } else {\n      if (data.bgColor.theme) {\n        bgColor.setAttribute('theme', data.bgColor.theme);\n      } else {\n        bgColor.setAttribute('rgb', data.bgColor.rbg);\n      }\n    }\n\n    const fgColor = doc.createElement('fgColor');\n    if (isString(data.fgColor)) {\n      fgColor.setAttribute('rgb', data.fgColor);\n    } else {\n      if (data.fgColor.theme) {\n        fgColor.setAttribute('theme', data.fgColor.theme);\n      } else {\n        fgColor.setAttribute('rgb', data.fgColor.rbg);\n      }\n    }\n    fillDef.appendChild(fgColor);\n    fillDef.appendChild(bgColor);\n    return fillDef;\n  }\n\n  exportNumberFormatters(doc: XMLDOM) {\n    const formatters = doc.createElement('numFmts');\n    formatters.setAttribute('count', String(this.numberFormatters.length));\n    for (let i = 0, l = this.numberFormatters.length; i < l; i++) {\n      const fd = this.numberFormatters[i];\n      formatters.appendChild(this.exportNumberFormatter(doc, fd));\n    }\n    return formatters;\n  }\n\n  exportNumberFormatter(doc: XMLDOM, fd: any) {\n    const numFmt = doc.createElement('numFmt');\n    numFmt.setAttribute('numFmtId', fd.id);\n    numFmt.setAttribute('formatCode', fd.formatCode);\n    return numFmt;\n  }\n\n  exportCellStyles(doc: XMLDOM) {\n    const cellStyles = doc.createElement('cellStyles');\n    cellStyles.setAttribute('count', String(this.cellStyles.length));\n\n    for (let i = 0, l = this.cellStyles.length; i < l; i++) {\n      const style: any = this.cellStyles[i];\n      delete style.id; // Remove internal id\n      const record = Util.createElement(doc, 'cellStyle');\n      cellStyles.appendChild(record);\n      const attributes = Object.keys(style);\n      let a = attributes.length;\n      while (a--) {\n        record.setAttribute(attributes[a], style[attributes[a]]);\n      }\n    }\n\n    return cellStyles;\n  }\n\n  exportDifferentialStyles(doc: XMLDOM) {\n    const dxfs = doc.createElement('dxfs');\n    dxfs.setAttribute('count', String(this.differentialStyles.length));\n\n    for (let i = 0, l = this.differentialStyles.length; i < l; i++) {\n      const style = this.differentialStyles[i];\n      dxfs.appendChild(this.exportDFX(doc, style));\n    }\n\n    return dxfs;\n  }\n\n  exportDFX(doc: XMLDOM, style: any) {\n    const dxf = doc.createElement('dxf');\n    if (style.font) {\n      dxf.appendChild(this.exportFont(doc, style.font));\n    }\n    if (style.fill) {\n      dxf.appendChild(this.exportFill(doc, style.fill));\n    }\n    if (style.border) {\n      dxf.appendChild(this.exportBorder(doc, style.border));\n    }\n    if (style.numFmt) {\n      dxf.appendChild(this.exportNumberFormatter(doc, style.numFmt));\n    }\n    if (style.alignment) {\n      dxf.appendChild(this.exportAlignment(doc, style.alignment));\n    }\n    return dxf;\n  }\n\n  exportTableStyles(doc: XMLDOM) {\n    const tableStyles = doc.createElement('tableStyles');\n    tableStyles.setAttribute('count', String(this.tableStyles.length));\n    if (this.defaultTableStyle) {\n      tableStyles.setAttribute('defaultTableStyle', String(this.defaultTableStyle));\n    }\n    for (let i = 0, l = this.tableStyles.length; i < l; i++) {\n      tableStyles.appendChild(this.exportTableStyle(doc, this.tableStyles[i]));\n    }\n    return tableStyles;\n  }\n\n  exportTableStyle(doc: XMLDOM, style: { name: string; wholeTable?: number; headerRow?: number }) {\n    const tableStyle = doc.createElement('tableStyle');\n    tableStyle.setAttribute('name', style.name);\n    tableStyle.setAttribute('pivot', String(0));\n    let i = 0;\n\n    Object.entries(style).forEach(([key, value]) => {\n      if (key === 'name') {\n        return;\n      }\n      i++;\n      const styleEl = doc.createElement('tableStyleElement');\n      styleEl.setAttribute('type', key);\n      styleEl.setAttribute('dxfId', value);\n      tableStyle.appendChild(styleEl);\n    });\n    tableStyle.setAttribute('count', String(i));\n    return tableStyle;\n  }\n\n  exportProtection(doc: XMLDOM, protectionData: any) {\n    const node = doc.createElement('protection');\n    // eslint-disable-next-line no-restricted-syntax\n    for (const k in protectionData) {\n      if (k in protectionData) {\n        node.setAttribute(k, protectionData[k]);\n      }\n    }\n    return node;\n  }\n\n  toXML() {\n    const doc = Util.createXmlDoc(Util.schemas.spreadsheetml, 'styleSheet');\n    const styleSheet = doc.documentElement;\n    styleSheet.appendChild(this.exportNumberFormatters(doc));\n    styleSheet.appendChild(this.exportFonts(doc));\n    styleSheet.appendChild(this.exportFills(doc));\n    styleSheet.appendChild(this.exportBorders(doc));\n    styleSheet.appendChild(this.exportMasterCellStyles(doc));\n    styleSheet.appendChild(this.exportMasterCellFormats(doc));\n    styleSheet.appendChild(this.exportCellStyles(doc));\n    styleSheet.appendChild(this.exportDifferentialStyles(doc));\n    if (this.tableStyles.length) {\n      styleSheet.appendChild(this.exportTableStyles(doc));\n    }\n    return doc;\n  }\n}\n","import type { ExcelSortState, ExcelTableColumn } from '../interfaces.js';\nimport { isString } from '../utilities/isTypeOf.js';\nimport { uniqueId } from '../utilities/uniqueId.js';\nimport { Util } from './Util.js';\nimport type { XMLDOM } from './XMLDOM.js';\n\n/**\n * @module Excel/Table\n */\nexport class Table {\n  name = '';\n  id = '';\n  tableId = '';\n  displayName = '';\n  dataCellStyle: any = null;\n  dataDfxId: number | null = null;\n  headerRowBorderDxfId: number | null = null;\n  headerRowCellStyle: any = null;\n  headerRowCount = 1;\n  headerRowDxfId: number | null = null;\n  insertRow = false;\n  insertRowShift = false;\n  ref: any = null;\n  tableBorderDxfId: number | null = null;\n  totalsRowBorderDxfId: number | null = null;\n  totalsRowCellStyle: any = null;\n  totalsRowCount = 0;\n  totalsRowDxfId: number | null = null;\n  tableColumns: any = [];\n  autoFilter: any = null;\n  sortState: any = null;\n  styleInfo: any = {};\n\n  constructor(config?: any) {\n    this.initialize(config);\n  }\n\n  initialize(config: any) {\n    this.displayName = uniqueId('Table');\n    this.name = this.displayName;\n    this.id = this.name;\n    this.tableId = this.id.replace('Table', '');\n    Object.assign(this, config);\n  }\n\n  setReferenceRange(start: number[], end: number[]) {\n    this.ref = [start, end];\n  }\n\n  setTableColumns(columns: Array<ExcelTableColumn | string>) {\n    columns.forEach(column => {\n      this.addTableColumn(column);\n    });\n  }\n\n  /**\n   * Expects an object with the following optional properties:\n   * name (required)\n   * dataCellStyle\n   * dataDxfId\n   * headerRowCellStyle\n   * headerRowDxfId\n   * totalsRowCellStyle\n   * totalsRowDxfId\n   * totalsRowFunction\n   * totalsRowLabel\n   * columnFormula\n   * columnFormulaIsArrayType (boolean)\n   * totalFormula\n   * totalFormulaIsArrayType (boolean)\n   */\n  addTableColumn(column: ExcelTableColumn | string) {\n    if (isString(column)) {\n      column = {\n        name: column,\n      };\n    }\n    if (!column.name) {\n      throw new Error('Invalid argument for addTableColumn - minimum requirement is a name property');\n    }\n    this.tableColumns.push(column);\n  }\n\n  /**\n   * Expects an object with the following properties:\n   * caseSensitive (boolean)\n   * dataRange\n   * columnSort (assumes true)\n   * sortDirection\n   * sortRange (defaults to dataRange)\n   */\n  setSortState(state: ExcelSortState) {\n    this.sortState = state;\n  }\n\n  toXML() {\n    const doc = Util.createXmlDoc(Util.schemas.spreadsheetml, 'table');\n    const table = doc.documentElement;\n    table.setAttribute('id', this.tableId);\n    table.setAttribute('name', this.name);\n    table.setAttribute('displayName', this.displayName);\n    const s = this.ref[0];\n    const e = this.ref[1];\n    table.setAttribute('ref', `${Util.positionToLetterRef(s[0], s[1])}:${Util.positionToLetterRef(e[0], e[1])}`);\n\n    /** TOTALS **/\n    table.setAttribute('totalsRowCount', this.totalsRowCount);\n\n    /** HEADER **/\n    table.setAttribute('headerRowCount', this.headerRowCount);\n    if (this.headerRowDxfId) {\n      table.setAttribute('headerRowDxfId', this.headerRowDxfId);\n    }\n    if (this.headerRowBorderDxfId) {\n      table.setAttribute('headerRowBorderDxfId', this.headerRowBorderDxfId);\n    }\n\n    if (!this.ref) {\n      throw new Error('Needs at least a reference range');\n    }\n    if (!this.autoFilter) {\n      this.addAutoFilter(this.ref[0], this.ref[1]);\n    }\n\n    table.appendChild(this.exportAutoFilter(doc));\n\n    table.appendChild(this.exportTableColumns(doc));\n    table.appendChild(this.exportTableStyleInfo(doc));\n    return doc;\n  }\n\n  exportTableColumns(doc: XMLDOM) {\n    const tableColumns = doc.createElement('tableColumns');\n    tableColumns.setAttribute('count', this.tableColumns.length);\n    const tcs = this.tableColumns;\n    for (let i = 0, l = tcs.length; i < l; i++) {\n      const tc = tcs[i];\n      const tableColumn = doc.createElement('tableColumn');\n      tableColumn.setAttribute('id', String(i + 1));\n      tableColumn.setAttribute('name', tc.name);\n      tableColumns.appendChild(tableColumn);\n\n      if (tc.totalsRowFunction) {\n        tableColumn.setAttribute('totalsRowFunction', tc.totalsRowFunction);\n      }\n      if (tc.totalsRowLabel) {\n        tableColumn.setAttribute('totalsRowLabel', tc.totalsRowLabel);\n      }\n    }\n    return tableColumns;\n  }\n\n  exportAutoFilter(doc: XMLDOM) {\n    const autoFilter = doc.createElement('autoFilter');\n    const s = this.autoFilter[0];\n    const e = this.autoFilter[1];\n    autoFilter.setAttribute('ref', `${Util.positionToLetterRef(s[0], s[1])}:${Util.positionToLetterRef(e[0], e[1] - this.totalsRowCount)}`);\n    return autoFilter;\n  }\n\n  exportTableStyleInfo(doc: XMLDOM) {\n    const ts = this.styleInfo;\n    const tableStyle = doc.createElement('tableStyleInfo');\n    tableStyle.setAttribute('name', ts.themeStyle);\n    tableStyle.setAttribute('showFirstColumn', ts.showFirstColumn ? '1' : '0');\n    tableStyle.setAttribute('showLastColumn', ts.showLastColumn ? '1' : '0');\n    tableStyle.setAttribute('showColumnStripes', ts.showColumnStripes ? '1' : '0');\n    tableStyle.setAttribute('showRowStripes', ts.showRowStripes ? '1' : '0');\n    return tableStyle;\n  }\n\n  addAutoFilter(startRef: any, endRef: any) {\n    this.autoFilter = [startRef, endRef];\n  }\n}\n","import type { ExcelColumn, ExcelColumnFormat, ExcelColumnMetadata, ExcelMargin, ExcelStyleInstruction } from '../interfaces.js';\nimport { isObject, isString } from '../utilities/isTypeOf.js';\nimport { uniqueId } from '../utilities/uniqueId.js';\nimport type { Drawings } from './Drawings.js';\nimport { RelationshipManager } from './RelationshipManager.js';\nimport type { SharedStrings } from './SharedStrings.js';\nimport { SheetView } from './SheetView.js';\nimport type { Table } from './Table.js';\nimport { Util } from './Util.js';\nimport type { XMLDOM, XMLNode } from './XMLDOM.js';\n\ninterface CharType {\n  font?: string;\n  bold?: boolean;\n  fontSize?: number;\n  text?: string;\n  underline?: boolean;\n}\n\ninterface WorksheetOption {\n  name?: string;\n  sheetView?: SheetView;\n}\n\n/**\n * This module represents an excel worksheet in its basic form - no tables, charts, etc. Its purpose is\n * to hold data, the data's link to how it should be styled, and any links to other outside resources.\n *\n * @module Excel/Worksheet\n */\nexport class Worksheet {\n  name = '';\n  id = uniqueId('Worksheet');\n  _timezoneOffset: number;\n  relations: any = null;\n  columnFormats: ExcelColumnFormat[] = [];\n  data: (number | string | boolean | Date | null | ExcelColumnMetadata)[][] = [];\n  mergedCells: string[][] = [];\n  columns: ExcelColumn[] = [];\n  sheetProtection: any = false;\n  _headers: [left?: any, center?: any, right?: any] = [];\n  _footers: [left?: any, center?: any, right?: any] = [];\n  _tables: Table[] = [];\n  _drawings: Array<Table | Drawings> = [];\n  _orientation?: string;\n  _margin?: ExcelMargin;\n  _rowInstructions: any = {};\n  _freezePane: { xSplit?: number; ySplit?: number; cell?: string } = {};\n  sharedStrings: SharedStrings | null = null;\n\n  hyperlinks = [];\n  sheetView: SheetView;\n\n  showZeros: any = null;\n\n  constructor(config: WorksheetOption) {\n    this._timezoneOffset = new Date().getTimezoneOffset() * 60 * 1000;\n    this.sheetView = config.sheetView || new SheetView();\n\n    this.initialize(config);\n  }\n\n  initialize(config: any) {\n    config = config || {};\n    this.name = config.name;\n    this.id = uniqueId('Worksheet');\n    this._timezoneOffset = new Date().getTimezoneOffset() * 60 * 1000;\n    if (config.columns) {\n      this.setColumns(config.columns);\n    }\n\n    this.relations = new RelationshipManager();\n  }\n\n  /**\n   * Returns an object that can be consumed by a Worksheet/Export/Worker\n   * @returns {Object}\n   */\n  exportData() {\n    return {\n      relations: this.relations.exportData(),\n      columnFormats: this.columnFormats,\n      data: this.data,\n      columns: this.columns,\n      mergedCells: this.mergedCells,\n      _headers: this._headers,\n      _footers: this._footers,\n      _tables: this._tables,\n      _rowInstructions: this._rowInstructions,\n      _freezePane: this._freezePane,\n      name: this.name,\n      id: this.id,\n    };\n  }\n\n  /**\n   * Imports data - to be used while inside of a WorksheetExportWorker.\n   * @param {Object} data\n   */\n  importData(data: any) {\n    this.relations.importData(data.relations);\n    delete data.relations;\n    Object.assign(this, data);\n  }\n\n  setSharedStringCollection(stringCollection: SharedStrings) {\n    this.sharedStrings = stringCollection;\n  }\n\n  addTable(table: Table) {\n    this._tables.push(table);\n    this.relations.addRelation(table, 'table');\n  }\n\n  addDrawings(drawings: Drawings) {\n    this._drawings.push(drawings);\n    this.relations.addRelation(drawings, 'drawingRelationship');\n  }\n\n  setRowInstructions(rowIndex: number, instructions: ExcelStyleInstruction) {\n    this._rowInstructions[rowIndex] = instructions;\n  }\n\n  /**\n   * Expects an array length of three.\n   *\n   * @see Excel/Worksheet compilePageDetailPiece\n   * @see <a href='/cookbook/addingHeadersAndFooters.html'>Adding headers and footers to a worksheet</a>\n   *\n   * @param {Array} headers [left, center, right]\n   */\n  setHeader(headers: [left: any, center: any, right: any]) {\n    if (!Array.isArray(headers)) {\n      throw 'Invalid argument type - setHeader expects an array of three instructions';\n    }\n    this._headers = headers;\n  }\n\n  /**\n   * Expects an array length of three.\n   *\n   * @see Excel/Worksheet compilePageDetailPiece\n   * @see <a href='/cookbook/addingHeadersAndFooters.html'>Adding headers and footers to a worksheet</a>\n   *\n   * @param {Array} footers [left, center, right]\n   */\n  setFooter(footers: [left: any, center: any, right: any]) {\n    if (!Array.isArray(footers)) {\n      throw 'Invalid argument type - setFooter expects an array of three instructions';\n    }\n    this._footers = footers;\n  }\n\n  /**\n   * Turns page header/footer details into the proper format for Excel.\n   * @param {type} data\n   * @returns {String}\n   */\n  compilePageDetailPackage(data: any) {\n    data = data || '';\n    return [\n      '&L',\n      this.compilePageDetailPiece(data[0] || ''),\n      '&C',\n      this.compilePageDetailPiece(data[1] || ''),\n      '&R',\n      this.compilePageDetailPiece(data[2] || ''),\n    ].join('');\n  }\n\n  /**\n   * Turns instructions on page header/footer details into something\n   * usable by Excel.\n   *\n   * @param {type} data\n   * @returns {String|@exp;_@call;reduce}\n   */\n  compilePageDetailPiece(data: string | CharType | any[]): any {\n    if (isString(data)) {\n      return '&\"-,Regular\"'.concat(data);\n    }\n    if (isObject(data) && !Array.isArray(data)) {\n      let string = '';\n      if ((data as CharType).font || (data as CharType).bold) {\n        const weighting = (data as CharType).bold ? 'Bold' : 'Regular';\n        string += `&\"${(data as CharType).font || '-'}`;\n        string += `,${weighting}\"`;\n      } else {\n        string += '&\"-,Regular\"';\n      }\n      if ((data as CharType).underline) {\n        string += '&U';\n      }\n      if ((data as CharType).fontSize) {\n        string += `&${(data as CharType).fontSize}`;\n      }\n      string += (data as CharType).text;\n\n      return string;\n    }\n\n    if (Array.isArray(data)) {\n      return data.reduce((m, v) => m.concat(this.compilePageDetailPiece(v)), '');\n    }\n  }\n\n  /**\n   * Creates the header node.\n   *\n   * @todo implement the ability to do even/odd headers\n   * @param {XML Doc} doc\n   * @returns {XML Node}\n   */\n  exportHeader(doc: XMLDOM) {\n    const oddHeader = doc.createElement('oddHeader');\n    oddHeader.appendChild(doc.createTextNode(this.compilePageDetailPackage(this._headers)));\n    return oddHeader;\n  }\n\n  /**\n   * Creates the footer node.\n   *\n   * @todo implement the ability to do even/odd footers\n   * @param {XML Doc} doc\n   * @returns {XML Node}\n   */\n  exportFooter(doc: XMLDOM) {\n    const oddFooter = doc.createElement('oddFooter');\n    oddFooter.appendChild(doc.createTextNode(this.compilePageDetailPackage(this._footers)));\n    return oddFooter;\n  }\n\n  /**\n   * This creates some nodes ahead of time, which cuts down on generation time due to\n   * most cell definitions being essentially the same, but having multiple nodes that need\n   * to be created. Cloning takes less time than creation.\n   *\n   * @private\n   * @param {XML Doc} doc\n   * @returns {_L8.Anonym$0._buildCache.Anonym$2}\n   */\n  _buildCache(doc: XMLDOM) {\n    const numberNode = doc.createElement('c');\n    const value = doc.createElement('v');\n    value.appendChild(doc.createTextNode('--temp--'));\n    numberNode.appendChild(value);\n\n    const formulaNode = doc.createElement('c');\n    const formulaValue = doc.createElement('f');\n    formulaValue.appendChild(doc.createTextNode('--temp--'));\n    formulaNode.appendChild(formulaValue);\n\n    const stringNode = doc.createElement('c');\n    stringNode.setAttribute('t', 's');\n    const stringValue = doc.createElement('v');\n    stringValue.appendChild(doc.createTextNode('--temp--'));\n    stringNode.appendChild(stringValue);\n\n    return {\n      number: numberNode,\n      date: numberNode,\n      string: stringNode,\n      formula: formulaNode,\n    };\n  }\n\n  /**\n   * Runs through the XML document and grabs all of the strings that will\n   * be sent to the 'shared strings' document.\n   *\n   * @returns {Array}\n   */\n  collectSharedStrings() {\n    const data = this.data;\n    let maxX = 0;\n    const strings: any = {};\n    for (let row = 0, l = data.length; row < l; row++) {\n      const dataRow = data[row];\n      const cellCount = dataRow.length;\n      maxX = cellCount > maxX ? cellCount : maxX;\n      for (let c = 0; c < cellCount; c++) {\n        let cellValue = dataRow[c];\n        const metadata = (cellValue as ExcelColumnMetadata)?.metadata || {};\n        if (cellValue && typeof cellValue === 'object') {\n          cellValue = (cellValue as ExcelColumnMetadata).value;\n        }\n\n        if (!metadata.type) {\n          if (typeof cellValue === 'number') {\n            metadata.type = 'number';\n          }\n        }\n        if (metadata.type === 'text' || !metadata.type) {\n          if (typeof strings[cellValue as string] === 'undefined') {\n            strings[cellValue as string] = true;\n          }\n        }\n      }\n    }\n    return Object.keys(strings);\n  }\n\n  toXML() {\n    const data = this.data;\n    const columns = this.columns || [];\n    const doc = Util.createXmlDoc(Util.schemas.spreadsheetml, 'worksheet');\n    const worksheet = doc.documentElement;\n    let i: number;\n    let l: number;\n    let row: number;\n    worksheet.setAttribute('xmlns:r', Util.schemas.relationships);\n    worksheet.setAttribute('xmlns:mc', Util.schemas.markupCompat);\n\n    let maxX = 0;\n    const sheetData = Util.createElement(doc, 'sheetData');\n\n    const cellCache = this._buildCache(doc);\n\n    for (row = 0, l = data.length; row < l; row++) {\n      const dataRow = data[row];\n      const cellCount = dataRow.length;\n      maxX = cellCount > maxX ? cellCount : maxX;\n      const rowNode = doc.createElement('row');\n\n      for (let c = 0; c < cellCount; c++) {\n        columns[c] = columns[c] || {};\n        let cellValue = dataRow[c];\n        let cell: any;\n        const metadata = (cellValue as ExcelColumnMetadata)?.metadata || {};\n\n        if (cellValue && typeof cellValue === 'object') {\n          cellValue = (cellValue as ExcelColumnMetadata).value;\n        }\n\n        if (!metadata.type) {\n          if (typeof cellValue === 'number') {\n            metadata.type = 'number';\n          }\n        }\n\n        switch (metadata.type) {\n          case 'number':\n            cell = cellCache.number.cloneNode(true);\n            cell.firstChild.firstChild.nodeValue = cellValue;\n            break;\n          case 'date':\n            cell = cellCache.date.cloneNode(true);\n            if (cellValue instanceof Date) {\n              cellValue = cellValue.getTime();\n            }\n            cell.firstChild.firstChild.nodeValue = 25569.0 + ((cellValue as number) - this._timezoneOffset) / (60 * 60 * 24 * 1000);\n            break;\n          case 'formula':\n            cell = cellCache.formula.cloneNode(true);\n            cell.firstChild.firstChild.nodeValue = cellValue as string;\n            break;\n          // biome-ignore lint: original implementation\n          case 'text':\n          /*falls through*/\n          default: {\n            let id: number | undefined;\n            if (typeof this.sharedStrings?.strings[cellValue as string] !== 'undefined') {\n              id = this.sharedStrings.strings[cellValue as string];\n            } else {\n              id = this.sharedStrings?.addString(cellValue as string);\n            }\n            cell = cellCache.string.cloneNode(true);\n            cell.firstChild.firstChild.nodeValue = id;\n            break;\n          }\n        }\n        if (metadata.style) {\n          cell.setAttribute('s', metadata.style);\n        } else if (this._rowInstructions[row]?.style !== undefined) {\n          cell.setAttribute('s', this._rowInstructions[row].style);\n        }\n        cell.setAttribute('r', Util.positionToLetterRef(c + 1, String(row + 1)));\n        rowNode.appendChild(cell);\n      }\n      rowNode.setAttribute('r', row + 1);\n\n      if (this._rowInstructions[row]) {\n        const rowInst = this._rowInstructions[row];\n\n        if (rowInst.height !== undefined) {\n          rowNode.setAttribute('customHeight', '1');\n          rowNode.setAttribute('ht', rowInst.height);\n        }\n\n        if (rowInst.style !== undefined) {\n          rowNode.setAttribute('customFormat', '1');\n          rowNode.setAttribute('s', rowInst.style);\n        }\n      }\n\n      sheetData.appendChild(rowNode);\n    }\n\n    if (maxX !== 0) {\n      worksheet.appendChild(\n        Util.createElement(doc, 'dimension', [\n          ['ref', `${Util.positionToLetterRef(1, 1)}:${Util.positionToLetterRef(maxX, String(data.length))}`],\n        ]),\n      );\n    } else {\n      worksheet.appendChild(Util.createElement(doc, 'dimension', [['ref', Util.positionToLetterRef(1, 1)]]));\n    }\n\n    worksheet.appendChild(this.sheetView.exportXML(doc));\n\n    if (this.columns.length) {\n      worksheet.appendChild(this.exportColumns(doc));\n    }\n    worksheet.appendChild(sheetData);\n\n    // The spec doesn't say anything about this, but Excel 2013 requires sheetProtection immediately after sheetData\n    if (this.sheetProtection) {\n      worksheet.appendChild(this.sheetProtection.exportXML(doc));\n    }\n\n    /**\n     * Doing this a bit differently, as hyperlinks could be as populous as rows. Looping twice would be bad.\n     */\n    if (this.hyperlinks.length > 0) {\n      const hyperlinksEl = doc.createElement('hyperlinks');\n      const hyperlinks = this.hyperlinks;\n      for (i = 0, l = hyperlinks.length; i < l; i++) {\n        const hyperlinkEl = doc.createElement('hyperlink');\n        const hyperlink: any = hyperlinks[i];\n        hyperlinkEl.setAttribute('ref', String(hyperlink.cell));\n        hyperlink.id = Util.uniqueId('hyperlink');\n        this.relations.addRelation(\n          {\n            id: hyperlink.id,\n            target: hyperlink.location,\n            targetMode: hyperlink.targetMode || 'External',\n          },\n          'hyperlink',\n        );\n        hyperlinkEl.setAttribute('r:id', this.relations.getRelationshipId(hyperlink));\n        hyperlinksEl.appendChild(hyperlinkEl);\n      }\n      worksheet.appendChild(hyperlinksEl);\n    }\n\n    // 'mergeCells' should be written before 'headerFoot' and 'drawing' due to issue\n    // with Microsoft Excel (2007, 2013)\n    if (this.mergedCells.length > 0) {\n      const mergeCells = doc.createElement('mergeCells');\n      for (i = 0, l = this.mergedCells.length; i < l; i++) {\n        const mergeCell = doc.createElement('mergeCell');\n        mergeCell.setAttribute('ref', `${this.mergedCells[i][0]}:${this.mergedCells[i][1]}`);\n        mergeCells.appendChild(mergeCell);\n      }\n      worksheet.appendChild(mergeCells);\n    }\n\n    this.exportPageSettings(doc, worksheet);\n\n    if (this._headers.length > 0 || this._footers.length > 0) {\n      const headerFooter = doc.createElement('headerFooter');\n      if (this._headers.length > 0) {\n        headerFooter.appendChild(this.exportHeader(doc));\n      }\n      if (this._footers.length > 0) {\n        headerFooter.appendChild(this.exportFooter(doc));\n      }\n      worksheet.appendChild(headerFooter);\n    }\n\n    // the 'drawing' element should be written last, after 'headerFooter', 'mergeCells', etc. due\n    // to issue with Microsoft Excel (2007, 2013)\n    for (i = 0, l = this._drawings.length; i < l; i++) {\n      const drawing = doc.createElement('drawing');\n      drawing.setAttribute('r:id', this.relations.getRelationshipId(this._drawings[i]));\n      worksheet.appendChild(drawing);\n    }\n\n    if (this._tables.length > 0) {\n      const tables = doc.createElement('tableParts');\n      tables.setAttribute('count', this._tables.length);\n      for (i = 0, l = this._tables.length; i < l; i++) {\n        const table = doc.createElement('tablePart');\n        table.setAttribute('r:id', this.relations.getRelationshipId(this._tables[i]));\n        tables.appendChild(table);\n      }\n      worksheet.appendChild(tables);\n    }\n    return doc;\n  }\n\n  /**\n   *\n   * @param {XML Doc} doc\n   * @returns {XML Node}\n   */\n  exportColumns(doc: XMLDOM) {\n    const cols = Util.createElement(doc, 'cols');\n    for (let i = 0, l = this.columns.length; i < l; i++) {\n      const cd = this.columns[i];\n      const col = Util.createElement(doc, 'col', [\n        ['min', cd.min || i + 1],\n        ['max', cd.max || i + 1],\n      ]);\n      if (cd.hidden) {\n        col.setAttribute('hidden', String(1));\n      }\n      if (cd.bestFit) {\n        col.setAttribute('bestFit', String(1));\n      }\n      if (cd.customWidth || cd.width) {\n        col.setAttribute('customWidth', String(1));\n      }\n      if (cd.width) {\n        col.setAttribute('width', cd.width);\n      } else {\n        col.setAttribute('width', String(9.140625));\n      }\n\n      cols.appendChild(col);\n    }\n    return cols;\n  }\n\n  /**\n   * Sets the page settings on a worksheet node.\n   *\n   * @param {XML Doc} doc\n   * @param {XML Node} worksheet\n   * @returns {undefined}\n   */\n  exportPageSettings(doc: XMLDOM, worksheet: XMLNode) {\n    if (this._margin) {\n      let defaultVal = 0.7;\n      const left = this._margin.left ? this._margin.left : defaultVal;\n      const right = this._margin.right ? this._margin.right : defaultVal;\n      const top = this._margin.top ? this._margin.top : defaultVal;\n      const bottom = this._margin.bottom ? this._margin.bottom : defaultVal;\n      defaultVal = 0.3;\n      const header = this._margin.header ? this._margin.header : defaultVal;\n      const footer = this._margin.footer ? this._margin.footer : defaultVal;\n\n      worksheet.appendChild(\n        Util.createElement(doc, 'pageMargins', [\n          ['top', top],\n          ['bottom', bottom],\n          ['left', left],\n          ['right', right],\n          ['header', header],\n          ['footer', footer],\n        ]),\n      );\n    }\n    if (this._orientation) {\n      worksheet.appendChild(Util.createElement(doc, 'pageSetup', [['orientation', this._orientation]]));\n    }\n  }\n\n  /**\n   * http://www.schemacentral.com/sc/ooxml/t-ssml_ST_Orientation.html\n   *\n   * Can be one of 'portrait' or 'landscape'.\n   *\n   * @param {'default' | 'portrait' | 'landscape'} orientation\n   * @returns {undefined}\n   */\n  setPageOrientation(orientation: 'default' | 'portrait' | 'landscape') {\n    this._orientation = orientation;\n  }\n\n  /**\n   * Set page details in inches.\n   * use this structure:\n   * {\n   *   top: 0.7\n   *   , bottom: 0.7\n   *   , left: 0.7\n   *   , right: 0.7\n   *   , header: 0.3\n   *   , footer: 0.3\n   * }\n   *\n   * @returns {undefined}\n   */\n  setPageMargin(input: ExcelMargin) {\n    this._margin = input;\n  }\n\n  /**\n   * Expects an array of column definitions. Each column definition needs to have a width assigned to it.\n   *\n   * @param {Array} columns\n   */\n  setColumns(columns: ExcelColumn[]) {\n    this.columns = columns;\n  }\n\n  /**\n   * Expects an array of data to be translated into cells.\n   *\n   * @param {Array} data Two dimensional array - [ [A1, A2], [B1, B2] ]\n   * @see <a href='/cookbook/addingDataToAWorksheet.html'>Adding data to a worksheet</a>\n   */\n  setData(data: (number | string | boolean | Date | null | ExcelColumnMetadata)[][]) {\n    this.data = data;\n  }\n\n  /**\n   * Merge cells in given range\n   *\n   * @param cell1 - A1, A2...\n   * @param cell2 - A2, A3...\n   */\n  mergeCells(cell1: string, cell2: string) {\n    this.mergedCells.push([cell1, cell2]);\n  }\n\n  /**\n   * Added frozen pane\n   * @param column - column number: 0, 1, 2 ...\n   * @param row - row number: 0, 1, 2 ...\n   * @param cell - 'A1'\n   * @deprecated\n   */\n  freezePane(column: number, row: number, cell: string) {\n    this.sheetView.freezePane(column, row, cell);\n  }\n\n  /**\n   * Expects an array containing an object full of column format definitions.\n   * http://msdn.microsoft.com/en-us/library/documentformat.openxml.spreadsheet.column.aspx\n   * bestFit\n   * collapsed\n   * customWidth\n   * hidden\n   * max\n   * min\n   * outlineLevel\n   * phonetic\n   * style\n   * width\n   * @param {Array} columnFormats\n   */\n  setColumnFormats(columnFormats: ExcelColumnFormat[]) {\n    this.columnFormats = columnFormats;\n  }\n}\n","import { uniqueId } from '../utilities/uniqueId.js';\nimport type { Drawings } from './Drawings.js';\nimport { Paths } from './Paths.js';\nimport { RelationshipManager } from './RelationshipManager.js';\nimport { SharedStrings } from './SharedStrings.js';\nimport { StyleSheet } from './StyleSheet.js';\nimport type { Table } from './Table.js';\nimport { Util } from './Util.js';\nimport { Worksheet } from './Worksheet.js';\nimport { XMLDOM } from './XMLDOM.js';\n\nexport interface MediaMeta {\n  id: string;\n  data: string;\n  fileName: string;\n  contentType: string | null;\n  extension: string;\n  rId?: string;\n}\n\n/**\n * @module Excel/Workbook\n */\n/* globals console: true */\nexport class Workbook {\n  id = uniqueId('Workbook');\n  styleSheet = new StyleSheet();\n  sharedStrings = new SharedStrings();\n  relations = new RelationshipManager();\n  worksheets: Worksheet[] = [];\n  tables: Table[] = [];\n  drawings: Drawings[] = [];\n  media: { [filename: string]: MediaMeta } = {};\n  printTitles: any;\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    this.id = uniqueId('Workbook');\n    this.styleSheet = new StyleSheet();\n    this.sharedStrings = new SharedStrings();\n    this.relations = new RelationshipManager();\n    this.relations.addRelation(this.styleSheet, 'stylesheet');\n    this.relations.addRelation(this.sharedStrings, 'sharedStrings');\n  }\n\n  createWorksheet(config?: any) {\n    config = Object.assign({}, { name: 'Sheet '.concat(String(this.worksheets.length + 1)) }, config);\n    return new Worksheet(config);\n  }\n\n  getStyleSheet() {\n    return this.styleSheet;\n  }\n\n  addTable(table: Table) {\n    this.tables.push(table);\n  }\n\n  addDrawings(drawings: Drawings) {\n    this.drawings.push(drawings);\n  }\n\n  /**\n   * Set number of rows to repeat for this sheet.\n   *\n   * @param {String} sheet name\n   * @param {int} number of rows to repeat from the top\n   * @returns {undefined}\n   */\n  setPrintTitleTop(inSheet: string, inRowCount: number) {\n    if (this.printTitles == null) {\n      this.printTitles = {};\n    }\n    if (this.printTitles[inSheet] == null) {\n      this.printTitles[inSheet] = {};\n    }\n    this.printTitles[inSheet].top = inRowCount;\n  }\n\n  /**\n   * Set number of rows to repeat for this sheet.\n   *\n   * @param {String} sheet name\n   * @param {int} number of columns to repeat from the left\n   * @returns {undefined}\n   */\n  setPrintTitleLeft(inSheet: string, inRowCount: number) {\n    if (this.printTitles == null) {\n      this.printTitles = {};\n    }\n    if (this.printTitles[inSheet] == null) {\n      this.printTitles[inSheet] = {};\n    }\n    //WARN: this does not handle AA, AB, etc.\n    this.printTitles[inSheet].left = String.fromCharCode(64 + inRowCount);\n  }\n\n  addMedia(_type: string, fileName: string, fileData: any, contentType?: string | null) {\n    const fileNamePieces = fileName.split('.');\n    const extension = fileNamePieces[fileNamePieces.length - 1];\n    if (!contentType) {\n      switch (extension.toLowerCase()) {\n        case 'jpeg':\n        case 'jpg':\n          contentType = 'image/jpeg';\n          break;\n        case 'png':\n          contentType = 'image/png';\n          break;\n        case 'gif':\n          contentType = 'image/gif';\n          break;\n        default:\n          contentType = null;\n          break;\n      }\n    }\n    if (!this.media[fileName]) {\n      this.media[fileName] = {\n        id: fileName,\n        data: fileData,\n        fileName: fileName,\n        contentType: contentType,\n        extension: extension,\n      };\n    }\n    return this.media[fileName];\n  }\n\n  addWorksheet(worksheet: Worksheet) {\n    this.relations.addRelation(worksheet, 'worksheet');\n    worksheet.setSharedStringCollection(this.sharedStrings);\n    this.worksheets.push(worksheet);\n  }\n\n  createContentTypes() {\n    const doc = Util.createXmlDoc(Util.schemas.contentTypes, 'Types');\n    const types = doc.documentElement;\n    let i: number;\n    let l: number;\n\n    types.appendChild(\n      Util.createElement(doc, 'Default', [\n        ['Extension', 'rels'],\n        ['ContentType', 'application/vnd.openxmlformats-package.relationships+xml'],\n      ]),\n    );\n    types.appendChild(\n      Util.createElement(doc, 'Default', [\n        ['Extension', 'xml'],\n        ['ContentType', 'application/xml'],\n      ]),\n    );\n\n    const extensions: any = {};\n    for (const filename in this.media) {\n      if (filename in this.media) {\n        extensions[this.media[filename].extension] = this.media[filename].contentType;\n      }\n    }\n    for (const extension in extensions) {\n      if (extension in extensions) {\n        types.appendChild(\n          Util.createElement(doc, 'Default', [\n            ['Extension', extension],\n            ['ContentType', extensions[extension]],\n          ]),\n        );\n      }\n    }\n\n    types.appendChild(\n      Util.createElement(doc, 'Override', [\n        ['PartName', '/xl/workbook.xml'],\n        ['ContentType', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml'],\n      ]),\n    );\n    types.appendChild(\n      Util.createElement(doc, 'Override', [\n        ['PartName', '/xl/sharedStrings.xml'],\n        ['ContentType', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml'],\n      ]),\n    );\n    types.appendChild(\n      Util.createElement(doc, 'Override', [\n        ['PartName', '/xl/styles.xml'],\n        ['ContentType', 'application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml'],\n      ]),\n    );\n\n    for (i = 0, l = this.worksheets.length; i < l; i++) {\n      types.appendChild(\n        Util.createElement(doc, 'Override', [\n          ['PartName', `/xl/worksheets/sheet${i + 1}.xml`],\n          ['ContentType', 'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml'],\n        ]),\n      );\n    }\n    for (i = 0, l = this.tables.length; i < l; i++) {\n      types.appendChild(\n        Util.createElement(doc, 'Override', [\n          ['PartName', `/xl/tables/table${i + 1}.xml`],\n          ['ContentType', 'application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml'],\n        ]),\n      );\n    }\n\n    for (i = 0, l = this.drawings.length; i < l; i++) {\n      types.appendChild(\n        Util.createElement(doc, 'Override', [\n          ['PartName', `/xl/drawings/drawing${i + 1}.xml`],\n          ['ContentType', 'application/vnd.openxmlformats-officedocument.drawing+xml'],\n        ]),\n      );\n    }\n\n    return doc;\n  }\n\n  toXML() {\n    const doc = Util.createXmlDoc(Util.schemas.spreadsheetml, 'workbook');\n    const wb = doc.documentElement;\n    wb.setAttribute('xmlns:r', Util.schemas.relationships);\n\n    const maxWorksheetNameLength = 31;\n    const sheets = Util.createElement(doc, 'sheets');\n    for (let i = 0, l = this.worksheets.length; i < l; i++) {\n      const sheet = doc.createElement('sheet');\n      // Microsoft Excel (2007, 2013) do not allow worksheet names longer than 31 characters\n      // if the worksheet name is longer, Excel displays an \"Excel found unreadable content...\" popup when opening the file\n      if (typeof console !== 'undefined' && this.worksheets[i].name.length > maxWorksheetNameLength) {\n        console.log(\n          `Microsoft Excel requires work sheet names to be less than ${maxWorksheetNameLength + 1} characters long, work sheet name \"${\n            this.worksheets[i].name\n          }\" is ${this.worksheets[i].name.length} characters long`,\n        );\n      }\n      sheet.setAttribute('name', this.worksheets[i].name);\n      sheet.setAttribute('sheetId', i + 1);\n      sheet.setAttribute('r:id', this.relations.getRelationshipId(this.worksheets[i]));\n      sheets.appendChild(sheet);\n    }\n    wb.appendChild(sheets);\n\n    //now to add repeating rows\n    const definedNames = Util.createElement(doc, 'definedNames');\n    let ctr = 0;\n    for (const name in this.printTitles) {\n      if (name in this.printTitles) {\n        const entry = this.printTitles[name];\n        const definedName = doc.createElement('definedName');\n        definedName.setAttribute('name', '_xlnm.Print_Titles');\n        definedName.setAttribute('localSheetId', ctr++);\n\n        let value = '';\n        if (entry.top) {\n          value += `${name}!$1:$${entry.top}`;\n          if (entry.left) {\n            value += ',';\n          }\n        }\n        if (entry.left) {\n          value += `${name}!$A:$${entry.left}`;\n        }\n\n        definedName.appendChild(doc.createTextNode(value));\n        definedNames.appendChild(definedName);\n      }\n    }\n    wb.appendChild(definedNames);\n\n    return doc;\n  }\n\n  createWorkbookRelationship() {\n    const doc = Util.createXmlDoc(Util.schemas.relationshipPackage, 'Relationships');\n    const relationships = doc.documentElement;\n    relationships.appendChild(\n      Util.createElement(doc, 'Relationship', [\n        ['Id', 'rId1'],\n        ['Type', Util.schemas.officeDocument],\n        ['Target', 'xl/workbook.xml'],\n      ]),\n    );\n    return doc;\n  }\n\n  _generateCorePaths(files: any) {\n    let i: number;\n    let l: number;\n    Paths[this.styleSheet.id] = 'styles.xml';\n    Paths[this.sharedStrings.id] = 'sharedStrings.xml';\n    Paths[this.id] = '/xl/workbook.xml';\n\n    for (i = 0, l = this.tables.length; i < l; i++) {\n      files[`/xl/tables/table${i + 1}.xml`] = this.tables[i].toXML();\n      Paths[this.tables[i].id] = `/xl/tables/table${i + 1}.xml`;\n    }\n\n    for (const fileName in this.media) {\n      if (fileName in this.media) {\n        const media = this.media[fileName];\n        files[`/xl/media/${fileName}`] = media.data;\n        Paths[fileName] = `/xl/media/${fileName}`;\n      }\n    }\n\n    for (i = 0, l = this.drawings.length; i < l; i++) {\n      files[`/xl/drawings/drawing${i + 1}.xml`] = this.drawings[i].toXML();\n      Paths[this.drawings[i].id] = `/xl/drawings/drawing${i + 1}.xml`;\n      files[`/xl/drawings/_rels/drawing${i + 1}.xml.rels`] = this.drawings[i].relations.toXML();\n    }\n  }\n\n  _prepareFilesForPackaging(files: { [path: string]: XMLDOM | string }) {\n    Object.assign(files, {\n      '/[Content_Types].xml': this.createContentTypes(),\n      '/_rels/.rels': this.createWorkbookRelationship(),\n      '/xl/styles.xml': this.styleSheet.toXML(),\n      '/xl/workbook.xml': this.toXML(),\n      '/xl/sharedStrings.xml': this.sharedStrings.toXML(),\n      '/xl/_rels/workbook.xml.rels': this.relations.toXML(),\n    });\n\n    for (const [key, value] of Object.entries(files)) {\n      if (key.indexOf('.xml') !== -1 || key.indexOf('.rels') !== -1) {\n        if (value instanceof XMLDOM) {\n          files[key] = value.toString();\n        } else {\n          files[key] = (value as any).xml || new window.XMLSerializer().serializeToString(value as any);\n        }\n        let content = (files[key] as string).replace(/xmlns=\"\"/g, '');\n        content = content.replace(/NS[\\d]+:/g, '');\n        content = content.replace(/xmlns:NS[\\d]+=\"\"/g, '');\n        files[key] = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\n${content}`;\n      }\n    }\n  }\n\n  generateFiles(): Promise<{ [path: string]: string }> {\n    return new Promise(resolve => {\n      const files: any = {};\n      this._generateCorePaths(files);\n\n      for (let i = 0, l = this.worksheets.length; i < l; i++) {\n        files[`/xl/worksheets/sheet${i + 1}.xml`] = this.worksheets[i].toXML();\n        Paths[this.worksheets[i].id] = `worksheets/sheet${i + 1}.xml`;\n        files[`/xl/worksheets/_rels/sheet${i + 1}.xml.rels`] = this.worksheets[i].relations.toXML();\n      }\n\n      this._prepareFilesForPackaging(files);\n\n      return resolve(files);\n    });\n  }\n}\n","import { type ZipOptions, strToU8, zip } from 'fflate';\n\nimport { Workbook } from './Excel/Workbook.js';\n\ntype InferOutputByType<T extends 'Blob' | 'Uint8Array'> = T extends 'Blob' ? Blob : T extends 'Uint8Array' ? Uint8Array : any;\n\n/**\n * Creates a new workbook.\n */\nexport function createWorkbook() {\n  return new Workbook();\n}\n\n/**\n * Convert a `base64` string to a `Uint8Array`\n * @param {String} - base64 string\n * @returns {Uint8Array} - returns a Uint8Array output\n */\nexport function base64ToUint8Array(base64String: string) {\n  const base64url = base64String.replace(/-/g, '+').replace(/_/g, '/');\n  const missingPadding = '='.repeat((4 - (base64url.length % 4)) % 4);\n  const base64 = base64url + missingPadding;\n  const base64decoded = atob(base64);\n  return Uint8Array.from(base64decoded, char => char.charCodeAt(0));\n}\n\n/**\n * Turns a workbook into a downloadable file, you can between a 'Blob' or 'Uint8Array',\n * and if nothing is provided then 'Blob' will be the default\n * @param {Excel/Workbook} workbook - The workbook that is being converted\n * @param {'Uint8Array' | 'Blob'} [outputType='Blob'] - defaults to 'Blob'\n * @param {Object} [options]\n *   - `fileFormat` defaults to \"xlsx\"\n *   - `mimeType`: a mime type can be provided by the user or auto-detect the mime when undefined (by file extension .xls/.xlsx)\n *      (user can pass an empty string to completely cancel the mime type altogether)\n *   - `zipOptions` to specify any `fflate` options to modify how the zip is created.\n * @returns {Promise}\n */\nexport function createExcelFile<T extends 'Blob' | 'Uint8Array' = 'Blob'>(\n  workbook: Workbook,\n  outputType?: T,\n  options?: { fileFormat?: 'xls' | 'xlsx'; mimeType?: string; zipOptions?: ZipOptions },\n): Promise<InferOutputByType<T>> {\n  const zipObj: { [name: string]: Uint8Array } = {};\n\n  return new Promise((resolve, reject) => {\n    workbook.generateFiles().then(files => {\n      for (const [path, content] of Object.entries(files)) {\n        const outPath = path.substr(1);\n        if (path.indexOf('.xml') !== -1 || path.indexOf('.rel') !== -1) {\n          zipObj[outPath] = strToU8(content); // regular cells except images\n        } else {\n          zipObj[outPath] = base64ToUint8Array(content); // images\n        }\n      }\n\n      return zip(zipObj, options?.zipOptions || {}, (err, data) => {\n        /* v8 ignore next 4 */\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        if (outputType === 'Uint8Array') {\n          resolve(data as InferOutputByType<T>);\n        } else {\n          const format = options?.fileFormat ?? 'xlsx';\n          let mimeType = options?.mimeType;\n          if (mimeType === undefined) {\n            mimeType = format === 'xls' ? 'application/vnd.ms-excel' : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n          }\n          resolve(new Blob([data], { type: mimeType }) as InferOutputByType<T>);\n        }\n      });\n    });\n  });\n}\n\n/**\n * Download Excel file, currently only supports a \"browser\" as `downloadType`\n * but it could be expended in the future to also other type of platform like NodeJS for example.\n * @param {Workbook} workbook\n * @param {String} filename - filename (must also include file extension, xls/xlsx)\n * @param {Object} [options]\n *   - `downloadType`: download type (browser/node), currently only a \"browser\" download as a Blob\n *   - `mimeType`: a mime type can be provided by the user or auto-detect the mime when undefined (by file extension .xls/.xlsx)\n *      (user can pass an empty string to completely cancel the mime type altogether)\n *   - `zipOptions` to specify any `fflate` options to modify how the zip is created.\n */\nexport function downloadExcelFile(\n  workbook: Workbook,\n  filename: string,\n  options?: { downloadType?: 'browser' | 'node'; mimeType?: string; zipOptions?: ZipOptions },\n) {\n  if (options?.downloadType === 'node') {\n    throw new Error(\n      '[Excel-Builder-Vanilla] Please note that `downloadExcelFile()` is currently only supporting the \"browser\" download type at the moment.',\n    );\n  }\n\n  // start downloading but add the Blob property only on the download start instead of the event itself\n  // Note: we call the Promise with `.then()` for perf reason since `fflate.zip` can use Web Worker but `fflate.zipAsync` cannot\n  const fileFormat = filename.match(/.*\\.xls$/) ? 'xls' : 'xlsx';\n  return createExcelFile(workbook, 'Blob', { ...options, fileFormat }).then(excelBlob => {\n    downloadFileToBrowser(filename, excelBlob);\n  });\n}\n\n/**\n * Download Excel file, currently only supports a \"browser\" as `downloadType`,\n * but it could probably be expended to support other platform in the future like NodeJS for example.\n * @param {String} filename - filename (must also include file extension, xls/xlsx)\n * @param {Blob} data - compressed data object\n */\nfunction downloadFileToBrowser(filename: string, data: Blob) {\n  // this trick will generate a temp <a /> tag\n  // the code will then trigger a hidden click for it to start downloading\n  const link = document.createElement('a');\n  const url = URL.createObjectURL(data);\n\n  if (link && document) {\n    link.textContent = 'download';\n    link.href = url;\n    link.setAttribute('download', filename);\n\n    // set the visibility to hidden so there is no effect on your web-layout\n    link.style.visibility = 'hidden';\n\n    // this part will append the anchor tag, trigger a click (for download to start) and finally remove the tag once completed\n    document.body.appendChild(link);\n    link.click();\n\n    // we're done, let's delete the temp DOM element & revoke the URL object\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n}\n"],"names":["isObject","value","type","isPlainObject","proto","Ctor","isString","htmlEscapes","htmlEscape","str","m","XMLDOM","ns","rootNodeName","__publicField","name","XMLNode","text","TextNode","config","i","l","attr","string","childContent","children","val","child","_deep","_Util","space","base","doc","attributes","el","attrs","k","v","x","y","digit","index","num","alphabet","Util","AbsoluteAnchor","width","height","xmlDoc","content","root","pos","dimensions","Chart","idCounter","uniqueId","prefix","id","OneCellAnchor","xOff","yOff","from","fromCol","fromColOff","fromRow","fromRowOff","TwoCellAnchor","to","toCol","toColOff","toRow","toRowOff","Drawing","Picture","mediaRef","description","rId","pictureNode","nonVisibleProperties","nameProperties","nvPicProperties","pictureFill","stretch","shapeProperties","transform2d","presetGeometry","Paths","RelationshipManager","data","object","relationships","relationship","Drawings","drawing","drawings","Pane","column","row","cell","pane","Positioning","pixels","SharedStrings","sharedStringTable","template","templateValue","strings","clone","SheetView","conf","sheetViews","sheetView","pick","keys","obj","key","StyleSheet","style","fillInstructions","fill","formatInstructions","format","styleInstructions","instructions","border","fontStyle","borders","borderGenerator","b","color","colorEl","cellFormats","mformat","records","mstyle","xf","allowed","alignmentData","a","alignment","someKeys","fonts","fd","font","size","fontName","vertAlign","u","fills","fillDef","start","startColor","end","endColor","bgColor","fgColor","formatters","numFmt","cellStyles","record","dxfs","dxf","tableStyles","tableStyle","styleEl","protectionData","node","styleSheet","Table","columns","state","table","s","e","tableColumns","tcs","tc","tableColumn","autoFilter","ts","startRef","endRef","Worksheet","stringCollection","rowIndex","headers","footers","weighting","oddHeader","oddFooter","numberNode","formulaNode","formulaValue","stringNode","stringValue","dataRow","cellCount","c","cellValue","metadata","worksheet","maxX","sheetData","cellCache","rowNode","_a","_b","_c","rowInst","hyperlinksEl","hyperlinks","hyperlinkEl","hyperlink","mergeCells","mergeCell","headerFooter","tables","cols","cd","col","defaultVal","left","right","top","bottom","header","footer","orientation","input","cell1","cell2","columnFormats","Workbook","inSheet","inRowCount","_type","fileName","fileData","contentType","fileNamePieces","extension","types","extensions","filename","wb","maxWorksheetNameLength","sheets","sheet","definedNames","ctr","entry","definedName","files","media","resolve","createWorkbook","base64ToUint8Array","base64String","base64url","missingPadding","base64","base64decoded","char","createExcelFile","workbook","outputType","options","zipObj","reject","path","outPath","strToU8","zip","err","mimeType","downloadExcelFile","fileFormat","excelBlob","downloadFileToBrowser","link","url"],"mappings":"oNAAO,SAASA,EAASC,EAAiC,CACxD,MAAMC,EAAO,OAAOD,EACpB,OAAOA,GAAS,OAASC,IAAS,UAAYA,IAAS,WACzD,CAEO,SAASC,EAAcF,EAAgB,CAK5C,GAJI,OAAOA,GAAU,UAAYA,IAAU,MAIvC,OAAO,UAAU,SAAS,KAAKA,CAAK,IAAM,kBACrC,MAAA,GAIH,MAAAG,EAAQ,OAAO,eAAeH,CAAK,EACzC,GAAIG,IAAU,KACL,MAAA,GAGH,MAAAC,EAAO,OAAO,UAAU,eAAe,KAAKD,EAAO,aAAa,GAAKA,EAAM,YACjF,OAAO,OAAOC,GAAS,YAAcA,aAAgBA,GAAQ,SAAS,UAAU,KAAKA,CAAI,IAAM,SAAS,UAAU,KAAKJ,CAAK,CAC9H,CAEO,SAASK,EAASL,EAA6B,CACpD,OAAIA,GAAS,MAAQ,OAAOA,EAAM,QAAA,GAAc,QAIlD,CC5BA,MAAMM,EAA0C,CAC9C,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,OACP,EA6BaC,EAAcC,IACrB,OAAOA,GAAQ,WACjBA,EAAM,GAAGA,CAAG,IAEPA,EAAI,QAAQ,WAAiBC,GAAAH,EAAYG,CAAC,CAAC,GC5B7C,MAAMC,CAAO,CAGlB,YAAYC,EAAmBC,EAAsB,CAFrDC,EAAA,wBAGO,KAAA,gBAAkB,KAAK,cAAcD,CAAY,EACjD,KAAA,gBAAgB,aAAa,QAASD,CAAE,CAAA,CAG/C,cAAcG,EAAc,CAC1B,OAAO,IAAIC,EAAQ,CACjB,SAAUD,CAAA,CACX,CAAA,CAGH,eAAeE,EAAc,CACpB,OAAA,IAAIC,EAASD,CAAI,CAAA,CAG1B,UAAW,CACF,OAAA,KAAK,gBAAgB,SAAS,CAAA,CAezC,CAZEH,EAtBWH,EAsBJ,OAAO,CACZ,OAASQ,GAAgB,CACvB,OAAQA,EAAO,KAAM,CACnB,IAAK,MACI,OAAA,IAAIH,EAAQG,CAAM,EAC3B,IAAK,OACI,OAAA,IAAID,EAASC,EAAO,SAAS,EACtC,QACS,OAAA,IAAA,CACX,CAEJ,GAGF,MAAMD,CAAS,CAGb,YAAYD,EAAc,CAF1BH,EAAA,kBAGE,KAAK,UAAYG,CAAA,CAGnB,QAAS,CACA,MAAA,CACL,UAAW,KAAK,UAChB,KAAM,MACR,CAAA,CAGF,UAAW,CACF,OAAAT,EAAW,KAAK,SAAS,CAAA,CAEpC,CAEO,MAAMQ,CAAQ,CAOnB,YAAYG,EAAuB,CANnCL,EAAA,gBAAW,IACXA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,mBAQE,GALA,KAAK,SAAWK,EAAO,SACvB,KAAK,SAAW,CAAC,EACZ,KAAA,UAAYA,EAAO,WAAa,GACrC,KAAK,WAAa,CAAC,EAEfA,EAAO,SACA,QAAAC,EAAI,EAAGC,EAAIF,EAAO,SAAS,OAAQC,EAAIC,EAAGD,IAC5C,KAAA,YAAYT,EAAO,KAAK,OAAOQ,EAAO,SAASC,CAAC,CAAC,CAAC,EAI3D,GAAID,EAAO,WACE,UAAAG,KAAQH,EAAO,WACpBA,EAAO,WAAW,eAAeG,CAAI,GACvC,KAAK,aAAaA,EAAMH,EAAO,WAAWG,CAAI,CAAC,CAGrD,CAGF,UAAW,CACL,IAAAC,EAAS,IAAI,KAAK,QAAQ,GACnB,UAAAD,KAAQ,KAAK,WAClB,KAAK,WAAW,eAAeA,CAAI,IAC5BC,EAAA,GAAGA,CAAM,IAAID,CAAI,KAAMd,EAAW,KAAK,WAAWc,CAAI,CAAC,CAAC,KAIrE,IAAIE,EAAe,GACV,QAAA,EAAI,EAAGH,EAAI,KAAK,SAAS,OAAQ,EAAIA,EAAG,IAC/CG,GAAgB,KAAK,SAAS,CAAC,EAAE,SAAS,EAG5C,OAAIA,EACFD,GAAU,IAAIC,CAAY,KAAK,KAAK,QAAQ,IAElCD,GAAA,KAGLA,CAAA,CAGT,QAAS,CACP,MAAME,EAAkB,CAAC,EAChB,QAAAL,EAAI,EAAGC,EAAI,KAAK,SAAS,OAAQD,EAAIC,EAAGD,IAC/CK,EAAS,KAAK,KAAK,SAASL,CAAC,EAAE,QAAQ,EAElC,MAAA,CACL,SAAU,KAAK,SACf,SAAAK,EACA,UAAW,KAAK,UAChB,WAAY,KAAK,WACjB,KAAM,KACR,CAAA,CAGF,aAAaV,EAAcW,EAAU,CACnC,GAAIA,IAAQ,KAAM,CACT,OAAA,KAAK,WAAWX,CAAI,EAC3B,OAAQ,KAAaA,CAAI,EACzB,MAAA,CAEG,KAAA,WAAWA,CAAI,EAAIW,EACvB,KAAaX,CAAI,EAAIW,CAAA,CAGxB,YAAYC,EAAY,CACjB,KAAA,SAAS,KAAKA,CAAK,EACnB,KAAA,WAAa,KAAK,SAAS,CAAC,CAAA,CAGnC,UAAUC,EAAiB,CACzB,OAAO,IAAIZ,EAAQ,KAAK,QAAQ,CAAA,CAEpC,CC9IO,MAAMa,EAAN,MAAMA,CAAK,CAQhB,OAAO,SAASC,EAAe,CAC7B,OAAKD,EAAK,UAAUC,CAAK,IAClBD,EAAA,UAAUC,CAAK,EAAI,GAEnBD,EAAK,UAAUC,CAAK,GAAA,CAe7B,OAAO,aAAalB,EAAYmB,EAAc,CAC5C,OAAO,IAAIpB,EAAOC,GAAM,KAAMmB,CAAI,CAAA,CAYpC,OAAO,cAAcC,EAAajB,EAAckB,EAAkB,CAC1D,MAAAC,EAAKF,EAAI,cAAcjB,CAAI,EACjCkB,EAAaA,GAAc,CAAC,EAC5B,IAAIb,EAAIa,EAAW,OACnB,KAAOb,KACFc,EAAA,aAAaD,EAAWb,CAAC,EAAE,CAAC,EAAGa,EAAWb,CAAC,EAAE,CAAC,CAAC,EAE7C,OAAAc,CAAA,CAUT,OAAO,mBAAmBF,EAAcG,EAA+B,CACrE,OAAS,CAACC,EAAGC,CAAC,IAAK,OAAO,QAAQF,CAAK,EAAG,CACpC,GAAAhC,EAAckC,CAAC,EACjB,GAAIA,EAAE,IAAM,MAAQA,EAAE,IAAM,OAC1B,OAAQA,EAAE,KAAM,CACd,KAAK,QACCA,EAAAA,EAAE,EAAI,IAAM,IAChB,KAAA,MAGAA,EAAA,KAGJA,GAAM,MACJL,EAAA,aAAaI,EAAGC,CAAC,CACvB,CACF,CAKF,OAAO,oBAAoBC,EAAWC,EAAoB,CACxD,IAAIC,EAAQ,EACRC,EACAC,EAAMJ,EACNf,EAAS,GACb,MAAMoB,EAAW,6BACb,GAAAd,EAAK,YAAYS,CAAC,EACpB,OAAOT,EAAK,YAAYS,CAAC,EAAE,OAAOC,CAAC,EAErC,KAAOG,EAAM,GACXA,GAAO,KAAK,IAAI,GAAIF,EAAQ,CAAC,EAC7BC,EAAQC,EAAM,KAAK,IAAI,GAAIF,CAAK,EACzBE,GAAAD,EACPA,EAAQA,EAAQ,KAAK,IAAI,GAAID,EAAQ,CAAC,EAC7BjB,EAAAoB,EAAS,OAAOF,CAAK,EAAIlB,EACzBiB,GAAA,EAEN,OAAAX,EAAA,YAAYS,CAAC,EAAIf,EACfA,EAAO,OAAO,OAAOgB,CAAC,CAAC,CAAA,CAuBlC,EAtHEzB,EADWe,EACJ,YAAyC,CAAC,GA2EjDf,EA5EWe,EA4EJ,cAAmB,CAAC,GAuB3Bf,EAnGWe,EAmGJ,UAAU,CACf,UAAW,gFACX,cAAe,oFACf,WAAY,6EACZ,cAAe,sEACf,oBAAqB,+DACrB,aAAc,+DACd,cAAe,4DACf,aAAc,8DACd,MAAO,8DACP,eAAgB,qFAChB,QAAS,+DACT,MAAO,4EACP,mBAAoB,sEACpB,QAAS,wDACT,oBAAqB,8EACrB,MAAO,4EACP,MAAO,4EACP,UAAW,+EACb,GAtHK,IAAMe,EAANf,ECMA,MAAMgB,CAAe,CAM1B,YAAY1B,EAAsB,CALlCL,EAAA,SAAmB,MACnBA,EAAA,SAAmB,MACnBA,EAAA,aAAuB,MACvBA,EAAA,cAAwB,MAGlBK,IACF,KAAK,OAAOA,EAAO,EAAGA,EAAO,CAAC,EAC9B,KAAK,cAAcA,EAAO,MAAOA,EAAO,MAAM,EAChD,CAUF,OAAOmB,EAAWC,EAAW,CAC3B,KAAK,EAAID,EACT,KAAK,EAAIC,CAAA,CAUX,cAAcO,EAAeC,EAAgB,CAC3C,KAAK,MAAQD,EACb,KAAK,OAASC,CAAA,CAGhB,MAAMC,EAAgBC,EAAc,CAClC,MAAMC,EAAON,EAAK,cAAcI,EAAQ,oBAAoB,EACtDG,EAAMP,EAAK,cAAcI,EAAQ,SAAS,EAC5CG,EAAA,aAAa,IAAK,KAAK,CAAC,EACxBA,EAAA,aAAa,IAAK,KAAK,CAAC,EAC5BD,EAAK,YAAYC,CAAG,EAEpB,MAAMC,EAAaR,EAAK,cAAcI,EAAQ,SAAS,EAC5C,OAAAI,EAAA,aAAa,KAAM,KAAK,KAAK,EAC7BA,EAAA,aAAa,KAAM,KAAK,MAAM,EACzCF,EAAK,YAAYE,CAAU,EAE3BF,EAAK,YAAYD,CAAO,EAExBC,EAAK,YAAYN,EAAK,cAAcI,EAAQ,gBAAgB,CAAC,EACtDE,CAAA,CAEX,CCnEO,MAAMG,CAAM,CAAC,CCCpB,MAAMC,EAA0C,CAAC,EAkBjC,SAAAC,EAASC,EAAS,WAAY,CACvCF,EAAUE,CAAM,IACnBF,EAAUE,CAAM,EAAI,GAGhB,MAAAC,EAAK,EAAEH,EAAUE,CAAM,EAC7B,OAAIA,IAAW,WACN,GAAGC,CAAE,GAGP,GAAGD,CAAM,GAAGC,CAAE,EACvB,CCjBO,MAAMC,CAAc,CAQzB,YAAYvC,EAAsB,CAPlCL,EAAA,SAAmB,MACnBA,EAAA,SAAmB,MACnBA,EAAA,YAAuB,MACvBA,EAAA,YAAuB,MACvBA,EAAA,aAAuB,MACvBA,EAAA,cAAwB,MAGlBK,IACG,KAAA,OAAOA,EAAO,EAAGA,EAAO,EAAGA,EAAO,KAAMA,EAAO,IAAI,EACxD,KAAK,cAAcA,EAAO,MAAOA,EAAO,MAAM,EAChD,CAGF,OAAOmB,EAAWC,EAAWoB,EAAgBC,EAAgB,CAC3D,KAAK,EAAItB,EACT,KAAK,EAAIC,EACLoB,IAAS,SACX,KAAK,KAAOA,GAEVC,IAAS,SACX,KAAK,KAAOA,EACd,CAGF,cAAcd,EAAeC,EAAgB,CAC3C,KAAK,MAAQD,EACb,KAAK,OAASC,CAAA,CAGhB,MAAMC,EAAgBC,EAAc,CAClC,MAAMC,EAAON,EAAK,cAAcI,EAAQ,mBAAmB,EACrDa,EAAOjB,EAAK,cAAcI,EAAQ,UAAU,EAC5Cc,EAAUlB,EAAK,cAAcI,EAAQ,SAAS,EACpDc,EAAQ,YAAYd,EAAO,eAAe,OAAO,KAAK,CAAC,CAAC,CAAC,EACzD,MAAMe,EAAanB,EAAK,cAAcI,EAAQ,YAAY,EAC/Ce,EAAA,YAAYf,EAAO,eAAe,OAAO,KAAK,MAAQ,CAAC,CAAC,CAAC,EACpE,MAAMgB,EAAUpB,EAAK,cAAcI,EAAQ,SAAS,EACpDgB,EAAQ,YAAYhB,EAAO,eAAe,OAAO,KAAK,CAAC,CAAC,CAAC,EACzD,MAAMiB,EAAarB,EAAK,cAAcI,EAAQ,YAAY,EAC/CiB,EAAA,YAAYjB,EAAO,eAAe,OAAO,KAAK,MAAQ,CAAC,CAAC,CAAC,EACpEa,EAAK,YAAYC,CAAO,EACxBD,EAAK,YAAYE,CAAU,EAC3BF,EAAK,YAAYG,CAAO,EACxBH,EAAK,YAAYI,CAAU,EAE3Bf,EAAK,YAAYW,CAAI,EAErB,MAAMT,EAAaR,EAAK,cAAcI,EAAQ,SAAS,EACvD,OAAAI,EAAW,aAAa,KAAM,OAAO,KAAK,KAAK,CAAC,EAChDA,EAAW,aAAa,KAAM,OAAO,KAAK,MAAM,CAAC,EACjDF,EAAK,YAAYE,CAAU,EAC3BF,EAAK,YAAYD,CAAO,EAExBC,EAAK,YAAYN,EAAK,cAAcI,EAAQ,gBAAgB,CAAC,EACtDE,CAAA,CAEX,CCnEO,MAAMgB,CAAc,CAIzB,YAAY/C,EAA0B,CAHtCL,EAAA,YAAY,CAAE,KAAM,EAAG,KAAM,CAAE,GAC/BA,EAAA,UAAU,CAAE,KAAM,EAAG,KAAM,CAAE,GAGvBK,IACF,KAAK,QAAQA,EAAO,KAAK,EAAGA,EAAO,KAAK,EAAGA,EAAO,GAAG,KAAMA,EAAO,GAAG,IAAI,EACzE,KAAK,MAAMA,EAAO,GAAG,EAAGA,EAAO,GAAG,EAAGA,EAAO,GAAG,KAAMA,EAAO,GAAG,IAAI,EACrE,CAGF,QAAQmB,EAAWC,EAAWoB,EAAgBC,EAAgB,CAC5D,KAAK,KAAK,EAAItB,EACd,KAAK,KAAK,EAAIC,EACVoB,IAAS,SACX,KAAK,KAAK,KAAOA,GAEfC,IAAS,SACX,KAAK,KAAK,KAAOD,EACnB,CAGF,MAAMrB,EAAWC,EAAWoB,EAAgBC,EAAgB,CAC1D,KAAK,GAAG,EAAItB,EACZ,KAAK,GAAG,EAAIC,EACRoB,IAAS,SACX,KAAK,GAAG,KAAOA,GAEbC,IAAS,SACX,KAAK,GAAG,KAAOD,EACjB,CAGF,MAAMX,EAAgBC,EAAc,CAClC,MAAMC,EAAON,EAAK,cAAcI,EAAQ,mBAAmB,EAErDa,EAAOjB,EAAK,cAAcI,EAAQ,UAAU,EAC5Cc,EAAUlB,EAAK,cAAcI,EAAQ,SAAS,EACpDc,EAAQ,YAAYd,EAAO,eAAe,KAAK,KAAK,CAAC,CAAC,EACtD,MAAMe,EAAanB,EAAK,cAAcI,EAAQ,YAAY,EAC1De,EAAW,YAAYf,EAAO,eAAe,KAAK,KAAK,IAAI,CAAC,EAC5D,MAAMgB,EAAUpB,EAAK,cAAcI,EAAQ,SAAS,EACpDgB,EAAQ,YAAYhB,EAAO,eAAe,KAAK,KAAK,CAAC,CAAC,EACtD,MAAMiB,EAAarB,EAAK,cAAcI,EAAQ,YAAY,EAC1DiB,EAAW,YAAYjB,EAAO,eAAe,KAAK,KAAK,IAAI,CAAC,EAE5Da,EAAK,YAAYC,CAAO,EACxBD,EAAK,YAAYE,CAAU,EAC3BF,EAAK,YAAYG,CAAO,EACxBH,EAAK,YAAYI,CAAU,EAE3B,MAAME,EAAKvB,EAAK,cAAcI,EAAQ,QAAQ,EACxCoB,EAAQxB,EAAK,cAAcI,EAAQ,SAAS,EAClDoB,EAAM,YAAYpB,EAAO,eAAe,KAAK,GAAG,CAAC,CAAC,EAClD,MAAMqB,EAAWzB,EAAK,cAAcI,EAAQ,YAAY,EACxDqB,EAAS,YAAYrB,EAAO,eAAe,KAAK,KAAK,IAAI,CAAC,EAC1D,MAAMsB,EAAQ1B,EAAK,cAAcI,EAAQ,SAAS,EAClDsB,EAAM,YAAYtB,EAAO,eAAe,KAAK,GAAG,CAAC,CAAC,EAClD,MAAMuB,EAAW3B,EAAK,cAAcI,EAAQ,YAAY,EACxD,OAAAuB,EAAS,YAAYvB,EAAO,eAAe,KAAK,KAAK,IAAI,CAAC,EAE1DmB,EAAG,YAAYC,CAAK,EACpBD,EAAG,YAAYE,CAAQ,EACvBF,EAAG,YAAYG,CAAK,EACpBH,EAAG,YAAYI,CAAQ,EAEvBrB,EAAK,YAAYW,CAAI,EACrBX,EAAK,YAAYiB,CAAE,EAEnBjB,EAAK,YAAYD,CAAO,EAExBC,EAAK,YAAYN,EAAK,cAAcI,EAAQ,gBAAgB,CAAC,EACtDE,CAAA,CAEX,CC/CO,MAAMsB,CAAQ,CAAd,cACL1D,EAAA,eACAA,EAAA,UAAKyC,EAAS,SAAS,GAYvB,aAAarD,EAA4DiB,EAA6D,CAGpI,OAFAA,MAAW,CAAC,GACZA,EAAO,QAAU,KACTjB,EAAM,CACZ,IAAK,iBACE,KAAA,OAAS,IAAI2C,EAAe1B,CAAsB,EACvD,MACF,IAAK,gBACE,KAAA,OAAS,IAAIuC,EAAcvC,CAAsB,EACtD,MACF,IAAK,gBACE,KAAA,OAAS,IAAI+C,EAAc/C,CAA0B,EAC1D,KAAA,CAEJ,OAAO,KAAK,MAAA,CAEhB,CCvDO,MAAMsD,UAAgBD,CAAQ,CAOnC,aAAc,CACN,MAAA,EAPR1D,EAAA,UAAKyC,EAAS,SAAS,GACvBzC,EAAA,iBAAY8B,EAAK,SAAS,SAAS,GACnC9B,EAAA,YAAY,CAAC,GACbA,EAAA,iBAA8B,MAC9BA,EAAA,mBAAc,IAKP,KAAA,GAAKyC,EAAS,SAAS,EACvB,KAAA,UAAYX,EAAK,SAAS,SAAS,CAAA,CAG1C,SAAS8B,EAAqB,CAC5B,KAAK,UAAYA,CAAA,CAGnB,eAAeC,EAAqB,CAClC,KAAK,YAAcA,CAAA,CAGrB,YAAYzE,EAAc,CACxB,KAAK,KAAK,KAAOA,CAAA,CAGnB,cAAciB,EAAa,CAClB,OAAA,OAAO,KAAK,KAAMA,CAAM,CAAA,CAGjC,cAA0C,CACjC,MAAA,OAAA,CAGT,cAAe,CACb,OAAO,KAAK,SAAA,CAGd,kBAAkByD,EAAa,CAC7B,KAAK,UAAW,IAAMA,CAAA,CAGxB,MAAM5B,EAAgB,CACpB,MAAM6B,EAAcjC,EAAK,cAAcI,EAAQ,SAAS,EAElD8B,EAAuBlC,EAAK,cAAcI,EAAQ,aAAa,EAE/D+B,EAAiBnC,EAAK,cAAcI,EAAQ,YAAa,CAC7D,CAAC,KAAM,KAAK,SAAS,EACrB,CAAC,OAAQ,KAAK,UAAW,QAAQ,EACjC,CAAC,QAAS,KAAK,aAAe,EAAE,CAAA,CACjC,EACD8B,EAAqB,YAAYC,CAAc,EAC/C,MAAMC,EAAkBpC,EAAK,cAAcI,EAAQ,cAAc,EACjDgC,EAAA,YACdpC,EAAK,cAAcI,EAAQ,aAAc,CACvC,CAAC,iBAAkB,GAAG,EACtB,CAAC,qBAAsB,GAAG,CAC3B,CAAA,CACH,EACA8B,EAAqB,YAAYE,CAAe,EAChDH,EAAY,YAAYC,CAAoB,EAC5C,MAAMG,EAAcrC,EAAK,cAAcI,EAAQ,cAAc,EACjDiC,EAAA,YACVrC,EAAK,cAAcI,EAAQ,SAAU,CACnC,CAAC,UAAWJ,EAAK,QAAQ,aAAa,EACtC,CAAC,UAAW,KAAK,UAAW,GAAG,CAChC,CAAA,CACH,EACAqC,EAAY,YAAYrC,EAAK,cAAcI,EAAQ,WAAW,CAAC,EAC/D,MAAMkC,EAAUtC,EAAK,cAAcI,EAAQ,WAAW,EACtDkC,EAAQ,YAAYtC,EAAK,cAAcI,EAAQ,YAAY,CAAC,EAC5DiC,EAAY,YAAYC,CAAO,EAC/BL,EAAY,YAAYI,CAAW,EAE7B,MAAAE,EAAkBvC,EAAK,cAAcI,EAAQ,WAAY,CAAC,CAAC,SAAU,MAAM,CAAC,CAAC,EAE7EoC,EAAcxC,EAAK,cAAcI,EAAQ,QAAQ,EACvDmC,EAAgB,YAAYC,CAAW,EAEjC,MAAAC,EAAiBzC,EAAK,cAAcI,EAAQ,aAAc,CAAC,CAAC,OAAQ,MAAM,CAAC,CAAC,EAClF,OAAAmC,EAAgB,YAAYE,CAAc,EAE1CR,EAAY,YAAYM,CAAe,EAuBhC,KAAK,OAAO,MAAMnC,EAAQ6B,CAAW,CAAA,CAEhD,CC7GO,MAAMS,EAET,CAAA,ECaG,MAAMC,CAAoB,CAI/B,aAAc,CAHdzE,EAAA,iBAAsB,CAAC,GACvBA,EAAA,cAAS,GAGPyC,EAAS,KAAK,CAAA,CAGhB,WAAWiC,EAA+C,CACxD,KAAK,UAAYA,EAAK,UACtB,KAAK,OAASA,EAAK,MAAA,CAGrB,YAAa,CACJ,MAAA,CACL,UAAW,KAAK,UAChB,OAAQ,KAAK,MACf,CAAA,CAGF,YAAYC,EAAwBvF,EAAiC,CAC9D,YAAA,UAAUuF,EAAO,EAAE,EAAI,CAC1B,GAAIlC,EAAS,KAAK,EAClB,OAAQX,EAAK,QAAQ1C,CAAI,EACzB,OAAAuF,CACF,EACO,KAAK,UAAUA,EAAO,EAAE,EAAE,EAAA,CAGnC,kBAAkBA,EAAwB,CACjC,OAAA,KAAK,UAAUA,EAAO,EAAE,EAAI,KAAK,UAAUA,EAAO,EAAE,EAAE,GAAK,IAAA,CAGpE,OAAQ,CACN,MAAMzD,EAAMY,EAAK,aAAaA,EAAK,QAAQ,oBAAqB,eAAe,EACzE8C,EAAgB1D,EAAI,gBAEf,SAAA,CAACyB,EAAI+B,CAAI,IAAK,OAAO,QAAQ,KAAK,SAAS,EAAG,CACvD,MAAMG,EAAe/C,EAAK,cAAcZ,EAAK,eAAgB,CAC3D,CAAC,KAAMwD,EAAK,EAAE,EACd,CAAC,OAAQA,EAAK,MAAM,EACpB,CAAC,SAAUA,EAAK,OAAO,QAAUF,EAAM7B,CAAE,CAAC,CAAA,CAC3C,EACG+B,EAAK,OAAO,YACdG,EAAa,aAAa,aAAcH,EAAK,OAAO,UAAU,EAEhEE,EAAc,YAAYC,CAAY,CAAA,CAEjC,OAAA3D,CAAA,CAEX,CC5DO,MAAM4D,CAAS,CAAf,cACL9E,EAAA,gBAAkC,CAAC,GACnCA,EAAA,iBAAY,IAAIyE,GAChBzE,EAAA,UAAKyC,EAAS,UAAU,GAQxB,WAAWsC,EAAkB,CACtB,KAAA,SAAS,KAAKA,CAAO,CAAA,CAG5B,UAAW,CACT,OAAO,KAAK,SAAS,MAAA,CAGvB,OAAQ,CACN,MAAM7D,EAAMY,EAAK,aAAaA,EAAK,QAAQ,mBAAoB,UAAU,EACnEkD,EAAW9D,EAAI,gBACrB8D,EAAS,aAAa,UAAWlD,EAAK,QAAQ,OAAO,EACrDkD,EAAS,aAAa,UAAWlD,EAAK,QAAQ,aAAa,EAC3DkD,EAAS,aAAa,YAAalD,EAAK,QAAQ,kBAAkB,EAEzD,QAAA,EAAI,EAAGvB,EAAI,KAAK,SAAS,OAAQ,EAAIA,EAAG,IAAK,CAChD,IAAAuD,EAAM,KAAK,UAAU,kBAAmB,KAAK,SAAS,CAAC,EAAc,cAAc,EAClFA,IACHA,EAAM,KAAK,UAAU,YAAa,KAAK,SAAS,CAAC,EAAc,aAAa,EAAI,KAAK,SAAS,CAAC,EAAc,cAAc,GAE5H,KAAK,SAAS,CAAC,EAAc,kBAAkBA,CAAG,EACnDkB,EAAS,YAAa,KAAK,SAAS,CAAC,EAAc,MAAM9D,CAAG,CAAC,CAAA,CAExD,OAAAA,CAAA,CAEX,CCtCO,MAAM+D,CAAK,CAAX,cASLjF,EAAA,aAAmD,MACnDA,EAAA,cAAwB,MACxBA,EAAA,cAAwB,MACxBA,EAAA,kBAAa,eACbA,EAAA,mBAAsC,MACtCA,EAAA,oBAEA,WAAWkF,EAAgBC,EAAaC,EAAc,CACpD,KAAK,YAAc,CAAE,OAAQF,EAAQ,OAAQC,EAAK,KAAAC,CAAK,CAAA,CAGzD,UAAUlE,EAAa,CACf,MAAAmE,EAAOnE,EAAI,cAAc,MAAM,EAEjC,OAAA,KAAK,QAAU,OACjBmE,EAAK,aAAa,SAAU,KAAK,YAAY,MAAM,EACnDA,EAAK,aAAa,SAAU,KAAK,YAAY,MAAM,EACnDA,EAAK,aAAa,cAAe,KAAK,YAAY,IAAI,EACjDA,EAAA,aAAa,aAAc,aAAa,EACxCA,EAAA,aAAa,QAAS,QAAQ,GAE9BA,CAAA,CAEX,CC/BO,MAAMC,EAAY,CACvB,OAAO,aAAaC,EAAgB,CAClC,OAAO,KAAK,MAAOA,EAAS,OAAU,EAAE,CAAA,CAE5C,CCPO,MAAMC,CAAc,CAApB,cACLxF,EAAA,eAAqC,CAAC,GACtCA,EAAA,mBAAwB,CAAC,GACzBA,EAAA,UAAKyC,EAAS,eAAe,GAS7B,UAAU9C,EAAa,CACrB,YAAK,QAAQA,CAAG,EAAI,KAAK,YAAY,OACrC,KAAK,YAAY,KAAK,YAAY,MAAM,EAAIA,EACrC,KAAK,QAAQA,CAAG,CAAA,CAGzB,YAAa,CACX,OAAO,KAAK,OAAA,CAGd,OAAQ,CACN,MAAMuB,EAAMY,EAAK,aAAaA,EAAK,QAAQ,cAAe,KAAK,EACzD2D,EAAoBvE,EAAI,gBAC9B,KAAK,YAAY,QAAQ,EACrB,IAAAX,EAAI,KAAK,YAAY,OACPkF,EAAA,aAAa,QAASlF,CAAC,EACvBkF,EAAA,aAAa,cAAelF,CAAC,EAEzC,MAAAmF,EAAWxE,EAAI,cAAc,IAAI,EACjCyE,EAAgBzE,EAAI,cAAc,GAAG,EAC3CyE,EAAc,YAAYzE,EAAI,eAAe,iBAAiB,CAAC,EAC/DwE,EAAS,YAAYC,CAAa,EAClC,MAAMC,EAAU,KAAK,YAErB,KAAOrF,KAAK,CACJ,MAAAsF,EAAQH,EAAS,UAAU,EAAI,EACjC,OAAOE,EAAQrF,CAAC,GAAM,UAAYqF,EAAQrF,CAAC,EAAE,MAAM,KAAK,GACpDsF,EAAA,WAAY,aAAa,YAAa,UAAU,EAExDA,EAAM,WAAY,WAAY,UAAYD,EAAQrF,CAAC,EACnDkF,EAAkB,YAAYI,CAAK,CAAA,CAG9B,OAAA3E,CAAA,CAEX,CCxCO,MAAM4E,CAAU,CAqBrB,YAAYzF,EAA0B,CApBtCL,EAAA,aACAA,EAAA,iBAA4B,MAC5BA,EAAA,wBAAkC,MAClCA,EAAA,eAAyB,MACzBA,EAAA,mBAA8B,MAC9BA,EAAA,oBAA+B,MAC/BA,EAAA,qBAAgC,MAChCA,EAAA,0BAAqC,MACrCA,EAAA,yBAAoC,MACpCA,EAAA,iBAA4B,MAC5BA,EAAA,sBAAiC,MACjCA,EAAA,mBAA8B,MAC9BA,EAAA,mBAA8B,MAC9BA,EAAA,gBAAW,MACXA,EAAA,wBAAmC,MACnCA,EAAA,iBAA4B,MAC5BA,EAAA,uBAAuB,MACvBA,EAAA,+BAA+B,MAC/BA,EAAA,gCAAgC,MAGxB,MAAA+F,EAAO1F,GAAU,CAAC,EACxB,KAAK,KAAO0F,EAAK,MAAQ,IAAId,CAAK,CAUpC,WAAWC,EAAgBC,EAAaC,EAAc,CACpD,KAAK,KAAK,MAAQ,SAClB,KAAK,KAAK,OAASF,EACnB,KAAK,KAAK,OAASC,EACnB,KAAK,KAAK,YAAcC,CAAA,CAG1B,UAAUlE,EAAa,CACf,MAAA8E,EAAa9E,EAAI,cAAc,YAAY,EAC3C+E,EAAY/E,EAAI,cAAc,WAAW,EAE/C,OAAAY,EAAK,mBAAmBmE,EAAW,CAEjC,eAAgB,EAChB,UAAW,CAAE,EAAG,KAAK,UAAW,KAAM,OAAQ,EAC9C,iBAAkB,CAAE,EAAG,KAAK,iBAAkB,KAAM,OAAQ,EAE5D,QAAS,KAAK,QACd,YAAa,CAAE,EAAG,KAAK,YAAa,KAAM,OAAQ,EAClD,aAAc,CAAE,EAAG,KAAK,aAAc,KAAM,OAAQ,EACpD,cAAe,CAAE,EAAG,KAAK,cAAe,KAAM,OAAQ,EACtD,mBAAoB,CAAE,EAAG,KAAK,mBAAoB,KAAM,OAAQ,EAChE,kBAAmB,CAAE,EAAG,KAAK,kBAAmB,KAAM,OAAQ,EAC9D,UAAW,CAAE,EAAG,KAAK,UAAW,KAAM,OAAQ,EAC9C,eAAgB,CAAE,EAAG,KAAK,eAAgB,KAAM,OAAQ,EACxD,YAAa,CAAE,EAAG,KAAK,YAAa,KAAM,OAAQ,EAClD,SAAU,KAAK,SACf,iBAAkB,CAAE,EAAG,KAAK,iBAAkB,KAAM,OAAQ,EAC5D,UAAW,CAAE,EAAG,KAAK,UAAW,KAAM,OAAQ,EAC9C,gBAAiB,KAAK,gBACtB,wBAAyB,KAAK,wBAC9B,yBAA0B,KAAK,wBAAA,CAChC,EAEDA,EAAU,YAAY,KAAK,KAAK,UAAU/E,CAAG,CAAC,EAE9C8E,EAAW,YAAYC,CAAS,EACzBD,CAAA,CAEX,CCrFgB,SAAAE,EAAKvB,EAAawB,EAAgB,CAChD,OAAOA,EAAK,OAAO,CAACC,EAAUC,KACxB1B,GAAA,MAAAA,EAAQ,eAAe0B,KACrBD,EAAAC,CAAG,EAAI1B,EAAO0B,CAAG,GAEhBD,GACN,EAAE,CACP,CCGO,MAAME,CAAW,CAAjB,cACLtG,EAAA,UAAKyC,EAAS,YAAY,GAC1BzC,EAAA,kBAAa,CACX,CACE,KAAM,SACN,KAAM,IACN,UAAW,GAAA,CAEf,GACAA,EAAA,yBAAoB,IACpBA,EAAA,0BAA4B,CAAC,CAAA,CAAE,GAC/BA,EAAA,yBAA2B,CACzB,CACE,SAAU,EACV,OAAQ,EACR,OAAQ,EACR,SAAU,EACV,KAAM,CAAA,CAEV,GACAA,EAAA,wBAA0B,CACxB,CACE,SAAU,EACV,OAAQ,EACR,OAAQ,EACR,SAAU,CAAA,CAEd,GACAA,EAAA,aAA0B,CAAC,CAAA,CAAE,GAC7BA,EAAA,wBAA0B,CAAC,GAC3BA,EAAA,aAAe,CACb,CAAC,EACD,CACE,KAAM,UACN,YAAa,UACb,QAAS,WACT,QAAS,UAAA,CAEb,GACAA,EAAA,eAAiB,CACf,CACE,IAAK,CAAC,EACN,KAAM,CAAC,EACP,MAAO,CAAC,EACR,OAAQ,CAAC,EACT,SAAU,CAAA,CAAC,CAEf,GACAA,EAAA,mBAAqB,CAAC,GAEtB,sBAAsBZ,EAAc,CAElC,MAAMmH,EAAkC,CACtC,GAFU,KAAK,kBAAkB,MAGnC,EACA,OAAQnH,EAAM,CACZ,IAAK,OACHmH,EAAM,SAAW,GACjB,KAAA,CAEC,YAAA,kBAAkB,KAAKA,CAAK,EAC1BA,CAAA,CAGT,WAAWC,EAAuB,CAC1B,MAAA7D,EAAK,KAAK,MAAM,OAChB8D,EAAOD,EACb,OAAAC,EAAK,GAAK9D,EACL,KAAA,MAAM,KAAK8D,CAAI,EACbA,CAAA,CAGT,sBAAsBC,EAAyB,CAE7C,MAAMC,EAAS,CACb,GAFS,KAAK,iBAAiB,OAAS,IAGxC,WAAYD,CACd,EACK,YAAA,iBAAiB,KAAKC,CAAM,EAC1BA,CAAA,CAST,aAAaC,EAA0C,CAErD,MAAML,EAAa,CACjB,GAFU,KAAK,kBAAkB,MAGnC,EAIA,GAHIK,EAAkB,aACpBL,EAAM,WAAaK,EAAkB,YAEnCA,EAAkB,MAAQ1H,EAAS0H,EAAkB,IAAI,EAC3DL,EAAM,OAAS,KAAK,gBAAgBK,EAAkB,IAAI,EAAE,WACnDA,EAAkB,KAAM,CAC7B,GAAA,OAAO,MAAM,OAAO,SAASA,EAAkB,KAAM,EAAE,CAAC,EACpD,MAAA,IAAI,MAAM,gDAAgD,EAElEL,EAAM,OAASK,EAAkB,IAAA,CAGnC,GAAIA,EAAkB,QAAUpH,EAASoH,EAAkB,MAAM,EAC/DL,EAAM,SAAW,KAAK,sBAAsBK,EAAkB,MAAM,EAAE,WAC7DA,EAAkB,OAAQ,CAC/B,GAAA,OAAO,MAAM,OAAO,SAASA,EAAkB,OAAQ,EAAE,CAAC,EACtD,MAAA,IAAI,MAAM,6BAA6B,EAE/CL,EAAM,SAAWK,EAAkB,MAAA,CAGrC,GAAIA,EAAkB,QAAU1H,EAAS0H,EAAkB,MAAM,EAC/DL,EAAM,SAAW,KAAK,sBAAsBK,EAAkB,MAAM,EAAE,WAC7DA,EAAkB,OAAQ,CAC/B,GAAA,OAAO,MAAM,OAAO,SAASA,EAAkB,OAAQ,EAAE,CAAC,EACtD,MAAA,IAAI,MAAM,kDAAkD,EAEpEL,EAAM,SAAWK,EAAkB,MAAA,CAGrC,GAAIA,EAAkB,MAAQ1H,EAAS0H,EAAkB,IAAI,EAC3DL,EAAM,OAAS,KAAK,WAAWK,EAAkB,IAAI,EAAE,WAC9CA,EAAkB,KAAM,CAC7B,GAAA,OAAO,MAAM,OAAO,SAASA,EAAkB,KAAM,EAAE,CAAC,EACpD,MAAA,IAAI,MAAM,gDAAgD,EAElEL,EAAM,OAASK,EAAkB,IAAA,CAGnC,OAAIA,EAAkB,WAAa1H,EAAS0H,EAAkB,SAAS,IAC/DL,EAAA,UAAYL,EAAKU,EAAkB,UAAW,CAClD,aACA,kBACA,eACA,iBACA,cACA,eACA,WACA,UAAA,CACD,GAGE,KAAA,kBAAkB,KAAKL,CAAK,EAC1BA,CAAA,CAGT,wBAAwBK,EAA0C,CAC1D,MAAAjE,EAAK,KAAK,mBAAmB,OAC7B4D,EAA+B,CACnC,GAAA5D,CACF,EACA,OAAIiE,EAAkB,MAAQ1H,EAAS0H,EAAkB,IAAI,IAC3DL,EAAM,KAAOK,EAAkB,MAE7BA,EAAkB,QAAU1H,EAAS0H,EAAkB,MAAM,IAC/DL,EAAM,OAAS,OAAO,OACpB,CACE,IAAK,CAAC,EACN,KAAM,CAAC,EACP,MAAO,CAAC,EACR,OAAQ,CAAC,EACT,SAAU,CAAA,CACZ,EACAK,EAAkB,MACpB,GAEEA,EAAkB,MAAQ1H,EAAS0H,EAAkB,IAAI,IAC3DL,EAAM,KAAOK,EAAkB,MAE7BA,EAAkB,WAAa1H,EAAS0H,EAAkB,SAAS,IACrEL,EAAM,UAAYK,EAAkB,WAElCA,EAAkB,QAAUpH,EAASoH,EAAkB,MAAM,IAC/DL,EAAM,OAASK,EAAkB,QAE9B,KAAA,mBAAmBjE,CAAE,EAAI4D,EACvBA,CAAA,CAUT,iBAAiBM,EAAmB,CAC7B,KAAA,YAAY,KAAKA,CAAY,CAAA,CAsBpC,sBAAsBC,EAAa,CACxB,OAAAA,EAAA,CAAE,IAAK,CAAC,EAAG,KAAM,CAAC,EAAG,MAAO,GAAI,OAAQ,CAAA,EAAI,SAAU,CAAA,EAAI,GAAI,KAAK,QAAQ,OAAQ,GAAGA,CAAO,EACjG,KAAA,QAAQ,KAAKA,CAAM,EACjBA,CAAA,CAoBT,gBAAgBD,EAA8B,CAE5C,MAAME,EAAiB,CACrB,GAFa,KAAK,MAAM,MAG1B,EACA,OAAIF,EAAa,OACfE,EAAU,KAAO,IAEfF,EAAa,SACfE,EAAU,OAAS,IAEjBF,EAAa,cACfE,EAAU,UAAY,eAEpBF,EAAa,YACfE,EAAU,UAAY,aAEpBF,EAAa,YAEb,OAAOA,EAAa,WAAc,UAClC,CAAC,SAAU,mBAAoB,kBAAkB,EAAE,SAASA,EAAa,SAAS,EAElFE,EAAU,UAAYF,EAAa,UAEnCE,EAAU,UAAY,IAGtBF,EAAa,SACfE,EAAU,OAAS,IAEjBF,EAAa,UACfE,EAAU,QAAU,IAElBF,EAAa,SACfE,EAAU,OAAS,IAEjBF,EAAa,OACfE,EAAU,KAAOF,EAAa,MAE5BA,EAAa,QACfE,EAAU,MAAQF,EAAa,OAE7BA,EAAa,WACfE,EAAU,SAAWF,EAAa,UAE/B,KAAA,MAAM,KAAKE,CAAS,EAClBA,CAAA,CAGT,cAAc7F,EAAa,CACnB,MAAA8F,EAAU9F,EAAI,cAAc,SAAS,EAC3C8F,EAAQ,aAAa,QAAS,KAAK,QAAQ,MAAM,EAExC,QAAA,EAAI,EAAGzG,EAAI,KAAK,QAAQ,OAAQ,EAAIA,EAAG,IACtCyG,EAAA,YAAY,KAAK,aAAa9F,EAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,EAEtD,OAAA8F,CAAA,CAGT,aAAa9F,EAAawD,EAAW,CAC7B,MAAAoC,EAAS5F,EAAI,cAAc,QAAQ,EACnC+F,EAAmBhH,GAAiB,CAClC,MAAAiH,EAAIhG,EAAI,cAAcjB,CAAI,EAC5B,OAAAyE,EAAKzE,CAAI,EAAE,OACbiH,EAAE,aAAa,QAASxC,EAAKzE,CAAI,EAAE,KAAK,EAEtCyE,EAAKzE,CAAI,EAAE,OACXiH,EAAA,YAAY,KAAK,YAAYhG,EAAKwD,EAAKzE,CAAI,EAAE,KAAK,CAAC,EAEhDiH,CACT,EACO,OAAAJ,EAAA,YAAYG,EAAgB,MAAM,CAAC,EACnCH,EAAA,YAAYG,EAAgB,OAAO,CAAC,EACpCH,EAAA,YAAYG,EAAgB,KAAK,CAAC,EAClCH,EAAA,YAAYG,EAAgB,QAAQ,CAAC,EACrCH,EAAA,YAAYG,EAAgB,UAAU,CAAC,EACvCH,CAAA,CAGT,YAAY5F,EAAaiG,EAAY,CAC7B,MAAAC,EAAUlG,EAAI,cAAc,OAAO,EACrC,OAAA1B,EAAS2H,CAAK,GACRC,EAAA,aAAa,MAAOD,CAAK,EAC1BC,IAGLD,EAAM,OAAS,QACTC,EAAA,aAAa,OAAQD,EAAM,IAAI,EAErCA,EAAM,OAAS,QACjBC,EAAQ,aAAa,OAAQ,OAAO,CAAC,CAACD,EAAM,IAAI,CAAC,EAE/CA,EAAM,QAAU,QACVC,EAAA,aAAa,QAASD,EAAM,KAAK,EAGpCC,EAAA,CAGT,wBAAwBlG,EAAa,CACnC,MAAMmG,EAAcvF,EAAK,cAAcZ,EAAK,UAAW,CAAC,CAAC,QAAS,KAAK,kBAAkB,MAAM,CAAC,CAAC,EACxF,QAAA,EAAI,EAAGX,EAAI,KAAK,kBAAkB,OAAQ,EAAIA,EAAG,IAAK,CACvD,MAAA+G,EAAU,KAAK,kBAAkB,CAAC,EACxCD,EAAY,YAAY,KAAK,wBAAwBnG,EAAKoG,CAAO,CAAC,CAAA,CAE7D,OAAAD,CAAA,CAGT,uBAAuBnG,EAAa,CAClC,MAAMqG,EAAUzF,EAAK,cAAcZ,EAAK,eAAgB,CAAC,CAAC,QAAS,KAAK,iBAAiB,MAAM,CAAC,CAAC,EACxF,QAAA,EAAI,EAAGX,EAAI,KAAK,iBAAiB,OAAQ,EAAIA,EAAG,IAAK,CACtD,MAAAiH,EAAS,KAAK,iBAAiB,CAAC,EACtCD,EAAQ,YAAY,KAAK,wBAAwBrG,EAAKsG,CAAM,CAAC,CAAA,CAExD,OAAAD,CAAA,CAGT,wBAAwBrG,EAAa0F,EAA0C,CACvE,MAAAa,EAAKvG,EAAI,cAAc,IAAI,EAC3BwG,EAAU,CACd,iBACA,cACA,YACA,YACA,oBACA,kBACA,WACA,SACA,SACA,WACA,cACA,cACA,MACF,EAEMvG,EAAkB,OAAO,KAAKyF,CAAiB,EAAE,OAAOP,GAAOqB,EAAQ,QAAQrB,CAAG,IAAM,EAAE,EAChG,GAAIO,EAAkB,UAAW,CAC/B,MAAMe,EAAgBf,EAAkB,UACxCa,EAAG,YAAY,KAAK,gBAAgBvG,EAAKyG,CAAa,CAAC,CAAA,CAErDf,EAAkB,aACpBa,EAAG,YAAY,KAAK,iBAAiBvG,EAAK0F,EAAkB,UAAU,CAAC,EACpEa,EAAA,aAAa,kBAAmB,GAAG,GAExC,IAAIG,EAAIzG,EAAW,OACnB,KAAOyG,KACFH,EAAA,aAAatG,EAAWyG,CAAC,EAAGhB,EAAkBzF,EAAWyG,CAAC,CAAgC,CAAC,EAEhG,OAAIhB,EAAkB,QACjBa,EAAA,aAAa,YAAa,GAAG,EAE9Bb,EAAkB,QACjBa,EAAA,aAAa,YAAa,GAAG,EAE9Bb,EAAkB,UACjBa,EAAA,aAAa,cAAe,GAAG,EAEhCb,EAAkB,WACjBa,EAAA,aAAa,iBAAkB,GAAG,EAEnCb,EAAkB,UACjBa,EAAA,aAAa,oBAAqB,GAAG,EAEtCb,EAAkB,WAAa,QAAaA,EAAkB,OAAS,QACtEa,EAAA,aAAa,OAAQ,GAAG,EAEtBA,CAAA,CAGT,gBAAgBvG,EAAayG,EAAoB,CACzC,MAAAE,EAAY3G,EAAI,cAAc,WAAW,EACzC4G,EAAW,OAAO,KAAKH,CAAa,EAC1C,QAASrH,EAAI,EAAGC,EAAIuH,EAAS,OAAQxH,EAAIC,EAAGD,IAChCuH,EAAA,aAAaC,EAASxH,CAAC,EAAGqH,EAAcG,EAASxH,CAAC,CAAC,CAAC,EAEzD,OAAAuH,CAAA,CAGT,YAAY3G,EAAa,CACjB,MAAA6G,EAAQ7G,EAAI,cAAc,OAAO,EACvC6G,EAAM,aAAa,QAAS,OAAO,KAAK,MAAM,MAAM,CAAC,EAC5C,QAAA,EAAI,EAAGxH,EAAI,KAAK,MAAM,OAAQ,EAAIA,EAAG,IAAK,CAC3C,MAAAyH,EAAK,KAAK,MAAM,CAAC,EACvBD,EAAM,YAAY,KAAK,WAAW7G,EAAK8G,CAAE,CAAC,CAAA,CAErC,OAAAD,CAAA,CAGT,WAAW7G,EAAa8G,EAAS,CACzB,MAAAC,EAAO/G,EAAI,cAAc,MAAM,EACrC,GAAI8G,EAAG,KAAM,CACL,MAAAE,EAAOhH,EAAI,cAAc,IAAI,EAC9BgH,EAAA,aAAa,MAAOF,EAAG,IAAI,EAChCC,EAAK,YAAYC,CAAI,CAAA,CAGvB,GAAIF,EAAG,SAAU,CACT,MAAAG,EAAWjH,EAAI,cAAc,MAAM,EAChCiH,EAAA,aAAa,MAAOH,EAAG,QAAQ,EACxCC,EAAK,YAAYE,CAAQ,CAAA,CAS3B,GANIH,EAAG,MACLC,EAAK,YAAY/G,EAAI,cAAc,GAAG,CAAC,EAErC8G,EAAG,QACLC,EAAK,YAAY/G,EAAI,cAAc,GAAG,CAAC,EAErC8G,EAAG,UAAW,CACV,MAAAI,EAAYlH,EAAI,cAAc,WAAW,EACrCkH,EAAA,aAAa,MAAOJ,EAAG,SAAS,EAC1CC,EAAK,YAAYG,CAAS,CAAA,CAE5B,GAAIJ,EAAG,UAAW,CACV,MAAAK,EAAInH,EAAI,cAAc,GAAG,EAC3B8G,EAAG,YAAc,IACjBK,EAAA,aAAa,MAAOL,EAAG,SAAS,EAEpCC,EAAK,YAAYI,CAAC,CAAA,CAEpB,OAAIL,EAAG,QACLC,EAAK,YAAY/G,EAAI,cAAc,QAAQ,CAAC,EAE1C8G,EAAG,QACLC,EAAK,YAAY/G,EAAI,cAAc,QAAQ,CAAC,EAE1C8G,EAAG,SACLC,EAAK,YAAY/G,EAAI,cAAc,SAAS,CAAC,EAE3C8G,EAAG,OACLC,EAAK,YAAY,KAAK,YAAY/G,EAAK8G,EAAG,KAAK,CAAC,EAE3CC,CAAA,CAGT,YAAY/G,EAAa,CACjB,MAAAoH,EAAQpH,EAAI,cAAc,OAAO,EACvCoH,EAAM,aAAa,QAAS,OAAO,KAAK,MAAM,MAAM,CAAC,EAC5C,QAAA,EAAI,EAAG/H,EAAI,KAAK,MAAM,OAAQ,EAAIA,EAAG,IAAK,CAC3C,MAAAyH,EAAK,KAAK,MAAM,CAAC,EACvBM,EAAM,YAAY,KAAK,WAAWpH,EAAK8G,CAAE,CAAC,CAAA,CAErC,OAAAM,CAAA,CAGT,WAAWpH,EAAa8G,EAAS,CAC3B,IAAAO,EACE,MAAA9B,EAAOvF,EAAI,cAAc,MAAM,EACjC,OAAA8G,EAAG,OAAS,WACJO,EAAA,KAAK,kBAAkBrH,EAAK8G,CAAE,EACxCvB,EAAK,YAAY8B,CAAO,GACfP,EAAG,OAAS,aACXO,EAAA,KAAK,mBAAmBrH,EAAK8G,CAAE,EACzCvB,EAAK,YAAY8B,CAAO,GAEnB9B,CAAA,CAGT,mBAAmBvF,EAAawD,EAAW,CACnC,MAAA6D,EAAUrH,EAAI,cAAc,cAAc,EAC5CwD,EAAK,OACC6D,EAAA,aAAa,SAAU7D,EAAK,MAAM,EACjCA,EAAK,OACN6D,EAAA,aAAa,OAAQ7D,EAAK,IAAI,EAC9B6D,EAAA,aAAa,QAAS7D,EAAK,KAAK,EAChC6D,EAAA,aAAa,MAAO7D,EAAK,GAAG,EAC5B6D,EAAA,aAAa,SAAU7D,EAAK,MAAM,GAEtC,MAAA8D,EAAQtH,EAAI,cAAc,MAAM,EACtCsH,EAAM,aAAa,WAAY9D,EAAK,MAAM,QAAU,CAAC,EAC/C,MAAA+D,EAAavH,EAAI,cAAc,OAAO,EACxC,OAAOwD,EAAK,OAAU,UAAYA,EAAK,MAAM,MAC/C+D,EAAW,aAAa,MAAO/D,EAAK,MAAM,OAASA,EAAK,KAAK,EACpDA,EAAK,MAAM,OACpB+D,EAAW,aAAa,QAAS/D,EAAK,MAAM,KAAK,EAG7C,MAAAgE,EAAMxH,EAAI,cAAc,MAAM,EAC9ByH,EAAWzH,EAAI,cAAc,OAAO,EAC1C,OAAAwH,EAAI,aAAa,WAAYhE,EAAK,IAAI,QAAU,CAAC,EAC7C,OAAOA,EAAK,OAAU,UAAYA,EAAK,IAAI,MAC7CiE,EAAS,aAAa,MAAOjE,EAAK,IAAI,OAASA,EAAK,GAAG,EAC9CA,EAAK,IAAI,OAClBiE,EAAS,aAAa,QAASjE,EAAK,IAAI,KAAK,EAE/C8D,EAAM,YAAYC,CAAU,EAC5BC,EAAI,YAAYC,CAAQ,EACxBJ,EAAQ,YAAYC,CAAK,EACzBD,EAAQ,YAAYG,CAAG,EAChBH,CAAA,CAQT,kBAAkBrH,EAAawD,EAAW,CAClC,MAAA6D,EAAUzG,EAAK,cAAcZ,EAAK,cAAe,CAAC,CAAC,cAAewD,EAAK,WAAW,CAAC,CAAC,EACrFA,EAAK,UACRA,EAAK,QAAU,YAEZA,EAAK,UACRA,EAAK,QAAU,YAGX,MAAAkE,EAAU1H,EAAI,cAAc,SAAS,EACvC1B,EAASkF,EAAK,OAAO,EACfkE,EAAA,aAAa,MAAOlE,EAAK,OAAO,EAEpCA,EAAK,QAAQ,MACfkE,EAAQ,aAAa,QAASlE,EAAK,QAAQ,KAAK,EAEhDkE,EAAQ,aAAa,MAAOlE,EAAK,QAAQ,GAAG,EAI1C,MAAAmE,EAAU3H,EAAI,cAAc,SAAS,EACvC,OAAA1B,EAASkF,EAAK,OAAO,EACfmE,EAAA,aAAa,MAAOnE,EAAK,OAAO,EAEpCA,EAAK,QAAQ,MACfmE,EAAQ,aAAa,QAASnE,EAAK,QAAQ,KAAK,EAEhDmE,EAAQ,aAAa,MAAOnE,EAAK,QAAQ,GAAG,EAGhD6D,EAAQ,YAAYM,CAAO,EAC3BN,EAAQ,YAAYK,CAAO,EACpBL,CAAA,CAGT,uBAAuBrH,EAAa,CAC5B,MAAA4H,EAAa5H,EAAI,cAAc,SAAS,EAC9C4H,EAAW,aAAa,QAAS,OAAO,KAAK,iBAAiB,MAAM,CAAC,EAC5D,QAAA,EAAI,EAAGvI,EAAI,KAAK,iBAAiB,OAAQ,EAAIA,EAAG,IAAK,CACtD,MAAAyH,EAAK,KAAK,iBAAiB,CAAC,EAClCc,EAAW,YAAY,KAAK,sBAAsB5H,EAAK8G,CAAE,CAAC,CAAA,CAErD,OAAAc,CAAA,CAGT,sBAAsB5H,EAAa8G,EAAS,CACpC,MAAAe,EAAS7H,EAAI,cAAc,QAAQ,EAClC,OAAA6H,EAAA,aAAa,WAAYf,EAAG,EAAE,EAC9Be,EAAA,aAAa,aAAcf,EAAG,UAAU,EACxCe,CAAA,CAGT,iBAAiB7H,EAAa,CACtB,MAAA8H,EAAa9H,EAAI,cAAc,YAAY,EACjD8H,EAAW,aAAa,QAAS,OAAO,KAAK,WAAW,MAAM,CAAC,EAEtD,QAAA,EAAI,EAAGzI,EAAI,KAAK,WAAW,OAAQ,EAAIA,EAAG,IAAK,CAChD,MAAAgG,EAAa,KAAK,WAAW,CAAC,EACpC,OAAOA,EAAM,GACb,MAAM0C,EAASnH,EAAK,cAAcZ,EAAK,WAAW,EAClD8H,EAAW,YAAYC,CAAM,EACvB,MAAA9H,EAAa,OAAO,KAAKoF,CAAK,EACpC,IAAIqB,EAAIzG,EAAW,OACnB,KAAOyG,KACEqB,EAAA,aAAa9H,EAAWyG,CAAC,EAAGrB,EAAMpF,EAAWyG,CAAC,CAAC,CAAC,CACzD,CAGK,OAAAoB,CAAA,CAGT,yBAAyB9H,EAAa,CAC9B,MAAAgI,EAAOhI,EAAI,cAAc,MAAM,EACrCgI,EAAK,aAAa,QAAS,OAAO,KAAK,mBAAmB,MAAM,CAAC,EAExD,QAAA,EAAI,EAAG3I,EAAI,KAAK,mBAAmB,OAAQ,EAAIA,EAAG,IAAK,CACxD,MAAAgG,EAAQ,KAAK,mBAAmB,CAAC,EACvC2C,EAAK,YAAY,KAAK,UAAUhI,EAAKqF,CAAK,CAAC,CAAA,CAGtC,OAAA2C,CAAA,CAGT,UAAUhI,EAAaqF,EAAY,CAC3B,MAAA4C,EAAMjI,EAAI,cAAc,KAAK,EACnC,OAAIqF,EAAM,MACR4C,EAAI,YAAY,KAAK,WAAWjI,EAAKqF,EAAM,IAAI,CAAC,EAE9CA,EAAM,MACR4C,EAAI,YAAY,KAAK,WAAWjI,EAAKqF,EAAM,IAAI,CAAC,EAE9CA,EAAM,QACR4C,EAAI,YAAY,KAAK,aAAajI,EAAKqF,EAAM,MAAM,CAAC,EAElDA,EAAM,QACR4C,EAAI,YAAY,KAAK,sBAAsBjI,EAAKqF,EAAM,MAAM,CAAC,EAE3DA,EAAM,WACR4C,EAAI,YAAY,KAAK,gBAAgBjI,EAAKqF,EAAM,SAAS,CAAC,EAErD4C,CAAA,CAGT,kBAAkBjI,EAAa,CACvB,MAAAkI,EAAclI,EAAI,cAAc,aAAa,EACnDkI,EAAY,aAAa,QAAS,OAAO,KAAK,YAAY,MAAM,CAAC,EAC7D,KAAK,mBACPA,EAAY,aAAa,oBAAqB,OAAO,KAAK,iBAAiB,CAAC,EAErE,QAAA,EAAI,EAAG7I,EAAI,KAAK,YAAY,OAAQ,EAAIA,EAAG,IACtC6I,EAAA,YAAY,KAAK,iBAAiBlI,EAAK,KAAK,YAAY,CAAC,CAAC,CAAC,EAElE,OAAAkI,CAAA,CAGT,iBAAiBlI,EAAaqF,EAAkE,CACxF,MAAA8C,EAAanI,EAAI,cAAc,YAAY,EACtCmI,EAAA,aAAa,OAAQ9C,EAAM,IAAI,EAC1C8C,EAAW,aAAa,QAAS,OAAO,CAAC,CAAC,EAC1C,IAAI/I,EAAI,EAED,cAAA,QAAQiG,CAAK,EAAE,QAAQ,CAAC,CAACF,EAAKlH,CAAK,IAAM,CAC9C,GAAIkH,IAAQ,OACV,OAEF/F,IACM,MAAAgJ,EAAUpI,EAAI,cAAc,mBAAmB,EAC7CoI,EAAA,aAAa,OAAQjD,CAAG,EACxBiD,EAAA,aAAa,QAASnK,CAAK,EACnCkK,EAAW,YAAYC,CAAO,CAAA,CAC/B,EACDD,EAAW,aAAa,QAAS,OAAO/I,CAAC,CAAC,EACnC+I,CAAA,CAGT,iBAAiBnI,EAAaqI,EAAqB,CAC3C,MAAAC,EAAOtI,EAAI,cAAc,YAAY,EAE3C,UAAWI,KAAKiI,EACVjI,KAAKiI,GACPC,EAAK,aAAalI,EAAGiI,EAAejI,CAAC,CAAC,EAGnC,OAAAkI,CAAA,CAGT,OAAQ,CACN,MAAMtI,EAAMY,EAAK,aAAaA,EAAK,QAAQ,cAAe,YAAY,EAChE2H,EAAavI,EAAI,gBACvB,OAAAuI,EAAW,YAAY,KAAK,uBAAuBvI,CAAG,CAAC,EACvDuI,EAAW,YAAY,KAAK,YAAYvI,CAAG,CAAC,EAC5CuI,EAAW,YAAY,KAAK,YAAYvI,CAAG,CAAC,EAC5CuI,EAAW,YAAY,KAAK,cAAcvI,CAAG,CAAC,EAC9CuI,EAAW,YAAY,KAAK,uBAAuBvI,CAAG,CAAC,EACvDuI,EAAW,YAAY,KAAK,wBAAwBvI,CAAG,CAAC,EACxDuI,EAAW,YAAY,KAAK,iBAAiBvI,CAAG,CAAC,EACjDuI,EAAW,YAAY,KAAK,yBAAyBvI,CAAG,CAAC,EACrD,KAAK,YAAY,QACnBuI,EAAW,YAAY,KAAK,kBAAkBvI,CAAG,CAAC,EAE7CA,CAAA,CAEX,CCvrBO,MAAMwI,EAAM,CAwBjB,YAAYrJ,EAAc,CAvB1BL,EAAA,YAAO,IACPA,EAAA,UAAK,IACLA,EAAA,eAAU,IACVA,EAAA,mBAAc,IACdA,EAAA,qBAAqB,MACrBA,EAAA,iBAA2B,MAC3BA,EAAA,4BAAsC,MACtCA,EAAA,0BAA0B,MAC1BA,EAAA,sBAAiB,GACjBA,EAAA,sBAAgC,MAChCA,EAAA,iBAAY,IACZA,EAAA,sBAAiB,IACjBA,EAAA,WAAW,MACXA,EAAA,wBAAkC,MAClCA,EAAA,4BAAsC,MACtCA,EAAA,0BAA0B,MAC1BA,EAAA,sBAAiB,GACjBA,EAAA,sBAAgC,MAChCA,EAAA,oBAAoB,CAAC,GACrBA,EAAA,kBAAkB,MAClBA,EAAA,iBAAiB,MACjBA,EAAA,iBAAiB,CAAC,GAGhB,KAAK,WAAWK,CAAM,CAAA,CAGxB,WAAWA,EAAa,CACjB,KAAA,YAAcoC,EAAS,OAAO,EACnC,KAAK,KAAO,KAAK,YACjB,KAAK,GAAK,KAAK,KACf,KAAK,QAAU,KAAK,GAAG,QAAQ,QAAS,EAAE,EACnC,OAAA,OAAO,KAAMpC,CAAM,CAAA,CAG5B,kBAAkBmI,EAAiBE,EAAe,CAC3C,KAAA,IAAM,CAACF,EAAOE,CAAG,CAAA,CAGxB,gBAAgBiB,EAA2C,CACzDA,EAAQ,QAAkBzE,GAAA,CACxB,KAAK,eAAeA,CAAM,CAAA,CAC3B,CAAA,CAmBH,eAAeA,EAAmC,CAM5C,GALA1F,EAAS0F,CAAM,IACRA,EAAA,CACP,KAAMA,CACR,GAEE,CAACA,EAAO,KACJ,MAAA,IAAI,MAAM,8EAA8E,EAE3F,KAAA,aAAa,KAAKA,CAAM,CAAA,CAW/B,aAAa0E,EAAuB,CAClC,KAAK,UAAYA,CAAA,CAGnB,OAAQ,CACN,MAAM1I,EAAMY,EAAK,aAAaA,EAAK,QAAQ,cAAe,OAAO,EAC3D+H,EAAQ3I,EAAI,gBACZ2I,EAAA,aAAa,KAAM,KAAK,OAAO,EAC/BA,EAAA,aAAa,OAAQ,KAAK,IAAI,EAC9BA,EAAA,aAAa,cAAe,KAAK,WAAW,EAC5C,MAAAC,EAAI,KAAK,IAAI,CAAC,EACdC,EAAI,KAAK,IAAI,CAAC,EAehB,GAdEF,EAAA,aAAa,MAAO,GAAG/H,EAAK,oBAAoBgI,EAAE,CAAC,EAAGA,EAAE,CAAC,CAAC,CAAC,IAAIhI,EAAK,oBAAoBiI,EAAE,CAAC,EAAGA,EAAE,CAAC,CAAC,CAAC,EAAE,EAGrGF,EAAA,aAAa,iBAAkB,KAAK,cAAc,EAGlDA,EAAA,aAAa,iBAAkB,KAAK,cAAc,EACpD,KAAK,gBACDA,EAAA,aAAa,iBAAkB,KAAK,cAAc,EAEtD,KAAK,sBACDA,EAAA,aAAa,uBAAwB,KAAK,oBAAoB,EAGlE,CAAC,KAAK,IACF,MAAA,IAAI,MAAM,kCAAkC,EAEhD,OAAC,KAAK,YACH,KAAA,cAAc,KAAK,IAAI,CAAC,EAAG,KAAK,IAAI,CAAC,CAAC,EAG7CA,EAAM,YAAY,KAAK,iBAAiB3I,CAAG,CAAC,EAE5C2I,EAAM,YAAY,KAAK,mBAAmB3I,CAAG,CAAC,EAC9C2I,EAAM,YAAY,KAAK,qBAAqB3I,CAAG,CAAC,EACzCA,CAAA,CAGT,mBAAmBA,EAAa,CACxB,MAAA8I,EAAe9I,EAAI,cAAc,cAAc,EACrD8I,EAAa,aAAa,QAAS,KAAK,aAAa,MAAM,EAC3D,MAAMC,EAAM,KAAK,aACjB,QAAS3J,EAAI,EAAGC,EAAI0J,EAAI,OAAQ3J,EAAIC,EAAGD,IAAK,CACpC,MAAA4J,EAAKD,EAAI3J,CAAC,EACV6J,EAAcjJ,EAAI,cAAc,aAAa,EACnDiJ,EAAY,aAAa,KAAM,OAAO7J,EAAI,CAAC,CAAC,EAChC6J,EAAA,aAAa,OAAQD,EAAG,IAAI,EACxCF,EAAa,YAAYG,CAAW,EAEhCD,EAAG,mBACOC,EAAA,aAAa,oBAAqBD,EAAG,iBAAiB,EAEhEA,EAAG,gBACOC,EAAA,aAAa,iBAAkBD,EAAG,cAAc,CAC9D,CAEK,OAAAF,CAAA,CAGT,iBAAiB9I,EAAa,CACtB,MAAAkJ,EAAalJ,EAAI,cAAc,YAAY,EAC3C4I,EAAI,KAAK,WAAW,CAAC,EACrBC,EAAI,KAAK,WAAW,CAAC,EAChB,OAAAK,EAAA,aAAa,MAAO,GAAGtI,EAAK,oBAAoBgI,EAAE,CAAC,EAAGA,EAAE,CAAC,CAAC,CAAC,IAAIhI,EAAK,oBAAoBiI,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAI,KAAK,cAAc,CAAC,EAAE,EAC/HK,CAAA,CAGT,qBAAqBlJ,EAAa,CAChC,MAAMmJ,EAAK,KAAK,UACVhB,EAAanI,EAAI,cAAc,gBAAgB,EAC1C,OAAAmI,EAAA,aAAa,OAAQgB,EAAG,UAAU,EAC7ChB,EAAW,aAAa,kBAAmBgB,EAAG,gBAAkB,IAAM,GAAG,EACzEhB,EAAW,aAAa,iBAAkBgB,EAAG,eAAiB,IAAM,GAAG,EACvEhB,EAAW,aAAa,oBAAqBgB,EAAG,kBAAoB,IAAM,GAAG,EAC7EhB,EAAW,aAAa,iBAAkBgB,EAAG,eAAiB,IAAM,GAAG,EAChEhB,CAAA,CAGT,cAAciB,EAAeC,EAAa,CACnC,KAAA,WAAa,CAACD,EAAUC,CAAM,CAAA,CAEvC,CChJO,MAAMC,CAAU,CAyBrB,YAAYnK,EAAyB,CAxBrCL,EAAA,YAAO,IACPA,EAAA,UAAKyC,EAAS,WAAW,GACzBzC,EAAA,wBACAA,EAAA,iBAAiB,MACjBA,EAAA,qBAAqC,CAAC,GACtCA,EAAA,YAA4E,CAAC,GAC7EA,EAAA,mBAA0B,CAAC,GAC3BA,EAAA,eAAyB,CAAC,GAC1BA,EAAA,uBAAuB,IACvBA,EAAA,gBAAoD,CAAC,GACrDA,EAAA,gBAAoD,CAAC,GACrDA,EAAA,eAAmB,CAAC,GACpBA,EAAA,iBAAqC,CAAC,GACtCA,EAAA,qBACAA,EAAA,gBACAA,EAAA,wBAAwB,CAAC,GACzBA,EAAA,mBAAmE,CAAC,GACpEA,EAAA,qBAAsC,MAEtCA,EAAA,kBAAa,CAAC,GACdA,EAAA,kBAEAA,EAAA,iBAAiB,MAGf,KAAK,gBAAsB,IAAA,KAAO,EAAA,kBAAA,EAAsB,GAAK,IAC7D,KAAK,UAAYK,EAAO,WAAa,IAAIyF,EAEzC,KAAK,WAAWzF,CAAM,CAAA,CAGxB,WAAWA,EAAa,CACtBA,EAASA,GAAU,CAAC,EACpB,KAAK,KAAOA,EAAO,KACd,KAAA,GAAKoC,EAAS,WAAW,EAC9B,KAAK,gBAAsB,IAAA,KAAO,EAAA,kBAAA,EAAsB,GAAK,IACzDpC,EAAO,SACJ,KAAA,WAAWA,EAAO,OAAO,EAG3B,KAAA,UAAY,IAAIoE,CAAoB,CAO3C,YAAa,CACJ,MAAA,CACL,UAAW,KAAK,UAAU,WAAW,EACrC,cAAe,KAAK,cACpB,KAAM,KAAK,KACX,QAAS,KAAK,QACd,YAAa,KAAK,YAClB,SAAU,KAAK,SACf,SAAU,KAAK,SACf,QAAS,KAAK,QACd,iBAAkB,KAAK,iBACvB,YAAa,KAAK,YAClB,KAAM,KAAK,KACX,GAAI,KAAK,EACX,CAAA,CAOF,WAAWC,EAAW,CACf,KAAA,UAAU,WAAWA,EAAK,SAAS,EACxC,OAAOA,EAAK,UACL,OAAA,OAAO,KAAMA,CAAI,CAAA,CAG1B,0BAA0B+F,EAAiC,CACzD,KAAK,cAAgBA,CAAA,CAGvB,SAASZ,EAAc,CAChB,KAAA,QAAQ,KAAKA,CAAK,EAClB,KAAA,UAAU,YAAYA,EAAO,OAAO,CAAA,CAG3C,YAAY7E,EAAoB,CACzB,KAAA,UAAU,KAAKA,CAAQ,EACvB,KAAA,UAAU,YAAYA,EAAU,qBAAqB,CAAA,CAG5D,mBAAmB0F,EAAkB7D,EAAqC,CACnE,KAAA,iBAAiB6D,CAAQ,EAAI7D,CAAA,CAWpC,UAAU8D,EAA+C,CACvD,GAAI,CAAC,MAAM,QAAQA,CAAO,EAClB,KAAA,2EAER,KAAK,SAAWA,CAAA,CAWlB,UAAUC,EAA+C,CACvD,GAAI,CAAC,MAAM,QAAQA,CAAO,EAClB,KAAA,2EAER,KAAK,SAAWA,CAAA,CAQlB,yBAAyBlG,EAAW,CAClC,OAAAA,EAAOA,GAAQ,GACR,CACL,KACA,KAAK,uBAAuBA,EAAK,CAAC,GAAK,EAAE,EACzC,KACA,KAAK,uBAAuBA,EAAK,CAAC,GAAK,EAAE,EACzC,KACA,KAAK,uBAAuBA,EAAK,CAAC,GAAK,EAAE,CAAA,EACzC,KAAK,EAAE,CAAA,CAUX,uBAAuBA,EAAsC,CACvD,GAAAlF,EAASkF,CAAI,EACR,MAAA,eAAe,OAAOA,CAAI,EAEnC,GAAIxF,EAASwF,CAAI,GAAK,CAAC,MAAM,QAAQA,CAAI,EAAG,CAC1C,IAAIjE,EAAS,GACR,GAAAiE,EAAkB,MAASA,EAAkB,KAAM,CAChD,MAAAmG,EAAanG,EAAkB,KAAO,OAAS,UAC3CjE,GAAA,KAAMiE,EAAkB,MAAQ,GAAG,GAC7CjE,GAAU,IAAIoK,CAAS,GAAA,MAEbpK,GAAA,eAEZ,OAAKiE,EAAkB,YACXjE,GAAA,MAEPiE,EAAkB,WACXjE,GAAA,IAAKiE,EAAkB,QAAQ,IAE3CjE,GAAWiE,EAAkB,KAEtBjE,CAAA,CAGL,GAAA,MAAM,QAAQiE,CAAI,EACpB,OAAOA,EAAK,OAAO,CAAC9E,EAAG2B,IAAM3B,EAAE,OAAO,KAAK,uBAAuB2B,CAAC,CAAC,EAAG,EAAE,CAC3E,CAUF,aAAaL,EAAa,CAClB,MAAA4J,EAAY5J,EAAI,cAAc,WAAW,EACrC,OAAA4J,EAAA,YAAY5J,EAAI,eAAe,KAAK,yBAAyB,KAAK,QAAQ,CAAC,CAAC,EAC/E4J,CAAA,CAUT,aAAa5J,EAAa,CAClB,MAAA6J,EAAY7J,EAAI,cAAc,WAAW,EACrC,OAAA6J,EAAA,YAAY7J,EAAI,eAAe,KAAK,yBAAyB,KAAK,QAAQ,CAAC,CAAC,EAC/E6J,CAAA,CAYT,YAAY7J,EAAa,CACjB,MAAA8J,EAAa9J,EAAI,cAAc,GAAG,EAClC/B,EAAQ+B,EAAI,cAAc,GAAG,EACnC/B,EAAM,YAAY+B,EAAI,eAAe,UAAU,CAAC,EAChD8J,EAAW,YAAY7L,CAAK,EAEtB,MAAA8L,EAAc/J,EAAI,cAAc,GAAG,EACnCgK,EAAehK,EAAI,cAAc,GAAG,EAC1CgK,EAAa,YAAYhK,EAAI,eAAe,UAAU,CAAC,EACvD+J,EAAY,YAAYC,CAAY,EAE9B,MAAAC,EAAajK,EAAI,cAAc,GAAG,EAC7BiK,EAAA,aAAa,IAAK,GAAG,EAC1B,MAAAC,EAAclK,EAAI,cAAc,GAAG,EACzC,OAAAkK,EAAY,YAAYlK,EAAI,eAAe,UAAU,CAAC,EACtDiK,EAAW,YAAYC,CAAW,EAE3B,CACL,OAAQJ,EACR,KAAMA,EACN,OAAQG,EACR,QAASF,CACX,CAAA,CASF,sBAAuB,CACrB,MAAMvG,EAAO,KAAK,KAEZkB,EAAe,CAAC,EACtB,QAAST,EAAM,EAAG5E,EAAImE,EAAK,OAAQS,EAAM5E,EAAG4E,IAAO,CAC3C,MAAAkG,EAAU3G,EAAKS,CAAG,EAClBmG,EAAYD,EAAQ,OAE1B,QAASE,EAAI,EAAGA,EAAID,EAAWC,IAAK,CAC9B,IAAAC,EAAYH,EAAQE,CAAC,EACnB,MAAAE,GAAYD,GAAA,YAAAA,EAAmC,WAAY,CAAC,EAC9DA,GAAa,OAAOA,GAAc,WACpCA,EAAaA,EAAkC,OAG5CC,EAAS,MACR,OAAOD,GAAc,WACvBC,EAAS,KAAO,WAGhBA,EAAS,OAAS,QAAU,CAACA,EAAS,OACpC,OAAO7F,EAAQ4F,CAAmB,EAAM,MAC1C5F,EAAQ4F,CAAmB,EAAI,GAEnC,CACF,CAEK,OAAA,OAAO,KAAK5F,CAAO,CAAA,CAG5B,OAAQ,WACN,MAAMlB,EAAO,KAAK,KACZiF,EAAU,KAAK,SAAW,CAAC,EAC3BzI,EAAMY,EAAK,aAAaA,EAAK,QAAQ,cAAe,WAAW,EAC/D4J,EAAYxK,EAAI,gBAClB,IAAAZ,EACAC,EACA4E,EACJuG,EAAU,aAAa,UAAW5J,EAAK,QAAQ,aAAa,EAC5D4J,EAAU,aAAa,WAAY5J,EAAK,QAAQ,YAAY,EAE5D,IAAI6J,EAAO,EACX,MAAMC,EAAY9J,EAAK,cAAcZ,EAAK,WAAW,EAE/C2K,EAAY,KAAK,YAAY3K,CAAG,EAEtC,IAAKiE,EAAM,EAAG5E,EAAImE,EAAK,OAAQS,EAAM5E,EAAG4E,IAAO,CACvC,MAAAkG,EAAU3G,EAAKS,CAAG,EAClBmG,EAAYD,EAAQ,OACnBM,EAAAL,EAAYK,EAAOL,EAAYK,EAChC,MAAAG,EAAU5K,EAAI,cAAc,KAAK,EAEvC,QAASqK,EAAI,EAAGA,EAAID,EAAWC,IAAK,CAClC5B,EAAQ4B,CAAC,EAAI5B,EAAQ4B,CAAC,GAAK,CAAC,EACxB,IAAAC,EAAYH,EAAQE,CAAC,EACrBnG,EACE,MAAAqG,GAAYD,GAAA,YAAAA,EAAmC,WAAY,CAAC,EAYlE,OAVIA,GAAa,OAAOA,GAAc,WACpCA,EAAaA,EAAkC,OAG5CC,EAAS,MACR,OAAOD,GAAc,WACvBC,EAAS,KAAO,UAIZA,EAAS,KAAM,CACrB,IAAK,SACIrG,EAAAyG,EAAU,OAAO,UAAU,EAAI,EACjCzG,EAAA,WAAW,WAAW,UAAYoG,EACvC,MACF,IAAK,OACIpG,EAAAyG,EAAU,KAAK,UAAU,EAAI,EAChCL,aAAqB,OACvBA,EAAYA,EAAU,QAAQ,GAE3BpG,EAAA,WAAW,WAAW,UAAY,OAAYoG,EAAuB,KAAK,iBAAoB,MACnG,MACF,IAAK,UACIpG,EAAAyG,EAAU,QAAQ,UAAU,EAAI,EAClCzG,EAAA,WAAW,WAAW,UAAYoG,EACvC,MAEF,IAAK,OAEL,QAAS,CACH,IAAA7I,EACA,QAAOoJ,EAAA,KAAK,gBAAL,YAAAA,EAAoB,QAAQP,IAAyB,IACzD7I,EAAA,KAAK,cAAc,QAAQ6I,CAAmB,EAE9C7I,GAAAqJ,EAAA,KAAK,gBAAL,YAAAA,EAAoB,UAAUR,GAE9BpG,EAAAyG,EAAU,OAAO,UAAU,EAAI,EACjCzG,EAAA,WAAW,WAAW,UAAYzC,EACvC,KAAA,CACF,CAEE8I,EAAS,MACNrG,EAAA,aAAa,IAAKqG,EAAS,KAAK,IAC5BQ,EAAA,KAAK,iBAAiB9G,CAAG,IAAzB,YAAA8G,EAA4B,SAAU,QAC/C7G,EAAK,aAAa,IAAK,KAAK,iBAAiBD,CAAG,EAAE,KAAK,EAEpDC,EAAA,aAAa,IAAKtD,EAAK,oBAAoByJ,EAAI,EAAG,OAAOpG,EAAM,CAAC,CAAC,CAAC,EACvE2G,EAAQ,YAAY1G,CAAI,CAAA,CAItB,GAFI0G,EAAA,aAAa,IAAK3G,EAAM,CAAC,EAE7B,KAAK,iBAAiBA,CAAG,EAAG,CACxB,MAAA+G,EAAU,KAAK,iBAAiB/G,CAAG,EAErC+G,EAAQ,SAAW,SACbJ,EAAA,aAAa,eAAgB,GAAG,EAChCA,EAAA,aAAa,KAAMI,EAAQ,MAAM,GAGvCA,EAAQ,QAAU,SACZJ,EAAA,aAAa,eAAgB,GAAG,EAChCA,EAAA,aAAa,IAAKI,EAAQ,KAAK,EACzC,CAGFN,EAAU,YAAYE,CAAO,CAAA,CA4B3B,GAzBAH,IAAS,EACDD,EAAA,YACR5J,EAAK,cAAcZ,EAAK,YAAa,CACnC,CAAC,MAAO,GAAGY,EAAK,oBAAoB,EAAG,CAAC,CAAC,IAAIA,EAAK,oBAAoB6J,EAAM,OAAOjH,EAAK,MAAM,CAAC,CAAC,EAAE,CACnG,CAAA,CACH,EAEAgH,EAAU,YAAY5J,EAAK,cAAcZ,EAAK,YAAa,CAAC,CAAC,MAAOY,EAAK,oBAAoB,EAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAGvG4J,EAAU,YAAY,KAAK,UAAU,UAAUxK,CAAG,CAAC,EAE/C,KAAK,QAAQ,QACfwK,EAAU,YAAY,KAAK,cAAcxK,CAAG,CAAC,EAE/CwK,EAAU,YAAYE,CAAS,EAG3B,KAAK,iBACPF,EAAU,YAAY,KAAK,gBAAgB,UAAUxK,CAAG,CAAC,EAMvD,KAAK,WAAW,OAAS,EAAG,CACxB,MAAAiL,EAAejL,EAAI,cAAc,YAAY,EAC7CkL,EAAa,KAAK,WACxB,IAAK9L,EAAI,EAAGC,EAAI6L,EAAW,OAAQ9L,EAAIC,EAAGD,IAAK,CACvC,MAAA+L,EAAcnL,EAAI,cAAc,WAAW,EAC3CoL,EAAiBF,EAAW9L,CAAC,EACnC+L,EAAY,aAAa,MAAO,OAAOC,EAAU,IAAI,CAAC,EAC5CA,EAAA,GAAKxK,EAAK,SAAS,WAAW,EACxC,KAAK,UAAU,YACb,CACE,GAAIwK,EAAU,GACd,OAAQA,EAAU,SAClB,WAAYA,EAAU,YAAc,UACtC,EACA,WACF,EACAD,EAAY,aAAa,OAAQ,KAAK,UAAU,kBAAkBC,CAAS,CAAC,EAC5EH,EAAa,YAAYE,CAAW,CAAA,CAEtCX,EAAU,YAAYS,CAAY,CAAA,CAKhC,GAAA,KAAK,YAAY,OAAS,EAAG,CACzB,MAAAI,EAAarL,EAAI,cAAc,YAAY,EAC5C,IAAAZ,EAAI,EAAGC,EAAI,KAAK,YAAY,OAAQD,EAAIC,EAAGD,IAAK,CAC7C,MAAAkM,EAAYtL,EAAI,cAAc,WAAW,EAC/CsL,EAAU,aAAa,MAAO,GAAG,KAAK,YAAYlM,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,YAAYA,CAAC,EAAE,CAAC,CAAC,EAAE,EACnFiM,EAAW,YAAYC,CAAS,CAAA,CAElCd,EAAU,YAAYa,CAAU,CAAA,CAKlC,GAFK,KAAA,mBAAmBrL,EAAKwK,CAAS,EAElC,KAAK,SAAS,OAAS,GAAK,KAAK,SAAS,OAAS,EAAG,CAClD,MAAAe,EAAevL,EAAI,cAAc,cAAc,EACjD,KAAK,SAAS,OAAS,GACzBuL,EAAa,YAAY,KAAK,aAAavL,CAAG,CAAC,EAE7C,KAAK,SAAS,OAAS,GACzBuL,EAAa,YAAY,KAAK,aAAavL,CAAG,CAAC,EAEjDwK,EAAU,YAAYe,CAAY,CAAA,CAK/B,IAAAnM,EAAI,EAAGC,EAAI,KAAK,UAAU,OAAQD,EAAIC,EAAGD,IAAK,CAC3C,MAAAyE,EAAU7D,EAAI,cAAc,SAAS,EACnC6D,EAAA,aAAa,OAAQ,KAAK,UAAU,kBAAkB,KAAK,UAAUzE,CAAC,CAAC,CAAC,EAChFoL,EAAU,YAAY3G,CAAO,CAAA,CAG3B,GAAA,KAAK,QAAQ,OAAS,EAAG,CACrB,MAAA2H,EAASxL,EAAI,cAAc,YAAY,EAExC,IADLwL,EAAO,aAAa,QAAS,KAAK,QAAQ,MAAM,EAC3CpM,EAAI,EAAGC,EAAI,KAAK,QAAQ,OAAQD,EAAIC,EAAGD,IAAK,CACzC,MAAAuJ,EAAQ3I,EAAI,cAAc,WAAW,EACrC2I,EAAA,aAAa,OAAQ,KAAK,UAAU,kBAAkB,KAAK,QAAQvJ,CAAC,CAAC,CAAC,EAC5EoM,EAAO,YAAY7C,CAAK,CAAA,CAE1B6B,EAAU,YAAYgB,CAAM,CAAA,CAEvB,OAAAxL,CAAA,CAQT,cAAcA,EAAa,CACzB,MAAMyL,EAAO7K,EAAK,cAAcZ,EAAK,MAAM,EAClC,QAAA,EAAI,EAAGX,EAAI,KAAK,QAAQ,OAAQ,EAAIA,EAAG,IAAK,CAC7C,MAAAqM,EAAK,KAAK,QAAQ,CAAC,EACnBC,EAAM/K,EAAK,cAAcZ,EAAK,MAAO,CACzC,CAAC,MAAO0L,EAAG,KAAO,EAAI,CAAC,EACvB,CAAC,MAAOA,EAAG,KAAO,EAAI,CAAC,CAAA,CACxB,EACGA,EAAG,QACLC,EAAI,aAAa,SAAU,OAAO,CAAC,CAAC,EAElCD,EAAG,SACLC,EAAI,aAAa,UAAW,OAAO,CAAC,CAAC,GAEnCD,EAAG,aAAeA,EAAG,QACvBC,EAAI,aAAa,cAAe,OAAO,CAAC,CAAC,EAEvCD,EAAG,MACDC,EAAA,aAAa,QAASD,EAAG,KAAK,EAElCC,EAAI,aAAa,QAAS,OAAO,QAAQ,CAAC,EAG5CF,EAAK,YAAYE,CAAG,CAAA,CAEf,OAAAF,CAAA,CAUT,mBAAmBzL,EAAawK,EAAoB,CAClD,GAAI,KAAK,QAAS,CAChB,IAAIoB,EAAa,GACjB,MAAMC,EAAO,KAAK,QAAQ,KAAO,KAAK,QAAQ,KAAOD,EAC/CE,EAAQ,KAAK,QAAQ,MAAQ,KAAK,QAAQ,MAAQF,EAClDG,EAAM,KAAK,QAAQ,IAAM,KAAK,QAAQ,IAAMH,EAC5CI,EAAS,KAAK,QAAQ,OAAS,KAAK,QAAQ,OAASJ,EAC9CA,EAAA,GACb,MAAMK,EAAS,KAAK,QAAQ,OAAS,KAAK,QAAQ,OAASL,EACrDM,EAAS,KAAK,QAAQ,OAAS,KAAK,QAAQ,OAASN,EAEjDpB,EAAA,YACR5J,EAAK,cAAcZ,EAAK,cAAe,CACrC,CAAC,MAAO+L,CAAG,EACX,CAAC,SAAUC,CAAM,EACjB,CAAC,OAAQH,CAAI,EACb,CAAC,QAASC,CAAK,EACf,CAAC,SAAUG,CAAM,EACjB,CAAC,SAAUC,CAAM,CAClB,CAAA,CACH,CAAA,CAEE,KAAK,cACP1B,EAAU,YAAY5J,EAAK,cAAcZ,EAAK,YAAa,CAAC,CAAC,cAAe,KAAK,YAAY,CAAC,CAAC,CAAC,CAClG,CAWF,mBAAmBmM,EAAmD,CACpE,KAAK,aAAeA,CAAA,CAiBtB,cAAcC,EAAoB,CAChC,KAAK,QAAUA,CAAA,CAQjB,WAAW3D,EAAwB,CACjC,KAAK,QAAUA,CAAA,CASjB,QAAQjF,EAA2E,CACjF,KAAK,KAAOA,CAAA,CASd,WAAW6I,EAAeC,EAAe,CACvC,KAAK,YAAY,KAAK,CAACD,EAAOC,CAAK,CAAC,CAAA,CAUtC,WAAWtI,EAAgBC,EAAaC,EAAc,CACpD,KAAK,UAAU,WAAWF,EAAQC,EAAKC,CAAI,CAAA,CAkB7C,iBAAiBqI,EAAoC,CACnD,KAAK,cAAgBA,CAAA,CAEzB,CC9mBO,MAAMC,CAAS,CAWpB,aAAc,CAVd1N,EAAA,UAAKyC,EAAS,UAAU,GACxBzC,EAAA,kBAAa,IAAIsG,GACjBtG,EAAA,qBAAgB,IAAIwF,GACpBxF,EAAA,iBAAY,IAAIyE,GAChBzE,EAAA,kBAA0B,CAAC,GAC3BA,EAAA,cAAkB,CAAC,GACnBA,EAAA,gBAAuB,CAAC,GACxBA,EAAA,aAA2C,CAAC,GAC5CA,EAAA,oBAGE,KAAK,WAAW,CAAA,CAGlB,YAAa,CACN,KAAA,GAAKyC,EAAS,UAAU,EACxB,KAAA,WAAa,IAAI6D,EACjB,KAAA,cAAgB,IAAId,EACpB,KAAA,UAAY,IAAIf,EACrB,KAAK,UAAU,YAAY,KAAK,WAAY,YAAY,EACxD,KAAK,UAAU,YAAY,KAAK,cAAe,eAAe,CAAA,CAGhE,gBAAgBpE,EAAc,CAC5B,OAAAA,EAAS,OAAO,OAAO,CAAI,EAAA,CAAE,KAAM,SAAS,OAAO,OAAO,KAAK,WAAW,OAAS,CAAC,CAAC,GAAKA,CAAM,EACzF,IAAImK,EAAUnK,CAAM,CAAA,CAG7B,eAAgB,CACd,OAAO,KAAK,UAAA,CAGd,SAASwJ,EAAc,CAChB,KAAA,OAAO,KAAKA,CAAK,CAAA,CAGxB,YAAY7E,EAAoB,CACzB,KAAA,SAAS,KAAKA,CAAQ,CAAA,CAU7B,iBAAiB2I,EAAiBC,EAAoB,CAChD,KAAK,aAAe,OACtB,KAAK,YAAc,CAAC,GAElB,KAAK,YAAYD,CAAO,GAAK,OAC1B,KAAA,YAAYA,CAAO,EAAI,CAAC,GAE1B,KAAA,YAAYA,CAAO,EAAE,IAAMC,CAAA,CAUlC,kBAAkBD,EAAiBC,EAAoB,CACjD,KAAK,aAAe,OACtB,KAAK,YAAc,CAAC,GAElB,KAAK,YAAYD,CAAO,GAAK,OAC1B,KAAA,YAAYA,CAAO,EAAI,CAAC,GAG/B,KAAK,YAAYA,CAAO,EAAE,KAAO,OAAO,aAAa,GAAKC,CAAU,CAAA,CAGtE,SAASC,EAAeC,EAAkBC,EAAeC,EAA6B,CAC9E,MAAAC,EAAiBH,EAAS,MAAM,GAAG,EACnCI,EAAYD,EAAeA,EAAe,OAAS,CAAC,EAC1D,GAAI,CAACD,EACK,OAAAE,EAAU,YAAe,EAAA,CAC/B,IAAK,OACL,IAAK,MACWF,EAAA,aACd,MACF,IAAK,MACWA,EAAA,YACd,MACF,IAAK,MACWA,EAAA,YACd,MACF,QACgBA,EAAA,KACd,KAAA,CAGN,OAAK,KAAK,MAAMF,CAAQ,IACjB,KAAA,MAAMA,CAAQ,EAAI,CACrB,GAAIA,EACJ,KAAMC,EACN,SAAAD,EACA,YAAAE,EACA,UAAAE,CACF,GAEK,KAAK,MAAMJ,CAAQ,CAAA,CAG5B,aAAapC,EAAsB,CAC5B,KAAA,UAAU,YAAYA,EAAW,WAAW,EACvCA,EAAA,0BAA0B,KAAK,aAAa,EACjD,KAAA,WAAW,KAAKA,CAAS,CAAA,CAGhC,oBAAqB,CACnB,MAAMxK,EAAMY,EAAK,aAAaA,EAAK,QAAQ,aAAc,OAAO,EAC1DqM,EAAQjN,EAAI,gBACd,IAAA,EACAX,EAEE4N,EAAA,YACJrM,EAAK,cAAcZ,EAAK,UAAW,CACjC,CAAC,YAAa,MAAM,EACpB,CAAC,cAAe,0DAA0D,CAC3E,CAAA,CACH,EACMiN,EAAA,YACJrM,EAAK,cAAcZ,EAAK,UAAW,CACjC,CAAC,YAAa,KAAK,EACnB,CAAC,cAAe,iBAAiB,CAClC,CAAA,CACH,EAEA,MAAMkN,EAAkB,CAAC,EACd,UAAAC,KAAY,KAAK,MACtBA,KAAY,KAAK,QACRD,EAAA,KAAK,MAAMC,CAAQ,EAAE,SAAS,EAAI,KAAK,MAAMA,CAAQ,EAAE,aAGtE,UAAWH,KAAaE,EAClBF,KAAaE,GACTD,EAAA,YACJrM,EAAK,cAAcZ,EAAK,UAAW,CACjC,CAAC,YAAagN,CAAS,EACvB,CAAC,cAAeE,EAAWF,CAAS,CAAC,CACtC,CAAA,CACH,EAuBC,IAnBCC,EAAA,YACJrM,EAAK,cAAcZ,EAAK,WAAY,CAClC,CAAC,WAAY,kBAAkB,EAC/B,CAAC,cAAe,4EAA4E,CAC7F,CAAA,CACH,EACMiN,EAAA,YACJrM,EAAK,cAAcZ,EAAK,WAAY,CAClC,CAAC,WAAY,uBAAuB,EACpC,CAAC,cAAe,+EAA+E,CAChG,CAAA,CACH,EACMiN,EAAA,YACJrM,EAAK,cAAcZ,EAAK,WAAY,CAClC,CAAC,WAAY,gBAAgB,EAC7B,CAAC,cAAe,wEAAwE,CACzF,CAAA,CACH,EAEK,EAAI,EAAGX,EAAI,KAAK,WAAW,OAAQ,EAAIA,EAAG,IACvC4N,EAAA,YACJrM,EAAK,cAAcZ,EAAK,WAAY,CAClC,CAAC,WAAY,uBAAuB,EAAI,CAAC,MAAM,EAC/C,CAAC,cAAe,2EAA2E,CAC5F,CAAA,CACH,EAEG,IAAA,EAAI,EAAGX,EAAI,KAAK,OAAO,OAAQ,EAAIA,EAAG,IACnC4N,EAAA,YACJrM,EAAK,cAAcZ,EAAK,WAAY,CAClC,CAAC,WAAY,mBAAmB,EAAI,CAAC,MAAM,EAC3C,CAAC,cAAe,uEAAuE,CACxF,CAAA,CACH,EAGG,IAAA,EAAI,EAAGX,EAAI,KAAK,SAAS,OAAQ,EAAIA,EAAG,IACrC4N,EAAA,YACJrM,EAAK,cAAcZ,EAAK,WAAY,CAClC,CAAC,WAAY,uBAAuB,EAAI,CAAC,MAAM,EAC/C,CAAC,cAAe,2DAA2D,CAC5E,CAAA,CACH,EAGK,OAAAA,CAAA,CAGT,OAAQ,CACN,MAAMA,EAAMY,EAAK,aAAaA,EAAK,QAAQ,cAAe,UAAU,EAC9DwM,EAAKpN,EAAI,gBACfoN,EAAG,aAAa,UAAWxM,EAAK,QAAQ,aAAa,EAErD,MAAMyM,EAAyB,GACzBC,EAAS1M,EAAK,cAAcZ,EAAK,QAAQ,EACtC,QAAAZ,EAAI,EAAGC,EAAI,KAAK,WAAW,OAAQD,EAAIC,EAAGD,IAAK,CAChD,MAAAmO,EAAQvN,EAAI,cAAc,OAAO,EAGnC,OAAO,QAAY,KAAe,KAAK,WAAWZ,CAAC,EAAE,KAAK,OAASiO,GAC7D,QAAA,IACN,6DAA6DA,EAAyB,CAAC,sCACrF,KAAK,WAAWjO,CAAC,EAAE,IACrB,QAAQ,KAAK,WAAWA,CAAC,EAAE,KAAK,MAAM,kBACxC,EAEFmO,EAAM,aAAa,OAAQ,KAAK,WAAWnO,CAAC,EAAE,IAAI,EAC5CmO,EAAA,aAAa,UAAWnO,EAAI,CAAC,EAC7BmO,EAAA,aAAa,OAAQ,KAAK,UAAU,kBAAkB,KAAK,WAAWnO,CAAC,CAAC,CAAC,EAC/EkO,EAAO,YAAYC,CAAK,CAAA,CAE1BH,EAAG,YAAYE,CAAM,EAGrB,MAAME,EAAe5M,EAAK,cAAcZ,EAAK,cAAc,EAC3D,IAAIyN,EAAM,EACC,UAAA1O,KAAQ,KAAK,YAClB,GAAAA,KAAQ,KAAK,YAAa,CACtB,MAAA2O,EAAQ,KAAK,YAAY3O,CAAI,EAC7B4O,EAAc3N,EAAI,cAAc,aAAa,EACvC2N,EAAA,aAAa,OAAQ,oBAAoB,EACzCA,EAAA,aAAa,eAAgBF,GAAK,EAE9C,IAAIxP,EAAQ,GACRyP,EAAM,MACRzP,GAAS,GAAGc,CAAI,QAAQ2O,EAAM,GAAG,GAC7BA,EAAM,OACCzP,GAAA,MAGTyP,EAAM,OACRzP,GAAS,GAAGc,CAAI,QAAQ2O,EAAM,IAAI,IAGpCC,EAAY,YAAY3N,EAAI,eAAe/B,CAAK,CAAC,EACjDuP,EAAa,YAAYG,CAAW,CAAA,CAGxC,OAAAP,EAAG,YAAYI,CAAY,EAEpBxN,CAAA,CAGT,4BAA6B,CAC3B,MAAMA,EAAMY,EAAK,aAAaA,EAAK,QAAQ,oBAAqB,eAAe,EAEjE,OADQZ,EAAI,gBACZ,YACZY,EAAK,cAAcZ,EAAK,eAAgB,CACtC,CAAC,KAAM,MAAM,EACb,CAAC,OAAQY,EAAK,QAAQ,cAAc,EACpC,CAAC,SAAU,iBAAiB,CAC7B,CAAA,CACH,EACOZ,CAAA,CAGT,mBAAmB4N,EAAY,CACzB,IAAAxO,EACAC,EAKC,IAJCiE,EAAA,KAAK,WAAW,EAAE,EAAI,aACtBA,EAAA,KAAK,cAAc,EAAE,EAAI,oBACzBA,EAAA,KAAK,EAAE,EAAI,mBAEZlE,EAAI,EAAGC,EAAI,KAAK,OAAO,OAAQD,EAAIC,EAAGD,IACnCwO,EAAA,mBAAmBxO,EAAI,CAAC,MAAM,EAAI,KAAK,OAAOA,CAAC,EAAE,MAAM,EACvDkE,EAAA,KAAK,OAAOlE,CAAC,EAAE,EAAE,EAAI,mBAAmBA,EAAI,CAAC,OAG1C,UAAAwN,KAAY,KAAK,MACtB,GAAAA,KAAY,KAAK,MAAO,CACpB,MAAAiB,EAAQ,KAAK,MAAMjB,CAAQ,EACjCgB,EAAM,aAAahB,CAAQ,EAAE,EAAIiB,EAAM,KACjCvK,EAAAsJ,CAAQ,EAAI,aAAaA,CAAQ,EAAA,CAItC,IAAAxN,EAAI,EAAGC,EAAI,KAAK,SAAS,OAAQD,EAAIC,EAAGD,IACrCwO,EAAA,uBAAuBxO,EAAI,CAAC,MAAM,EAAI,KAAK,SAASA,CAAC,EAAE,MAAM,EAC7DkE,EAAA,KAAK,SAASlE,CAAC,EAAE,EAAE,EAAI,uBAAuBA,EAAI,CAAC,OACnDwO,EAAA,6BAA6BxO,EAAI,CAAC,WAAW,EAAI,KAAK,SAASA,CAAC,EAAE,UAAU,MAAM,CAC1F,CAGF,0BAA0BwO,EAA4C,CACpE,OAAO,OAAOA,EAAO,CACnB,uBAAwB,KAAK,mBAAmB,EAChD,eAAgB,KAAK,2BAA2B,EAChD,iBAAkB,KAAK,WAAW,MAAM,EACxC,mBAAoB,KAAK,MAAM,EAC/B,wBAAyB,KAAK,cAAc,MAAM,EAClD,8BAA+B,KAAK,UAAU,MAAM,CAAA,CACrD,EAED,SAAW,CAACzI,EAAKlH,CAAK,IAAK,OAAO,QAAQ2P,CAAK,EACzC,GAAAzI,EAAI,QAAQ,MAAM,IAAM,IAAMA,EAAI,QAAQ,OAAO,IAAM,GAAI,CACzDlH,aAAiBU,EACbiP,EAAAzI,CAAG,EAAIlH,EAAM,SAAS,EAEtB2P,EAAAzI,CAAG,EAAKlH,EAAc,KAAO,IAAI,OAAO,cAAA,EAAgB,kBAAkBA,CAAY,EAE9F,IAAIgD,EAAW2M,EAAMzI,CAAG,EAAa,QAAQ,YAAa,EAAE,EAClDlE,EAAAA,EAAQ,QAAQ,YAAa,EAAE,EAC/BA,EAAAA,EAAQ,QAAQ,oBAAqB,EAAE,EACjD2M,EAAMzI,CAAG,EAAI;AAAA,EAA4DlE,CAAO,EAAA,CAEpF,CAGF,eAAqD,CAC5C,OAAA,IAAI,QAAmB6M,GAAA,CAC5B,MAAMF,EAAa,CAAC,EACpB,KAAK,mBAAmBA,CAAK,EAEpB,QAAA,EAAI,EAAGvO,EAAI,KAAK,WAAW,OAAQ,EAAIA,EAAG,IAC3CuO,EAAA,uBAAuB,EAAI,CAAC,MAAM,EAAI,KAAK,WAAW,CAAC,EAAE,MAAM,EAC/DtK,EAAA,KAAK,WAAW,CAAC,EAAE,EAAE,EAAI,mBAAmB,EAAI,CAAC,OACjDsK,EAAA,6BAA6B,EAAI,CAAC,WAAW,EAAI,KAAK,WAAW,CAAC,EAAE,UAAU,MAAM,EAG5F,YAAK,0BAA0BA,CAAK,EAE7BE,EAAQF,CAAK,CAAA,CACrB,CAAA,CAEL,CC7VO,SAASG,IAAiB,CAC/B,OAAO,IAAIvB,CACb,CAOO,SAASwB,GAAmBC,EAAsB,CACjD,MAAAC,EAAYD,EAAa,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EAC7DE,EAAiB,IAAI,QAAQ,EAAKD,EAAU,OAAS,GAAM,CAAC,EAC5DE,EAASF,EAAYC,EACrBE,EAAgB,KAAKD,CAAM,EACjC,OAAO,WAAW,KAAKC,KAAuBC,EAAK,WAAW,CAAC,CAAC,CAClE,CAcgB,SAAAC,EACdC,EACAC,EACAC,EAC+B,CAC/B,MAAMC,EAAyC,CAAC,EAEhD,OAAO,IAAI,QAAQ,CAACb,EAASc,IAAW,CAC7BJ,EAAA,cAAA,EAAgB,KAAcZ,GAAA,CACrC,SAAW,CAACiB,EAAM5N,CAAO,IAAK,OAAO,QAAQ2M,CAAK,EAAG,CAC7C,MAAAkB,EAAUD,EAAK,OAAO,CAAC,EACzBA,EAAK,QAAQ,MAAM,IAAM,IAAMA,EAAK,QAAQ,MAAM,IAAM,GACnDF,EAAAG,CAAO,EAAIC,EAAA,QAAQ9N,CAAO,EAE1B0N,EAAAG,CAAO,EAAId,GAAmB/M,CAAO,CAC9C,CAGK,OAAA+N,EAAAA,IAAIL,GAAQD,GAAA,YAAAA,EAAS,aAAc,GAAI,CAACO,EAAKzL,IAAS,CAE3D,GAAIyL,EAAK,CACPL,EAAOK,CAAG,EACV,MAAA,CAGF,GAAIR,IAAe,aACjBX,EAAQtK,CAA4B,MAC/B,CACC,MAAAiC,GAASiJ,GAAA,YAAAA,EAAS,aAAc,OACtC,IAAIQ,EAAWR,GAAA,YAAAA,EAAS,SACpBQ,IAAa,SACJA,EAAAzJ,IAAW,MAAQ,2BAA6B,qEAErDqI,EAAA,IAAI,KAAK,CAACtK,CAAI,EAAG,CAAE,KAAM0L,CAAS,CAAC,CAAyB,CAAA,CACtE,CACD,CAAA,CACF,CAAA,CACF,CACH,CAagB,SAAAC,GACdX,EACArB,EACAuB,EACA,CACI,IAAAA,GAAA,YAAAA,EAAS,gBAAiB,OAC5B,MAAM,IAAI,MACR,wIACF,EAKF,MAAMU,EAAajC,EAAS,MAAM,UAAU,EAAI,MAAQ,OACjD,OAAAoB,EAAgBC,EAAU,OAAQ,CAAE,GAAGE,EAAS,WAAAU,EAAY,EAAE,KAAkBC,GAAA,CACrFC,GAAsBnC,EAAUkC,CAAS,CAAA,CAC1C,CACH,CAQA,SAASC,GAAsBnC,EAAkB3J,EAAY,CAGrD,MAAA+L,EAAO,SAAS,cAAc,GAAG,EACjCC,EAAM,IAAI,gBAAgBhM,CAAI,EAEhC+L,GAAQ,WACVA,EAAK,YAAc,WACnBA,EAAK,KAAOC,EACPD,EAAA,aAAa,WAAYpC,CAAQ,EAGtCoC,EAAK,MAAM,WAAa,SAGf,SAAA,KAAK,YAAYA,CAAI,EAC9BA,EAAK,MAAM,EAGF,SAAA,KAAK,YAAYA,CAAI,EAC9B,IAAI,gBAAgBC,CAAG,EAE3B"}