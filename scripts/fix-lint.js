#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –ª–∏–Ω—Ç–µ—Ä–∞...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã —Å –≤—ã–≤–æ–¥–æ–º
function runCommand(command, description) {
  console.log(`üìã ${description}...`);
  try {
    const output = execSync(command, { 
      encoding: 'utf8', 
      stdio: 'pipe',
      cwd: process.cwd()
    });
    console.log(`‚úÖ ${description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ`);
    return output;
  } catch (error) {
    console.log(`‚ö†Ô∏è ${description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏`);
    if (error.stdout) {
      console.log(error.stdout);
    }
    return error.stdout || '';
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –æ—à–∏–±–æ–∫
function fixSpecificIssues() {
  console.log('\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º...');
  
  const filesToFix = [
    'src/app.js',
    'src/middleware/auth.js',
    'src/services/AuthService.js',
    'src/services/errors/index.js'
  ];
  
  filesToFix.forEach(file => {
    if (fs.existsSync(file)) {
      console.log(`üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞: ${file}`);
      
      let content = fs.readFileSync(file, 'utf8');
      
      // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ console.error –Ω–∞ logger
      content = content.replace(
        /console\.error\(/g,
        'logger.error('
      );
      
      // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ console.log –Ω–∞ logger
      content = content.replace(
        /console\.log\(/g,
        'logger.info('
      );
      
      // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ console.warn –Ω–∞ logger
      content = content.replace(
        /console\.warn\(/g,
        'logger.warn('
      );
      
      // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ logger –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      if (content.includes('logger.') && !content.includes("require('./utils/logger')") && !content.includes("require('../utils/logger')")) {
        const loggerImport = "const { info, error, warn } = require('./utils/logger');\n";
        content = content.replace(/^/, loggerImport);
      }
      
      fs.writeFileSync(file, content);
      console.log(`‚úÖ –§–∞–π–ª ${file} –æ–±–Ω–æ–≤–ª–µ–Ω`);
    }
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  try {
    // 1. –ó–∞–ø—É—Å–∫ ESLint —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
    runCommand(
      'npx eslint src/ --fix',
      '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ ESLint'
    );
    
    // 2. –ó–∞–ø—É—Å–∫ Prettier –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    runCommand(
      'npx prettier --write "src/**/*.{js,json}"',
      '–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ —Å Prettier'
    );
    
    // 3. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
    fixSpecificIssues();
    
    // 4. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\nüîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–µ—Ä–∞...');
    try {
      const lintOutput = execSync('npm run lint', { 
        encoding: 'utf8', 
        stdio: 'pipe' 
      });
      console.log('‚úÖ –í—Å–µ –æ—à–∏–±–∫–∏ –ª–∏–Ω—Ç–µ—Ä–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
      console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
      console.log(lintOutput);
    } catch (error) {
      console.log('‚ö†Ô∏è –û—Å—Ç–∞–ª–∏—Å—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:');
      console.log(error.stdout);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ª–∏–Ω—Ç–µ—Ä–∞:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  main();
}

module.exports = { main, fixSpecificIssues }; 