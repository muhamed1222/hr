require('dotenv').config();
const { sequelize } = require('../src/models');

async function addPasswordHashField() {
  try {
    console.log('üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è password_hash –≤ —Ç–∞–±–ª–∏—Ü—É users...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await sequelize.authenticate();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ password_hash
    await sequelize.query(`
      ALTER TABLE users ADD COLUMN password_hash VARCHAR(255);
    `);
    console.log('‚úÖ –ü–æ–ª–µ password_hash –¥–æ–±–∞–≤–ª–µ–Ω–æ');
    
    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    await sequelize.query(`
      CREATE INDEX IF NOT EXISTS idx_users_username_status ON users(username, status);
    `);
    console.log('‚úÖ –ò–Ω–¥–µ–∫—Å username_status —Å–æ–∑–¥–∞–Ω');
    
    await sequelize.query(`
      CREATE INDEX IF NOT EXISTS idx_users_password_hash ON users(password_hash) WHERE password_hash IS NOT NULL;
    `);
    console.log('‚úÖ –ò–Ω–¥–µ–∫—Å password_hash —Å–æ–∑–¥–∞–Ω');
    
    console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    if (error.message.includes('duplicate column name')) {
      console.log('‚ÑπÔ∏è –ü–æ–ª–µ password_hash —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message);
      throw error;
    }
  } finally {
    await sequelize.close();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
addPasswordHashField().catch(error => {
  console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
}); 