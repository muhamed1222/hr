// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Mock –≤ development —Ä–µ–∂–∏–º–µ
if (process.env.NODE_ENV === 'development' && !window.Telegram) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
  const devTelegramMode = localStorage.getItem('hr_dev_telegram_mock');
  
  // –ï—Å–ª–∏ —è–≤–Ω–æ –≤–∫–ª—é—á–µ–Ω dev toggle –ò–õ–ò –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫)
  if (devTelegramMode === 'true' || devTelegramMode === null) {
    import('./telegram-mock.js').then(async ({ initTelegramMock }) => {
      await initTelegramMock();
      console.log('üîê Telegram Mock –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é initData');
    });
  }
}

// Telegram WebApp SDK API
export const tg = window.Telegram?.WebApp;

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ Telegram WebApp API
 */
export function isTelegramWebApp() {
  return typeof tg !== 'undefined';
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ Telegram
 */
export function isInsideTelegram() {
  return !!window.Telegram?.WebApp?.initDataUnsafe?.user;
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
 */
export function initTelegramApp() {
  if (!isTelegramWebApp()) {
    console.log('‚ùå Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω (–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–µ –≤ Telegram)');
    return;
  }

  // –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ä–∞–±–æ—Ç–µ
  tg.ready();
  
  // –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤–æ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
  tg.expand();
  
  // –í–∫–ª—é—á–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–∫—Ä—ã—Ç–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
  if (tg.isVersionAtLeast && tg.isVersionAtLeast('6.1')) {
    tg.enableClosingConfirmation();
  } else {
    console.log('‚ö†Ô∏è enableClosingConfirmation –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –¥–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ WebApp');
  }
  
  console.log('‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  console.log('üì± –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:', tg.platform);
  console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', tg.initDataUnsafe?.user);
  
  return tg;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
 */
export function getTelegramUser() {
  if (!isInsideTelegram()) return null;
  
  return tg.initDataUnsafe.user;
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –∞–ª–µ—Ä—Ç –≤ Telegram
 */
export function showTelegramAlert(message) {
  if (isTelegramWebApp()) {
    tg.showAlert(message);
  } else {
    alert(message);
  }
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ Telegram
 */
export function showTelegramConfirm(message, callback) {
  if (isTelegramWebApp()) {
    tg.showConfirm(message, callback);
  } else {
    const result = confirm(message);
    callback(result);
  }
}

/**
 * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É Telegram
 */
export function setupMainButton(text, onClick) {
  if (!isTelegramWebApp()) return;
  
  tg.MainButton.text = text;
  tg.MainButton.onClick(onClick);
  tg.MainButton.show();
}

/**
 * –°–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
 */
export function hideMainButton() {
  if (!isTelegramWebApp()) return;
  tg.MainButton.hide();
}

/**
 * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
 */
export function setupBackButton(onClick) {
  if (!isTelegramWebApp()) return;
  
  tg.BackButton.onClick(onClick);
  tg.BackButton.show();
}

/**
 * –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ –±–æ—Ç–∞
 */
export function sendTelegramData(data) {
  if (!isTelegramWebApp()) return;
  tg.sendData(JSON.stringify(data));
}

/**
 * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫ (–≤–∏–±—Ä–∞—Ü–∏—è)
 */
export function sendHapticFeedback(type = 'impact', style = 'medium') {
  if (!isTelegramWebApp()) return;
  
  if (type === 'impact') {
    tg.HapticFeedback.impactOccurred(style);
  } else if (type === 'notification') {
    tg.HapticFeedback.notificationOccurred(style);
  } else if (type === 'selection') {
    tg.HapticFeedback.selectionChanged();
  }
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å popup —Å –∫–Ω–æ–ø–∫–∞–º–∏
 */
export function showTelegramPopup(params, callback) {
  if (isTelegramWebApp() && tg.showPopup) {
    tg.showPopup(params, callback);
  } else {
    // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
    showTelegramAlert(params.message, callback);
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–µ—Ä—Å–∏–∏ API
 */
export function isVersionAtLeast(version) {
  if (!isTelegramWebApp()) return false;
  return tg.isVersionAtLeast(version);
}

/**
 * –ó–∞–∫—Ä—ã—Ç—å WebApp
 */
export function closeTelegramApp() {
  if (isTelegramWebApp()) {
    tg.close();
  }
} 