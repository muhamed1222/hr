import { Card } from '@/components/ui/Card'
import { Button } from '@/components/ui/Button'
import { useTelegramDeepLink } from '@/hooks/useTelegramStartParam'
import { isInsideTelegram } from '@/lib/telegram'
import { useState } from 'react'

export default function DeepLinkDemo() {
  const {
    generateEmployeeLink,
    generateLogsLink,
    generateSettingsLink,
    generateAnalyticsLink,
    generateTeamLink,
    generateReportLink,
    generateCreateLink
  } = useTelegramDeepLink()

  const [copiedLink, setCopiedLink] = useState(null)

  const copyToClipboard = (link, name) => {
    navigator.clipboard.writeText(link)
    setCopiedLink(name)
    setTimeout(() => setCopiedLink(null), 2000)
  }

  const demoLinks = [
    {
      name: '–ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ 123',
      link: generateEmployeeLink('123'),
      description: '–ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å ID 123',
      param: 'employee_123'
    },
    {
      name: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ 456',
      link: generateEmployeeLink('456', 'edit'),
      description: '–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ 456 –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
      param: 'employee_456_edit'
    },
    {
      name: '–õ–æ–≥–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è',
      link: generateLogsLink('today'),
      description: '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–æ–≥–∏ —Ä–∞–±–æ—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å',
      param: 'logs_today'
    },
    {
      name: '–õ–æ–≥–∏ –∑–∞ –Ω–µ–¥–µ–ª—é',
      link: generateLogsLink('week'),
      description: '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–æ–≥–∏ —Ä–∞–±–æ—Ç—ã –∑–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é',
      param: 'logs_week'
    },
    {
      name: '–õ–æ–≥–∏ –∑–∞ –º–µ—Å—è—Ü',
      link: generateLogsLink('month'),
      description: '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–æ–≥–∏ —Ä–∞–±–æ—Ç—ã –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü',
      param: 'logs_month'
    },
    {
      name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—â–∏–µ',
      link: generateSettingsLink(),
      description: '–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã',
      param: 'settings'
    },
    {
      name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram',
      link: generateSettingsLink('telegram'),
      description: '–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram',
      param: 'settings_telegram'
    },
    {
      name: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é',
      link: generateAnalyticsLink('week'),
      description: '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∑–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é',
      param: 'analytics_week'
    },
    {
      name: '–ö–æ–º–∞–Ω–¥–∞ 789',
      link: generateTeamLink('789'),
      description: '–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–º–∞–Ω–¥—ã —Å ID 789',
      param: 'team_789'
    },
    {
      name: '–ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç',
      link: generateReportLink('weekly'),
      description: '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç',
      param: 'report_weekly'
    },
    {
      name: '–°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–∏',
      link: generateCreateLink('worklog'),
      description: '–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –≤—Ä–µ–º–µ–Ω–∏',
      param: 'create_worklog'
    }
  ]

  if (!isInsideTelegram()) {
    return (
      <Card className="p-6">
        <div className="text-center">
          <div className="text-yellow-500 mb-4">
            <svg className="w-12 h-12 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z" />
            </svg>
          </div>
          <h3 className="text-lg font-semibold text-gray-900 mb-2">Deep Linking –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</h3>
          <p className="text-gray-600">
            Deep linking —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ Telegram WebApp
          </p>
        </div>
      </Card>
    )
  }

  return (
    <Card className="p-6">
      <div className="mb-6">
        <h3 className="text-lg font-semibold text-gray-900 mb-2">
          üîó –î–µ–º–æ Deep Linking
        </h3>
        <p className="text-gray-600">
          –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±—É—é —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞. 
          –≠—Ç–∏ —Å—Å—ã–ª–∫–∏ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ Telegram —á–∞—Ç–∞—Ö –¥–ª—è –ø—Ä—è–º–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –Ω—É–∂–Ω—ã–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º.
        </p>
      </div>

      <div className="space-y-4">
        {demoLinks.map((item, index) => (
          <div key={index} className="border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors">
            <div className="flex items-start justify-between">
              <div className="flex-1">
                <h4 className="font-medium text-gray-900 mb-1">{item.name}</h4>
                <p className="text-sm text-gray-600 mb-2">{item.description}</p>
                
                <div className="bg-gray-100 rounded p-2 text-xs font-mono text-gray-700">
                  <div className="mb-1">
                    <span className="text-gray-500">–ü–∞—Ä–∞–º–µ—Ç—Ä:</span> {item.param}
                  </div>
                  <div className="truncate">
                    <span className="text-gray-500">–°—Å—ã–ª–∫–∞:</span> {item.link}
                  </div>
                </div>
              </div>
              
              <div className="ml-4">
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => copyToClipboard(item.link, item.name)}
                  className="whitespace-nowrap"
                >
                  {copiedLink === item.name ? (
                    <>
                      <svg className="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                      </svg>
                      –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ
                    </>
                  ) : (
                    <>
                      <svg className="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                      </svg>
                      –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                    </>
                  )}
                </Button>
              </div>
            </div>
          </div>
        ))}
      </div>

      <div className="mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
        <div className="flex items-start">
          <div className="text-blue-500 mr-3 mt-0.5">
            <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <div>
            <h4 className="font-medium text-blue-900 mb-1">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</h4>
            <div className="text-sm text-blue-800 space-y-1">
              <p>‚Ä¢ –°—Å—ã–ª–∫–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä <code className="bg-blue-100 px-1 rounded">startapp</code></p>
              <p>‚Ä¢ –ü—Ä–∏ –∫–ª–∏–∫–µ –≤ Telegram WebApp –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å —ç—Ç–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º</p>
              <p>‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É</p>
              <p>‚Ä¢ –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è —á–µ—Ä–µ–∑ Telegram API</p>
            </div>
          </div>
        </div>
      </div>

      <div className="mt-4 bg-green-50 border border-green-200 rounded-lg p-4">
        <div className="flex items-start">
          <div className="text-green-500 mr-3 mt-0.5">
            <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <div>
            <h4 className="font-medium text-green-900 mb-1">–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</h4>
            <div className="text-sm text-green-800 space-y-1">
              <p>‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É</p>
              <p>‚Ä¢ –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –æ—Ç—á–µ—Ç–∞–º –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥</p>
              <p>‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —è—Ä–ª—ã–∫–æ–≤ –¥–ª—è —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π</p>
              <p>‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –±–æ—Ç–∞</p>
            </div>
          </div>
        </div>
      </div>
    </Card>
  )
} 