import React, { useState, useEffect } from 'react';
import { useAuthStore } from '../store/useAuthStore';
import { useTelegramUI, useTelegramMainButton, useTelegramBackButton, hapticFeedback, showTelegramAlert, showTelegramConfirm } from '../hooks/useTelegramUI';
import { useIsTelegram, getTelegramUser } from '../hooks/useIsTelegram';
import { Card } from './ui/Card';
import { Button } from './ui/Button';
import MobileWorkLogForm from './MobileWorkLogForm';

const TelegramApp = () => {
  const [currentView, setCurrentView] = useState('main');
  const [workLogData, setWorkLogData] = useState({
    description: '',
    hours: 8,
    project: ''
  });
  
  const { user } = useAuthStore();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
  useTelegramUI();
  
  // –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞
  const isFormValid = workLogData.description.trim().length > 0;
  
  useTelegramMainButton(
    currentView === 'worklog' ? '–°–¥–∞—Ç—å –æ—Ç—á—ë—Ç' : null,
    () => {
      if (currentView === 'worklog' && isFormValid) {
        hapticFeedback('medium');
        handleSubmitWorkLog();
      }
    },
    currentView === 'worklog' && isFormValid
  );
  
  // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
  useTelegramBackButton(
    currentView !== 'main' ? () => {
      hapticFeedback('light');
      setCurrentView('main');
    } : null
  );

  const handleSubmitWorkLog = async () => {
    try {
      hapticFeedback('heavy');
      
      const response = await fetch('/api/work-logs', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${useAuthStore.getState().token}`
        },
        body: JSON.stringify({
          ...workLogData,
          date: new Date().toISOString().split('T')[0]
        })
      });

      if (response.ok) {
        showTelegramAlert('‚úÖ –û—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!', () => {
          setCurrentView('main');
          setWorkLogData({ description: '', hours: 8, project: '' });
        });
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞');
      }
    } catch (error) {
      showTelegramAlert('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
    }
  };

  const openWorkLog = () => {
    hapticFeedback('light');
    setCurrentView('worklog');
  };

  const openStats = () => {
    hapticFeedback('light');
    setCurrentView('stats');
  };

  const openAbsence = () => {
    hapticFeedback('light');
    showTelegramConfirm('–•–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ?', (confirmed) => {
      if (confirmed) {
        setCurrentView('absence');
      }
    });
  };

  // –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
  if (currentView === 'main') {
    return (
      <div className="min-h-screen bg-gray-50 telegram-safe-area">
        <div className="p-4">
          {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
          <div className="mb-6 text-center">
            <h1 className="text-2xl font-bold telegram-text mb-2">
              –ü—Ä–∏–≤–µ—Ç, {user?.name || '–ö–æ–ª–ª–µ–≥–∞'}! üëã
            </h1>
            <p className="telegram-hint">
              –ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è?
            </p>
          </div>

          {/* –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
          <div className="space-y-3">
            <Card 
              className="p-4 cursor-pointer hover:bg-gray-100 transition-colors"
              onClick={openWorkLog}
            >
              <div className="flex items-center space-x-3">
                <div className="w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center">
                  <span className="text-white text-xl">üìù</span>
                </div>
                <div>
                  <h3 className="font-semibold telegram-text">–°–¥–∞—Ç—å –æ—Ç—á—ë—Ç</h3>
                  <p className="text-sm telegram-hint">–†–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–≤–µ—Ä—à—ë–Ω</p>
                </div>
              </div>
            </Card>

            <Card 
              className="p-4 cursor-pointer hover:bg-gray-100 transition-colors"
              onClick={openStats}
            >
              <div className="flex items-center space-x-3">
                <div className="w-12 h-12 bg-green-500 rounded-full flex items-center justify-center">
                  <span className="text-white text-xl">üìä</span>
                </div>
                <div>
                  <h3 className="font-semibold telegram-text">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                  <p className="text-sm telegram-hint">–ú–æ–∏ —Ä–∞–±–æ—á–∏–µ —á–∞—Å—ã</p>
                </div>
              </div>
            </Card>

            <Card 
              className="p-4 cursor-pointer hover:bg-gray-100 transition-colors"
              onClick={openAbsence}
            >
              <div className="flex items-center space-x-3">
                <div className="w-12 h-12 bg-orange-500 rounded-full flex items-center justify-center">
                  <span className="text-white text-xl">üèñÔ∏è</span>
                </div>
                <div>
                  <h3 className="font-semibold telegram-text">–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ</h3>
                  <p className="text-sm telegram-hint">–û—Ç–ø—É—Å–∫ –∏–ª–∏ –±–æ–ª—å–Ω–∏—á–Ω—ã–π</p>
                </div>
              </div>
            </Card>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
          <div className="mt-8 p-4 bg-white rounded-lg">
            <div className="text-center">
              <p className="text-sm telegram-hint mb-1">–í–∞—à–∞ —Ä–æ–ª—å</p>
              <p className="font-semibold telegram-text">
                {user?.role === 'admin' ? 'üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : 
                 user?.role === 'manager' ? 'üéØ –ú–µ–Ω–µ–¥–∂–µ—Ä' : 'üë§ –°–æ—Ç—Ä—É–¥–Ω–∏–∫'}
              </p>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // –§–æ—Ä–º–∞ –æ—Ç—á—ë—Ç–∞
  if (currentView === 'worklog') {
    return (
      <MobileWorkLogForm 
        onBack={() => setCurrentView('main')}
        onSuccess={() => {
          setCurrentView('main');
          setWorkLogData({ description: '', hours: 8, project: '' });
        }}
      />
    );
  }

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  if (currentView === 'stats') {
    return (
      <div className="min-h-screen bg-gray-50 telegram-safe-area">
        <div className="p-4">
          <h2 className="text-xl font-bold telegram-text mb-6">üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
          
          <div className="space-y-4">
            <Card className="p-4">
              <div className="text-center">
                <p className="text-2xl font-bold text-blue-600">40</p>
                <p className="text-sm telegram-hint">–ß–∞—Å–æ–≤ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ</p>
              </div>
            </Card>

            <Card className="p-4">
              <div className="text-center">
                <p className="text-2xl font-bold text-green-600">160</p>
                <p className="text-sm telegram-hint">–ß–∞—Å–æ–≤ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ</p>
              </div>
            </Card>

            <Card className="p-4">
              <div className="text-center">
                <p className="text-2xl font-bold text-purple-600">98%</p>
                <p className="text-sm telegram-hint">–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å</p>
              </div>
            </Card>
          </div>
        </div>
      </div>
    );
  }

  // –ó–∞—è–≤–∫–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ
  if (currentView === 'absence') {
    return (
      <div className="min-h-screen bg-gray-50 telegram-safe-area">
        <div className="p-4">
          <h2 className="text-xl font-bold telegram-text mb-6">üèñÔ∏è –ó–∞—è–≤–∫–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ</h2>
          
          <div className="space-y-4">
            <Card className="p-4">
              <p className="telegram-text">
                –§—É–Ω–∫—Ü–∏—è —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞! 
              </p>
              <p className="text-sm telegram-hint mt-2">
                –ü–æ–∫–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ HR –∏–ª–∏ —Å–≤–æ–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É
              </p>
            </Card>
          </div>
        </div>
      </div>
    );
  }

  return null;
};

export default TelegramApp; 