import { useState, useEffect } from 'react';

/**
 * üîß Dev Mode Toggle ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å Telegram —Ä–µ–∂–∏–º–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—Ä—É—á–Ω—É—é –≤–∫–ª—é—á–∞—Ç—å/–≤—ã–∫–ª—é—á–∞—Ç—å Telegram WebApp —Ä–µ–∂–∏–º
 */

const DEV_STORAGE_KEY = 'hr_dev_telegram_mock';
const DEV_USER_KEY = 'hr_dev_mock_user';

export function useDevModeToggle() {
  const [isTelegramMode, setIsTelegramMode] = useState(false);
  const [mockUser, setMockUser] = useState('employee');
  const [isDevMode, setIsDevMode] = useState(false);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º development —Ä–µ–∂–∏–º
  useEffect(() => {
    setIsDevMode(process.env.NODE_ENV === 'development');
  }, []);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ localStorage
  useEffect(() => {
    if (!isDevMode) return;

    const savedMode = localStorage.getItem(DEV_STORAGE_KEY);
    const savedUser = localStorage.getItem(DEV_USER_KEY);
    
    if (savedMode === 'true') {
      setIsTelegramMode(true);
    }
    
    if (savedUser) {
      setMockUser(savedUser);
    }
  }, [isDevMode]);

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ Telegram —Ä–µ–∂–∏–º–∞
  const toggleTelegramMode = () => {
    if (!isDevMode) return;

    const newMode = !isTelegramMode;
    setIsTelegramMode(newMode);
    localStorage.setItem(DEV_STORAGE_KEY, newMode.toString());

    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    setTimeout(() => {
      window.location.reload();
    }, 100);
  };

  // –°–º–µ–Ω–∞ mock –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const changeMockUser = (userRole) => {
    if (!isDevMode) return;

    setMockUser(userRole);
    localStorage.setItem(DEV_USER_KEY, userRole);

    // –û–±–Ω–æ–≤–ª—è–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
    const url = new URL(window.location);
    url.searchParams.set('mock_role', userRole);
    window.history.replaceState(null, '', url.toString());

    // –ï—Å–ª–∏ mock –∞–∫—Ç–∏–≤–µ–Ω, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if (isTelegramMode) {
      setTimeout(() => {
        window.location.reload();
      }, 100);
    }
  };

  // –°–±—Ä–æ—Å –≤—Å–µ—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const resetDevSettings = () => {
    if (!isDevMode) return;

    localStorage.removeItem(DEV_STORAGE_KEY);
    localStorage.removeItem(DEV_USER_KEY);
    setIsTelegramMode(false);
    setMockUser('employee');

    // –û—á–∏—â–∞–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    const url = new URL(window.location);
    url.searchParams.delete('mock_role');
    url.searchParams.delete('mock_user');
    window.history.replaceState(null, '', url.toString());

    setTimeout(() => {
      window.location.reload();
    }, 100);
  };

  // –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const quickActions = {
    // –í–∫–ª—é—á–∏—Ç—å Telegram —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Ä–æ–ª—å—é
    enableTelegramAs: (role) => {
      if (!isDevMode) return;
      
      localStorage.setItem(DEV_STORAGE_KEY, 'true');
      localStorage.setItem(DEV_USER_KEY, role);
      
      const url = new URL(window.location);
      url.searchParams.set('mock_role', role);
      window.history.replaceState(null, '', url.toString());
      
      setTimeout(() => {
        window.location.reload();
      }, 100);
    },

    // –ë—ã—Å—Ç—Ä–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Ä–æ–ª—è–º–∏ (–µ—Å–ª–∏ Telegram —É–∂–µ –≤–∫–ª—é—á–µ–Ω)
    switchRole: (role) => {
      if (!isDevMode || !isTelegramMode) return;
      changeMockUser(role);
    },

    // –í–∫–ª—é—á–∏—Ç—å –æ–±—ã—á–Ω—ã–π –≤–µ–± —Ä–µ–∂–∏–º
    enableWebMode: () => {
      if (!isDevMode) return;
      
      localStorage.setItem(DEV_STORAGE_KEY, 'false');
      
      const url = new URL(window.location);
      url.searchParams.delete('mock_role');
      url.searchParams.delete('mock_user');
      window.history.replaceState(null, '', url.toString());
      
      setTimeout(() => {
        window.location.reload();
      }, 100);
    }
  };

  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
  const status = {
    isDevMode,
    isTelegramMode,
    currentUser: mockUser,
    hasRealTelegram: !!window.Telegram?.WebApp?.initDataUnsafe?.user,
    isMocked: isDevMode && isTelegramMode && !window.location.href.includes('telegram.org')
  };

  return {
    // –û—Å–Ω–æ–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    isDevMode,
    isTelegramMode,
    mockUser,
    status,

    // –î–µ–π—Å—Ç–≤–∏—è
    toggleTelegramMode,
    changeMockUser,
    resetDevSettings,
    quickActions,

    // –£—Ç–∏–ª–∏—Ç—ã
    isEnabled: isDevMode,
    canToggle: isDevMode
  };
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è UI
export const DEV_MOCK_USERS = [
  { id: 'employee', name: '–ú—É—Ö–∞–º–µ–¥ –ö–µ–ª–µ–º–µ—Ç–æ–≤', role: 'employee', emoji: 'üë®‚Äçüíº' },
  { id: 'manager', name: '–ü–µ—Ç—Ä –ú–µ–Ω–µ–¥–∂–µ—Ä–æ–≤', role: 'manager', emoji: 'üë®‚Äçüíº' },
  { id: 'admin', name: '–ê–Ω–Ω–∞ –ê–¥–º–∏–Ω–æ–≤–∞', role: 'admin', emoji: 'üë®‚Äçüîß' }
];

// –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
if (process.env.NODE_ENV === 'development') {
  window.devTelegram = {
    enable: () => {
      localStorage.setItem(DEV_STORAGE_KEY, 'true');
      window.location.reload();
    },
    disable: () => {
      localStorage.setItem(DEV_STORAGE_KEY, 'false');
      window.location.reload();
    },
    asEmployee: () => {
      localStorage.setItem(DEV_STORAGE_KEY, 'true');
      localStorage.setItem(DEV_USER_KEY, 'employee');
      window.location.href = window.location.pathname + '?mock_role=employee';
    },
    asAdmin: () => {
      localStorage.setItem(DEV_STORAGE_KEY, 'true');
      localStorage.setItem(DEV_USER_KEY, 'admin');
      window.location.href = window.location.pathname + '?mock_role=admin';
    },
    asManager: () => {
      localStorage.setItem(DEV_STORAGE_KEY, 'true');
      localStorage.setItem(DEV_USER_KEY, 'manager');
      window.location.href = window.location.pathname + '?mock_role=manager';
    },
    reset: () => {
      localStorage.removeItem(DEV_STORAGE_KEY);
      localStorage.removeItem(DEV_USER_KEY);
      window.location.href = window.location.pathname;
    }
  };
  
  console.log('üîß Dev Commands –¥–æ—Å—Ç—É–ø–Ω—ã –≤ window.devTelegram:');
  console.log('- devTelegram.enable() ‚Äî –≤–∫–ª—é—á–∏—Ç—å Telegram —Ä–µ–∂–∏–º');
  console.log('- devTelegram.disable() ‚Äî –≤—ã–∫–ª—é—á–∏—Ç—å Telegram —Ä–µ–∂–∏–º');
  console.log('- devTelegram.asEmployee() ‚Äî –≤–∫–ª—é—á–∏—Ç—å –∫–∞–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫');
  console.log('- devTelegram.asAdmin() ‚Äî –≤–∫–ª—é—á–∏—Ç—å –∫–∞–∫ –∞–¥–º–∏–Ω');
  console.log('- devTelegram.asManager() ‚Äî –≤–∫–ª—é—á–∏—Ç—å –∫–∞–∫ –º–µ–Ω–µ–¥–∂–µ—Ä');
  console.log('- devTelegram.reset() ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
} 