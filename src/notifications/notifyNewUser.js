"use strict";

const { _info, _error, _warn, _debug } = require("../utils/logger");

const { _sendTelegramMessage } = require("../utils/sendTelegramMessage");

const WEB_APP_URL = process.env.WEB_APP_URL || "http://localhost:5173";

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å URL –≤ Telegram –∫–Ω–æ–ø–∫–∞—Ö
 */
function canUseUrlInTelegram(url) {
  // Telegram –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç localhost –∏ —Ç—Ä–µ–±—É–µ—Ç HTTPS –¥–ª—è production
  return (
    !url.includes("localhost") &&
    (url.startsWith("https://") || process.env.NODE_ENV === "development")
  );
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * @param {Object} userData - –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function notifyNewUser(userData) {
  const { telegramId, firstName, lastName, role } = userData;

  const roleText = {
    employee: "—Å–æ—Ç—Ä—É–¥–Ω–∏–∫",
    manager: "–º–µ–Ω–µ–¥–∂–µ—Ä",
    admin: "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
  };

  const message = `
üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TimeBot!</b>

üëã –ü—Ä–∏–≤–µ—Ç, ${firstName} ${lastName || ""}!

üîê <b>–í–∞—à–∞ —Ä–æ–ª—å:</b> ${roleText[role] || role}
üì± –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ—á–∞—Ç—å —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ—Ç—á—ë—Ç—ã –ø—Ä—è–º–æ –∏–∑ Telegram!

<b>–ß—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å:</b>
${
  role === "manager" || role === "admin"
    ? "‚Ä¢ üë• –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–º–∞–Ω–¥–æ–π\n‚Ä¢ üìä –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –æ—Ç—á—ë—Ç—ã\n‚Ä¢ ‚öôÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–æ–≥–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\n"
    : ""
}‚Ä¢ ‚è∞ –û—Ç–º–µ—á–∞—Ç—å –ø—Ä–∏—Ö–æ–¥ –∏ —É—Ö–æ–¥
‚Ä¢ üìù –ü–∏—Å–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –æ—Ç—á—ë—Ç—ã
‚Ä¢ üìà –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É

üí° <b>–°–æ–≤–µ—Ç:</b> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º.
${!canUseUrlInTelegram(WEB_APP_URL) ? "\nüîó –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É–±–ª–∏—á–Ω–æ–≥–æ URL." : ""}
  `.trim();

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ URL –≤–∞–ª–∏–¥–µ–Ω –¥–ª—è Telegram
  const options = {
    parse_mode: "HTML",
  };

  if (canUseUrlInTelegram(WEB_APP_URL)) {
    options.reply_markup = {
      inline_keyboard: [
        [
          {
            text: "üöÄ –û—Ç–∫—Ä—ã—Ç—å TimeBot",
            url: `${WEB_APP_URL}?welcome=true`,
          },
        ],
        [
          {
            text:
              role === "manager" || role === "admin"
                ? "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π"
                : "üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            url:
              role === "manager" || role === "admin"
                ? `${WEB_APP_URL}?page=team`
                : `${WEB_APP_URL}?page=stats`,
          },
        ],
      ],
    };
  }

  try {
    const result = await _sendTelegramMessage(telegramId, message, options);

    if (result) {
      _info(
        `‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${firstName} (${telegramId})`,
      );
    }

    return result;
  } catch (err) {
    _error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:", err);
    throw err;
  }
}

module.exports = { notifyNewUser };
