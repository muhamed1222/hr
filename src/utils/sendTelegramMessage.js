"use strict";

const _axios = require("axios");
const { info, error, debug } = require("./logger");

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_API_URL = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;
const MAX_TELEGRAM_ID = 9999999999; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π Telegram ID

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å Telegram chat ID
 */
function isValidTelegramId(chatId) {
  // Telegram chat ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç 1 –¥–æ 9999999999
  const id = parseInt(chatId);
  return !isNaN(id) && id > 0 && id <= MAX_TELEGRAM_ID;
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
 * @param {string|number} chatId - ID —á–∞—Ç–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
 * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
 * @returns {Object|null} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–ª–∏ null –ø—Ä–∏ –æ—à–∏–±–∫–µ
 */
async function sendTelegramMessage(chatId, message, options = {}) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    if (!TELEGRAM_BOT_TOKEN || TELEGRAM_BOT_TOKEN === "placeholder") {
      debug("[Telegram] Token –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã");
      return null;
    }

    // –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º - –ª–æ–≥–∏—Ä—É–µ–º –Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    if (TELEGRAM_BOT_TOKEN === "test_mode") {
      info("[Telegram] –¢–ï–°–¢ —Ä–µ–∂–∏–º", { chatId, messageLength: message.length });
      return { ok: true, test_mode: true };
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è chat ID
    if (!isValidTelegramId(chatId)) {
      debug("[Telegram] –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π chat ID", { chatId });
      return null;
    }

    const payload = {
      chat_id: chatId,
      text: message,
      parse_mode: options.parseMode || "HTML",
      disable_web_page_preview: options.disablePreview || true,
      disable_notification: options.silent || false,
      ...options,
    };

    debug("[Telegram] –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è", {
      chatId,
      messageLength: message.length,
    });

    const response = await axios.post(TELEGRAM_API_URL, payload, {
      timeout: LIMITS.MAX_PAGE_SIZE00, // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
    });

    info("[Telegram] –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ", {
      chatId,
      messageId: response.data.result?.message_id,
    });
    return response.data;
  } catch (err) {
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
    if (err.response?.data?.error_code === HTTP_STATUS_CODES.BAD_REQUEST) {
      const description = err.response.data.description;

      if (description.includes("chat not found")) {
        debug("[Telegram] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", { chatId });
        return null; // –¢–∏—Ö–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
      }

      if (description.includes("blocked")) {
        info("[Telegram] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞", { chatId });
        return null;
      }
    }

    // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–µ—Ä—å—ë–∑–Ω—ã–µ –æ—à–∏–±–∫–∏
    error("[Telegram] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏", {
      chatId,
      error: err.response?.data || err.message,
      status: err.response?.status,
    });

    return null;
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–±–æ—á–µ–≥–æ –ª–æ–≥–∞
 */
async function notifyWorkLogEdited(
  userTelegramId,
  workDate,
  managerName,
  changes,
) {
  const changesText = Object.keys(changes)
    .map((key) => {
      return `‚Ä¢ ${getFieldName(key)}: ${changes[key]}`;
    })
    .join("\n");

  const message = `
üìù <b>–í–∞—à —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω</b>

üóì <b>–î–∞—Ç–∞:</b> ${workDate}
üë§ <b>–ú–µ–Ω–µ–¥–∂–µ—Ä:</b> ${managerName}

<b>–ò–∑–º–µ–Ω–µ–Ω–∏—è:</b>
${changesText}

‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å–∏—Å—Ç–µ–º–µ.
  `.trim();

  return await sendTelegramMessage(userTelegramId, message);
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —ç–∫—Å–ø–æ—Ä—Ç–µ –æ—Ç—á—ë—Ç–∞
 */
async function notifyReportExported(managerTelegramId, reportType, period) {
  const message = `
üìä <b>–û—Ç—á—ë—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω</b>

üìà <b>–¢–∏–ø:</b> ${reportType}
üóì <b>–ü–µ—Ä–∏–æ–¥:</b> ${period}
‚è∞ <b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString("ru-RU")}

‚úÖ –§–∞–π–ª –≥–æ—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.
  `.trim();

  return await sendTelegramMessage(managerTelegramId, message);
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 */
async function sendTestMessage(chatId) {
  const message = `
ü§ñ <b>–¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π TimeBot</b>

‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString("ru-RU")}
üöÄ –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–Ω–∞
  `.trim();

  return await sendTelegramMessage(chatId, message);
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è
 */
function getFieldName(field) {
  const fieldNames = {
    arrivedAt: "–í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞",
    leftAt: "–í—Ä–µ–º—è —É—Ö–æ–¥–∞",
    lunchStart: "–ù–∞—á–∞–ª–æ –æ–±–µ–¥–∞",
    lunchEnd: "–û–∫–æ–Ω—á–∞–Ω–∏–µ –æ–±–µ–¥–∞",
    workMode: "–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã",
    dailyReport: "–û—Ç—á—ë—Ç –æ —Ä–∞–±–æ—Ç–µ",
    problems: "–ü—Ä–æ–±–ª–µ–º—ã",
  };

  return fieldNames[field] || field;
}

module.exports = {
  sendTelegramMessage,
  notifyWorkLogEdited,
  notifyReportExported,
  sendTestMessage,
};
